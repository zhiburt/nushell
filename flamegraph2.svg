<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="646" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="629.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="629.00"> </text><svg id="frames" x="10" width="1180" total_samples="605"><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.33%)</title><rect x="0.0000%" y="565" width="0.3306%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="575.50"></text></g><g><title>&lt;ansi_parser::enums::AnsiSequence as core::fmt::Display&gt;::fmt (1 samples, 0.17%)</title><rect x="0.3306%" y="565" width="0.1653%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="1"/><text x="0.5806%" y="575.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position (3 samples, 0.50%)</title><rect x="0.4959%" y="549" width="0.4959%" height="15" fill="rgb(221,193,54)" fg:x="3" fg:w="3"/><text x="0.7459%" y="559.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1 (1 samples, 0.17%)</title><rect x="0.9917%" y="549" width="0.1653%" height="15" fill="rgb(248,212,6)" fg:x="6" fg:w="1"/><text x="1.2417%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.17%)</title><rect x="1.1570%" y="549" width="0.1653%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="1"/><text x="1.4070%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.17%)</title><rect x="1.3223%" y="549" width="0.1653%" height="15" fill="rgb(232,128,0)" fg:x="8" fg:w="1"/><text x="1.5723%" y="559.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.17%)</title><rect x="1.4876%" y="533" width="0.1653%" height="15" fill="rgb(207,160,47)" fg:x="9" fg:w="1"/><text x="1.7376%" y="543.50"></text></g><g><title>&lt;ansi_parser::enums::AnsiSequence as core::fmt::Display&gt;::fmt (2 samples, 0.33%)</title><rect x="1.4876%" y="549" width="0.3306%" height="15" fill="rgb(228,23,34)" fg:x="9" fg:w="2"/><text x="1.7376%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.17%)</title><rect x="1.6529%" y="533" width="0.1653%" height="15" fill="rgb(218,30,26)" fg:x="10" fg:w="1"/><text x="1.9029%" y="543.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.50%)</title><rect x="1.8182%" y="549" width="0.4959%" height="15" fill="rgb(220,122,19)" fg:x="11" fg:w="3"/><text x="2.0682%" y="559.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (1 samples, 0.17%)</title><rect x="2.3140%" y="549" width="0.1653%" height="15" fill="rgb(250,228,42)" fg:x="14" fg:w="1"/><text x="2.5640%" y="559.50"></text></g><g><title>malloc (1 samples, 0.17%)</title><rect x="2.3140%" y="533" width="0.1653%" height="15" fill="rgb(240,193,28)" fg:x="14" fg:w="1"/><text x="2.5640%" y="543.50"></text></g><g><title>ansi_parser::parsers::cursor_backward (4 samples, 0.66%)</title><rect x="2.4793%" y="549" width="0.6612%" height="15" fill="rgb(216,20,37)" fg:x="15" fg:w="4"/><text x="2.7293%" y="559.50"></text></g><g><title>ansi_parser::parsers::cursor_forward (1 samples, 0.17%)</title><rect x="3.1405%" y="549" width="0.1653%" height="15" fill="rgb(206,188,39)" fg:x="19" fg:w="1"/><text x="3.3905%" y="559.50"></text></g><g><title>ansi_parser::parsers::graphics_mode (2 samples, 0.33%)</title><rect x="3.3058%" y="549" width="0.3306%" height="15" fill="rgb(217,207,13)" fg:x="20" fg:w="2"/><text x="3.5558%" y="559.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (4 samples, 0.66%)</title><rect x="3.6364%" y="549" width="0.6612%" height="15" fill="rgb(231,73,38)" fg:x="22" fg:w="4"/><text x="3.8864%" y="559.50"></text></g><g><title>ansi_str::update_ansi_state (4 samples, 0.66%)</title><rect x="4.2975%" y="549" width="0.6612%" height="15" fill="rgb(225,20,46)" fg:x="26" fg:w="4"/><text x="4.5475%" y="559.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (2 samples, 0.33%)</title><rect x="4.9587%" y="549" width="0.3306%" height="15" fill="rgb(210,31,41)" fg:x="30" fg:w="2"/><text x="5.2087%" y="559.50"></text></g><g><title>[[heap]] (30 samples, 4.96%)</title><rect x="0.4959%" y="565" width="4.9587%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="30"/><text x="0.7459%" y="575.50">[[heap..</text></g><g><title>malloc (1 samples, 0.17%)</title><rect x="5.2893%" y="549" width="0.1653%" height="15" fill="rgb(226,26,5)" fg:x="32" fg:w="1"/><text x="5.5393%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (7 samples, 1.16%)</title><rect x="5.4545%" y="549" width="1.1570%" height="15" fill="rgb(249,33,26)" fg:x="33" fg:w="7"/><text x="5.7045%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.17%)</title><rect x="6.6116%" y="549" width="0.1653%" height="15" fill="rgb(235,183,28)" fg:x="40" fg:w="1"/><text x="6.8616%" y="559.50"></text></g><g><title>nu_parser::parser::parse_expression (1 samples, 0.17%)</title><rect x="6.6116%" y="533" width="0.1653%" height="15" fill="rgb(221,5,38)" fg:x="40" fg:w="1"/><text x="6.8616%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="6.7769%" y="549" width="0.1653%" height="15" fill="rgb(247,18,42)" fg:x="41" fg:w="1"/><text x="7.0269%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.17%)</title><rect x="6.9421%" y="549" width="0.1653%" height="15" fill="rgb(241,131,45)" fg:x="42" fg:w="1"/><text x="7.1921%" y="559.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (4 samples, 0.66%)</title><rect x="7.1074%" y="549" width="0.6612%" height="15" fill="rgb(249,31,29)" fg:x="43" fg:w="4"/><text x="7.3574%" y="559.50"></text></g><g><title>ansi_parser::parsers::parse_escape (1 samples, 0.17%)</title><rect x="7.7686%" y="549" width="0.1653%" height="15" fill="rgb(225,111,53)" fg:x="47" fg:w="1"/><text x="8.0186%" y="559.50"></text></g><g><title>ansi_str::get (1 samples, 0.17%)</title><rect x="7.9339%" y="549" width="0.1653%" height="15" fill="rgb(238,160,17)" fg:x="48" fg:w="1"/><text x="8.1839%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.33%)</title><rect x="8.0992%" y="549" width="0.3306%" height="15" fill="rgb(214,148,48)" fg:x="49" fg:w="2"/><text x="8.3492%" y="559.50"></text></g><g><title>core::slice::memchr::memchr_general_case (2 samples, 0.33%)</title><rect x="8.4298%" y="549" width="0.3306%" height="15" fill="rgb(232,36,49)" fg:x="51" fg:w="2"/><text x="8.6798%" y="559.50"></text></g><g><title>nu_parser::lex::is_item_terminator (1 samples, 0.17%)</title><rect x="8.7603%" y="549" width="0.1653%" height="15" fill="rgb(209,103,24)" fg:x="53" fg:w="1"/><text x="9.0103%" y="559.50"></text></g><g><title>nu_parser::parser::parse_value (1 samples, 0.17%)</title><rect x="8.9256%" y="549" width="0.1653%" height="15" fill="rgb(229,88,8)" fg:x="54" fg:w="1"/><text x="9.1756%" y="559.50"></text></g><g><title>[[stack]] (24 samples, 3.97%)</title><rect x="5.4545%" y="565" width="3.9669%" height="15" fill="rgb(213,181,19)" fg:x="33" fg:w="24"/><text x="5.7045%" y="575.50">[[st..</text></g><g><title>vte::Parser::perform_action (2 samples, 0.33%)</title><rect x="9.0909%" y="549" width="0.3306%" height="15" fill="rgb(254,191,54)" fg:x="55" fg:w="2"/><text x="9.3409%" y="559.50"></text></g><g><title>[anon] (1 samples, 0.17%)</title><rect x="9.4215%" y="565" width="0.1653%" height="15" fill="rgb(241,83,37)" fg:x="57" fg:w="1"/><text x="9.6715%" y="575.50"></text></g><g><title>nu_parser::lex::is_item_terminator (1 samples, 0.17%)</title><rect x="9.4215%" y="549" width="0.1653%" height="15" fill="rgb(233,36,39)" fg:x="57" fg:w="1"/><text x="9.6715%" y="559.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.50%)</title><rect x="11.5702%" y="485" width="0.4959%" height="15" fill="rgb(226,3,54)" fg:x="70" fg:w="3"/><text x="11.8202%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.50%)</title><rect x="11.5702%" y="469" width="0.4959%" height="15" fill="rgb(245,192,40)" fg:x="70" fg:w="3"/><text x="11.8202%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.33%)</title><rect x="11.7355%" y="453" width="0.3306%" height="15" fill="rgb(238,167,29)" fg:x="71" fg:w="2"/><text x="11.9855%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (16 samples, 2.64%)</title><rect x="9.5868%" y="565" width="2.6446%" height="15" fill="rgb(232,182,51)" fg:x="58" fg:w="16"/><text x="9.8368%" y="575.50">[l..</text></g><g><title>[ld-linux-x86-64.so.2] (10 samples, 1.65%)</title><rect x="10.5785%" y="549" width="1.6529%" height="15" fill="rgb(231,60,39)" fg:x="64" fg:w="10"/><text x="10.8285%" y="559.50"></text></g><g><title>[ld-linux-x86-64.so.2] (10 samples, 1.65%)</title><rect x="10.5785%" y="533" width="1.6529%" height="15" fill="rgb(208,69,12)" fg:x="64" fg:w="10"/><text x="10.8285%" y="543.50"></text></g><g><title>[ld-linux-x86-64.so.2] (9 samples, 1.49%)</title><rect x="10.7438%" y="517" width="1.4876%" height="15" fill="rgb(235,93,37)" fg:x="65" fg:w="9"/><text x="10.9938%" y="527.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 1.32%)</title><rect x="10.9091%" y="501" width="1.3223%" height="15" fill="rgb(213,116,39)" fg:x="66" fg:w="8"/><text x="11.1591%" y="511.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.17%)</title><rect x="12.0661%" y="485" width="0.1653%" height="15" fill="rgb(222,207,29)" fg:x="73" fg:w="1"/><text x="12.3161%" y="495.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.17%)</title><rect x="12.0661%" y="469" width="0.1653%" height="15" fill="rgb(206,96,30)" fg:x="73" fg:w="1"/><text x="12.3161%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.17%)</title><rect x="12.0661%" y="453" width="0.1653%" height="15" fill="rgb(218,138,4)" fg:x="73" fg:w="1"/><text x="12.3161%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.17%)</title><rect x="12.0661%" y="437" width="0.1653%" height="15" fill="rgb(250,191,14)" fg:x="73" fg:w="1"/><text x="12.3161%" y="447.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (1 samples, 0.17%)</title><rect x="12.2314%" y="549" width="0.1653%" height="15" fill="rgb(239,60,40)" fg:x="74" fg:w="1"/><text x="12.4814%" y="559.50"></text></g><g><title>[libc.so.6] (2 samples, 0.33%)</title><rect x="12.2314%" y="565" width="0.3306%" height="15" fill="rgb(206,27,48)" fg:x="74" fg:w="2"/><text x="12.4814%" y="575.50"></text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="12.3967%" y="549" width="0.1653%" height="15" fill="rgb(225,35,8)" fg:x="75" fg:w="1"/><text x="12.6467%" y="559.50"></text></g><g><title>[nu] (4 samples, 0.66%)</title><rect x="12.5620%" y="565" width="0.6612%" height="15" fill="rgb(250,213,24)" fg:x="76" fg:w="4"/><text x="12.8120%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.66%)</title><rect x="12.5620%" y="549" width="0.6612%" height="15" fill="rgb(247,123,22)" fg:x="76" fg:w="4"/><text x="12.8120%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.17%)</title><rect x="14.3802%" y="549" width="0.1653%" height="15" fill="rgb(231,138,38)" fg:x="87" fg:w="1"/><text x="14.6302%" y="559.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1 (1 samples, 0.17%)</title><rect x="14.5455%" y="549" width="0.1653%" height="15" fill="rgb(231,145,46)" fg:x="88" fg:w="1"/><text x="14.7955%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.17%)</title><rect x="14.7107%" y="549" width="0.1653%" height="15" fill="rgb(251,118,11)" fg:x="89" fg:w="1"/><text x="14.9607%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (1 samples, 0.17%)</title><rect x="14.8760%" y="549" width="0.1653%" height="15" fill="rgb(217,147,25)" fg:x="90" fg:w="1"/><text x="15.1260%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.17%)</title><rect x="15.0413%" y="549" width="0.1653%" height="15" fill="rgb(247,81,37)" fg:x="91" fg:w="1"/><text x="15.2913%" y="559.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.17%)</title><rect x="15.2066%" y="549" width="0.1653%" height="15" fill="rgb(209,12,38)" fg:x="92" fg:w="1"/><text x="15.4566%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="15.3719%" y="373" width="0.1653%" height="15" fill="rgb(227,1,9)" fg:x="93" fg:w="1"/><text x="15.6219%" y="383.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (3 samples, 0.50%)</title><rect x="15.3719%" y="533" width="0.4959%" height="15" fill="rgb(248,47,43)" fg:x="93" fg:w="3"/><text x="15.6219%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.50%)</title><rect x="15.3719%" y="517" width="0.4959%" height="15" fill="rgb(221,10,30)" fg:x="93" fg:w="3"/><text x="15.6219%" y="527.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (3 samples, 0.50%)</title><rect x="15.3719%" y="501" width="0.4959%" height="15" fill="rgb(210,229,1)" fg:x="93" fg:w="3"/><text x="15.6219%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.50%)</title><rect x="15.3719%" y="485" width="0.4959%" height="15" fill="rgb(222,148,37)" fg:x="93" fg:w="3"/><text x="15.6219%" y="495.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (3 samples, 0.50%)</title><rect x="15.3719%" y="469" width="0.4959%" height="15" fill="rgb(234,67,33)" fg:x="93" fg:w="3"/><text x="15.6219%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.50%)</title><rect x="15.3719%" y="453" width="0.4959%" height="15" fill="rgb(247,98,35)" fg:x="93" fg:w="3"/><text x="15.6219%" y="463.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (3 samples, 0.50%)</title><rect x="15.3719%" y="437" width="0.4959%" height="15" fill="rgb(247,138,52)" fg:x="93" fg:w="3"/><text x="15.6219%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.50%)</title><rect x="15.3719%" y="421" width="0.4959%" height="15" fill="rgb(213,79,30)" fg:x="93" fg:w="3"/><text x="15.6219%" y="431.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (3 samples, 0.50%)</title><rect x="15.3719%" y="405" width="0.4959%" height="15" fill="rgb(246,177,23)" fg:x="93" fg:w="3"/><text x="15.6219%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.50%)</title><rect x="15.3719%" y="389" width="0.4959%" height="15" fill="rgb(230,62,27)" fg:x="93" fg:w="3"/><text x="15.6219%" y="399.50"></text></g><g><title>malloc (2 samples, 0.33%)</title><rect x="15.5372%" y="373" width="0.3306%" height="15" fill="rgb(216,154,8)" fg:x="94" fg:w="2"/><text x="15.7872%" y="383.50"></text></g><g><title>&lt;tabled::modify::ModifyList&lt;O,S&gt; as tabled::table::TableOption&gt;::change (1 samples, 0.17%)</title><rect x="15.8678%" y="501" width="0.1653%" height="15" fill="rgb(244,35,45)" fg:x="96" fg:w="1"/><text x="16.1178%" y="511.50"></text></g><g><title>&lt;tabled::alignment::Alignment as tabled::table::CellOption&gt;::change_cell (1 samples, 0.17%)</title><rect x="15.8678%" y="485" width="0.1653%" height="15" fill="rgb(251,115,12)" fg:x="96" fg:w="1"/><text x="16.1178%" y="495.50"></text></g><g><title>papergrid::Grid::set (1 samples, 0.17%)</title><rect x="15.8678%" y="469" width="0.1653%" height="15" fill="rgb(240,54,50)" fg:x="96" fg:w="1"/><text x="16.1178%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.17%)</title><rect x="15.8678%" y="453" width="0.1653%" height="15" fill="rgb(233,84,52)" fg:x="96" fg:w="1"/><text x="16.1178%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.17%)</title><rect x="15.8678%" y="437" width="0.1653%" height="15" fill="rgb(207,117,47)" fg:x="96" fg:w="1"/><text x="16.1178%" y="447.50"></text></g><g><title>&lt;tabled::width::Wrap&lt;W,P&gt; as tabled::table::TableOption&gt;::change (2 samples, 0.33%)</title><rect x="16.0331%" y="501" width="0.3306%" height="15" fill="rgb(249,43,39)" fg:x="97" fg:w="2"/><text x="16.2831%" y="511.50"></text></g><g><title>papergrid::Grid::total_width (2 samples, 0.33%)</title><rect x="16.0331%" y="485" width="0.3306%" height="15" fill="rgb(209,38,44)" fg:x="97" fg:w="2"/><text x="16.2831%" y="495.50"></text></g><g><title>papergrid::cells_content (2 samples, 0.33%)</title><rect x="16.0331%" y="469" width="0.3306%" height="15" fill="rgb(236,212,23)" fg:x="97" fg:w="2"/><text x="16.2831%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.17%)</title><rect x="16.1983%" y="453" width="0.1653%" height="15" fill="rgb(242,79,21)" fg:x="98" fg:w="1"/><text x="16.4483%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.17%)</title><rect x="16.1983%" y="437" width="0.1653%" height="15" fill="rgb(211,96,35)" fg:x="98" fg:w="1"/><text x="16.4483%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.17%)</title><rect x="16.1983%" y="421" width="0.1653%" height="15" fill="rgb(253,215,40)" fg:x="98" fg:w="1"/><text x="16.4483%" y="431.50"></text></g><g><title>papergrid::string_width (1 samples, 0.17%)</title><rect x="16.1983%" y="405" width="0.1653%" height="15" fill="rgb(211,81,21)" fg:x="98" fg:w="1"/><text x="16.4483%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.17%)</title><rect x="16.1983%" y="389" width="0.1653%" height="15" fill="rgb(208,190,38)" fg:x="98" fg:w="1"/><text x="16.4483%" y="399.50"></text></g><g><title>papergrid::replace_tab (1 samples, 0.17%)</title><rect x="16.3636%" y="469" width="0.1653%" height="15" fill="rgb(235,213,38)" fg:x="99" fg:w="1"/><text x="16.6136%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.17%)</title><rect x="16.3636%" y="453" width="0.1653%" height="15" fill="rgb(237,122,38)" fg:x="99" fg:w="1"/><text x="16.6136%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.17%)</title><rect x="16.3636%" y="437" width="0.1653%" height="15" fill="rgb(244,218,35)" fg:x="99" fg:w="1"/><text x="16.6136%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.17%)</title><rect x="16.3636%" y="421" width="0.1653%" height="15" fill="rgb(240,68,47)" fg:x="99" fg:w="1"/><text x="16.6136%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.17%)</title><rect x="16.3636%" y="405" width="0.1653%" height="15" fill="rgb(210,16,53)" fg:x="99" fg:w="1"/><text x="16.6136%" y="415.50"></text></g><g><title>malloc (1 samples, 0.17%)</title><rect x="16.3636%" y="389" width="0.1653%" height="15" fill="rgb(235,124,12)" fg:x="99" fg:w="1"/><text x="16.6136%" y="399.50"></text></g><g><title>papergrid::string_width_multiline (1 samples, 0.17%)</title><rect x="16.5289%" y="469" width="0.1653%" height="15" fill="rgb(224,169,11)" fg:x="100" fg:w="1"/><text x="16.7789%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.17%)</title><rect x="16.5289%" y="453" width="0.1653%" height="15" fill="rgb(250,166,2)" fg:x="100" fg:w="1"/><text x="16.7789%" y="463.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.17%)</title><rect x="16.5289%" y="437" width="0.1653%" height="15" fill="rgb(242,216,29)" fg:x="100" fg:w="1"/><text x="16.7789%" y="447.50"></text></g><g><title>core::slice::memchr::memchr_general_case (1 samples, 0.17%)</title><rect x="16.5289%" y="421" width="0.1653%" height="15" fill="rgb(230,116,27)" fg:x="100" fg:w="1"/><text x="16.7789%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.33%)</title><rect x="16.6942%" y="421" width="0.3306%" height="15" fill="rgb(228,99,48)" fg:x="101" fg:w="2"/><text x="16.9442%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.33%)</title><rect x="16.6942%" y="405" width="0.3306%" height="15" fill="rgb(253,11,6)" fg:x="101" fg:w="2"/><text x="16.9442%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.33%)</title><rect x="16.6942%" y="389" width="0.3306%" height="15" fill="rgb(247,143,39)" fg:x="101" fg:w="2"/><text x="16.9442%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.33%)</title><rect x="16.6942%" y="373" width="0.3306%" height="15" fill="rgb(236,97,10)" fg:x="101" fg:w="2"/><text x="16.9442%" y="383.50"></text></g><g><title>realloc (2 samples, 0.33%)</title><rect x="16.6942%" y="357" width="0.3306%" height="15" fill="rgb(233,208,19)" fg:x="101" fg:w="2"/><text x="16.9442%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="16.8595%" y="341" width="0.1653%" height="15" fill="rgb(216,164,2)" fg:x="102" fg:w="1"/><text x="17.1095%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="16.8595%" y="325" width="0.1653%" height="15" fill="rgb(220,129,5)" fg:x="102" fg:w="1"/><text x="17.1095%" y="335.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.17%)</title><rect x="17.0248%" y="421" width="0.1653%" height="15" fill="rgb(242,17,10)" fg:x="103" fg:w="1"/><text x="17.2748%" y="431.50"></text></g><g><title>core::slice::memchr::memchr_general_case (1 samples, 0.17%)</title><rect x="17.0248%" y="405" width="0.1653%" height="15" fill="rgb(242,107,0)" fg:x="103" fg:w="1"/><text x="17.2748%" y="415.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.17%)</title><rect x="17.3554%" y="357" width="0.1653%" height="15" fill="rgb(251,28,31)" fg:x="105" fg:w="1"/><text x="17.6054%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.17%)</title><rect x="17.3554%" y="341" width="0.1653%" height="15" fill="rgb(233,223,10)" fg:x="105" fg:w="1"/><text x="17.6054%" y="351.50"></text></g><g><title>ansi_str::begin_ansi_sequences (3 samples, 0.50%)</title><rect x="17.1901%" y="421" width="0.4959%" height="15" fill="rgb(215,21,27)" fg:x="104" fg:w="3"/><text x="17.4401%" y="431.50"></text></g><g><title>ansi_str::emit_ansi_color (2 samples, 0.33%)</title><rect x="17.3554%" y="405" width="0.3306%" height="15" fill="rgb(232,23,21)" fg:x="105" fg:w="2"/><text x="17.6054%" y="415.50"></text></g><g><title>core::fmt::write (2 samples, 0.33%)</title><rect x="17.3554%" y="389" width="0.3306%" height="15" fill="rgb(244,5,23)" fg:x="105" fg:w="2"/><text x="17.6054%" y="399.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (2 samples, 0.33%)</title><rect x="17.3554%" y="373" width="0.3306%" height="15" fill="rgb(226,81,46)" fg:x="105" fg:w="2"/><text x="17.6054%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;&amp;mut alloc::string::String&gt; (1 samples, 0.17%)</title><rect x="17.5207%" y="357" width="0.1653%" height="15" fill="rgb(247,70,30)" fg:x="106" fg:w="1"/><text x="17.7707%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.17%)</title><rect x="17.5207%" y="341" width="0.1653%" height="15" fill="rgb(212,68,19)" fg:x="106" fg:w="1"/><text x="17.7707%" y="351.50"></text></g><g><title>&lt;nu_command::viewers::table::PagingTableCreator as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 2.64%)</title><rect x="15.3719%" y="549" width="2.6446%" height="15" fill="rgb(240,187,13)" fg:x="93" fg:w="16"/><text x="15.6219%" y="559.50">&lt;n..</text></g><g><title>nu_command::viewers::table::build_table (13 samples, 2.15%)</title><rect x="15.8678%" y="533" width="2.1488%" height="15" fill="rgb(223,113,26)" fg:x="96" fg:w="13"/><text x="16.1178%" y="543.50">n..</text></g><g><title>tabled::table::Table::with (13 samples, 2.15%)</title><rect x="15.8678%" y="517" width="2.1488%" height="15" fill="rgb(206,192,2)" fg:x="96" fg:w="13"/><text x="16.1178%" y="527.50">t..</text></g><g><title>tabled::width::wrap_total_width (10 samples, 1.65%)</title><rect x="16.3636%" y="501" width="1.6529%" height="15" fill="rgb(241,108,4)" fg:x="99" fg:w="10"/><text x="16.6136%" y="511.50"></text></g><g><title>&lt;tabled::width::Wrap&lt;W&gt; as tabled::table::CellOption&gt;::change_cell (10 samples, 1.65%)</title><rect x="16.3636%" y="485" width="1.6529%" height="15" fill="rgb(247,173,49)" fg:x="99" fg:w="10"/><text x="16.6136%" y="495.50"></text></g><g><title>papergrid::wrap_text (8 samples, 1.32%)</title><rect x="16.6942%" y="469" width="1.3223%" height="15" fill="rgb(224,114,35)" fg:x="101" fg:w="8"/><text x="16.9442%" y="479.50"></text></g><g><title>papergrid::split_by_lines (8 samples, 1.32%)</title><rect x="16.6942%" y="453" width="1.3223%" height="15" fill="rgb(245,159,27)" fg:x="101" fg:w="8"/><text x="16.9442%" y="463.50"></text></g><g><title>&lt;str as ansi_str::AnsiStr&gt;::ansi_split_at (8 samples, 1.32%)</title><rect x="16.6942%" y="437" width="1.3223%" height="15" fill="rgb(245,172,44)" fg:x="101" fg:w="8"/><text x="16.9442%" y="447.50"></text></g><g><title>ansi_str::complete_ansi_sequences (2 samples, 0.33%)</title><rect x="17.6860%" y="421" width="0.3306%" height="15" fill="rgb(236,23,11)" fg:x="107" fg:w="2"/><text x="17.9360%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.17%)</title><rect x="17.8512%" y="405" width="0.1653%" height="15" fill="rgb(205,117,38)" fg:x="108" fg:w="1"/><text x="18.1012%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.17%)</title><rect x="17.8512%" y="389" width="0.1653%" height="15" fill="rgb(237,72,25)" fg:x="108" fg:w="1"/><text x="18.1012%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.17%)</title><rect x="17.8512%" y="373" width="0.1653%" height="15" fill="rgb(244,70,9)" fg:x="108" fg:w="1"/><text x="18.1012%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.17%)</title><rect x="17.8512%" y="357" width="0.1653%" height="15" fill="rgb(217,125,39)" fg:x="108" fg:w="1"/><text x="18.1012%" y="367.50"></text></g><g><title>realloc (1 samples, 0.17%)</title><rect x="17.8512%" y="341" width="0.1653%" height="15" fill="rgb(235,36,10)" fg:x="108" fg:w="1"/><text x="18.1012%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="17.8512%" y="325" width="0.1653%" height="15" fill="rgb(251,123,47)" fg:x="108" fg:w="1"/><text x="18.1012%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="17.8512%" y="309" width="0.1653%" height="15" fill="rgb(221,13,13)" fg:x="108" fg:w="1"/><text x="18.1012%" y="319.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1 (1 samples, 0.17%)</title><rect x="20.3306%" y="293" width="0.1653%" height="15" fill="rgb(238,131,9)" fg:x="123" fg:w="1"/><text x="20.5806%" y="303.50"></text></g><g><title>&lt;nu_protocol::pipeline_data::PipelineIterator as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 3.14%)</title><rect x="18.0165%" y="549" width="3.1405%" height="15" fill="rgb(211,50,8)" fg:x="109" fg:w="19"/><text x="18.2665%" y="559.50">&lt;nu..</text></g><g><title>&lt;nu_protocol::value::stream::RawStream as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 3.14%)</title><rect x="18.0165%" y="533" width="3.1405%" height="15" fill="rgb(245,182,24)" fg:x="109" fg:w="19"/><text x="18.2665%" y="543.50">&lt;nu..</text></g><g><title>&lt;nu_command::viewers::table::PagingTableCreator as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 3.14%)</title><rect x="18.0165%" y="517" width="3.1405%" height="15" fill="rgb(242,14,37)" fg:x="109" fg:w="19"/><text x="18.2665%" y="527.50">&lt;nu..</text></g><g><title>nu_command::viewers::table::print_table (19 samples, 3.14%)</title><rect x="18.0165%" y="501" width="3.1405%" height="15" fill="rgb(246,228,12)" fg:x="109" fg:w="19"/><text x="18.2665%" y="511.50">nu_..</text></g><g><title>core::fmt::write (19 samples, 3.14%)</title><rect x="18.0165%" y="485" width="3.1405%" height="15" fill="rgb(213,55,15)" fg:x="109" fg:w="19"/><text x="18.2665%" y="495.50">cor..</text></g><g><title>&lt;papergrid::Grid as core::fmt::Display&gt;::fmt (19 samples, 3.14%)</title><rect x="18.0165%" y="469" width="3.1405%" height="15" fill="rgb(209,9,3)" fg:x="109" fg:w="19"/><text x="18.2665%" y="479.50">&lt;pa..</text></g><g><title>papergrid::cells_content (19 samples, 3.14%)</title><rect x="18.0165%" y="453" width="3.1405%" height="15" fill="rgb(230,59,30)" fg:x="109" fg:w="19"/><text x="18.2665%" y="463.50">pap..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (19 samples, 3.14%)</title><rect x="18.0165%" y="437" width="3.1405%" height="15" fill="rgb(209,121,21)" fg:x="109" fg:w="19"/><text x="18.2665%" y="447.50">&lt;al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (19 samples, 3.14%)</title><rect x="18.0165%" y="421" width="3.1405%" height="15" fill="rgb(220,109,13)" fg:x="109" fg:w="19"/><text x="18.2665%" y="431.50">all..</text></g><g><title>&lt;ansi_str::AnsiSplit as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 3.14%)</title><rect x="18.0165%" y="405" width="3.1405%" height="15" fill="rgb(232,18,1)" fg:x="109" fg:w="19"/><text x="18.2665%" y="415.50">&lt;an..</text></g><g><title>&lt;str as ansi_str::AnsiStr&gt;::ansi_get (19 samples, 3.14%)</title><rect x="18.0165%" y="389" width="3.1405%" height="15" fill="rgb(215,41,42)" fg:x="109" fg:w="19"/><text x="18.2665%" y="399.50">&lt;st..</text></g><g><title>ansi_str::get (19 samples, 3.14%)</title><rect x="18.0165%" y="373" width="3.1405%" height="15" fill="rgb(224,123,36)" fg:x="109" fg:w="19"/><text x="18.2665%" y="383.50">ans..</text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 3.14%)</title><rect x="18.0165%" y="357" width="3.1405%" height="15" fill="rgb(240,125,3)" fg:x="109" fg:w="19"/><text x="18.2665%" y="367.50">&lt;an..</text></g><g><title>ansi_parser::parsers::parse_escape (19 samples, 3.14%)</title><rect x="18.0165%" y="341" width="3.1405%" height="15" fill="rgb(205,98,50)" fg:x="109" fg:w="19"/><text x="18.2665%" y="351.50">ans..</text></g><g><title>ansi_parser::parsers::graphics_mode (19 samples, 3.14%)</title><rect x="18.0165%" y="325" width="3.1405%" height="15" fill="rgb(205,185,37)" fg:x="109" fg:w="19"/><text x="18.2665%" y="335.50">ans..</text></g><g><title>ansi_parser::parsers::parse_int (7 samples, 1.16%)</title><rect x="20.0000%" y="309" width="1.1570%" height="15" fill="rgb(238,207,15)" fg:x="121" fg:w="7"/><text x="20.2500%" y="319.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (4 samples, 0.66%)</title><rect x="20.4959%" y="293" width="0.6612%" height="15" fill="rgb(213,199,42)" fg:x="124" fg:w="4"/><text x="20.7459%" y="303.50"></text></g><g><title>&lt;nu_protocol::syntax_shape::SyntaxShape as core::cmp::PartialEq&gt;::eq (1 samples, 0.17%)</title><rect x="21.1570%" y="549" width="0.1653%" height="15" fill="rgb(235,201,11)" fg:x="128" fg:w="1"/><text x="21.4070%" y="559.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.17%)</title><rect x="21.3223%" y="549" width="0.1653%" height="15" fill="rgb(207,46,11)" fg:x="129" fg:w="1"/><text x="21.5723%" y="559.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (3 samples, 0.50%)</title><rect x="21.4876%" y="549" width="0.4959%" height="15" fill="rgb(241,35,35)" fg:x="130" fg:w="3"/><text x="21.7376%" y="559.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.17%)</title><rect x="21.9835%" y="549" width="0.1653%" height="15" fill="rgb(243,32,47)" fg:x="133" fg:w="1"/><text x="22.2335%" y="559.50"></text></g><g><title>__libc_start_main (3 samples, 0.50%)</title><rect x="22.1488%" y="549" width="0.4959%" height="15" fill="rgb(247,202,23)" fg:x="134" fg:w="3"/><text x="22.3988%" y="559.50"></text></g><g><title>[libc.so.6] (3 samples, 0.50%)</title><rect x="22.1488%" y="533" width="0.4959%" height="15" fill="rgb(219,102,11)" fg:x="134" fg:w="3"/><text x="22.3988%" y="543.50"></text></g><g><title>main (3 samples, 0.50%)</title><rect x="22.1488%" y="517" width="0.4959%" height="15" fill="rgb(243,110,44)" fg:x="134" fg:w="3"/><text x="22.3988%" y="527.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 0.50%)</title><rect x="22.1488%" y="501" width="0.4959%" height="15" fill="rgb(222,74,54)" fg:x="134" fg:w="3"/><text x="22.3988%" y="511.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 0.50%)</title><rect x="22.1488%" y="485" width="0.4959%" height="15" fill="rgb(216,99,12)" fg:x="134" fg:w="3"/><text x="22.3988%" y="495.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 0.50%)</title><rect x="22.1488%" y="469" width="0.4959%" height="15" fill="rgb(226,22,26)" fg:x="134" fg:w="3"/><text x="22.3988%" y="479.50"></text></g><g><title>nu::main (3 samples, 0.50%)</title><rect x="22.1488%" y="453" width="0.4959%" height="15" fill="rgb(217,163,10)" fg:x="134" fg:w="3"/><text x="22.3988%" y="463.50"></text></g><g><title>nu_cli::eval_file::evaluate_file (3 samples, 0.50%)</title><rect x="22.1488%" y="437" width="0.4959%" height="15" fill="rgb(213,25,53)" fg:x="134" fg:w="3"/><text x="22.3988%" y="447.50"></text></g><g><title>nu_parser::parser::parse (3 samples, 0.50%)</title><rect x="22.1488%" y="421" width="0.4959%" height="15" fill="rgb(252,105,26)" fg:x="134" fg:w="3"/><text x="22.3988%" y="431.50"></text></g><g><title>nu_parser::lex::lex (3 samples, 0.50%)</title><rect x="22.1488%" y="405" width="0.4959%" height="15" fill="rgb(220,39,43)" fg:x="134" fg:w="3"/><text x="22.3988%" y="415.50"></text></g><g><title>ansi_str::update_ansi_state (2 samples, 0.33%)</title><rect x="22.6446%" y="549" width="0.3306%" height="15" fill="rgb(229,68,48)" fg:x="137" fg:w="2"/><text x="22.8946%" y="559.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (2 samples, 0.33%)</title><rect x="22.9752%" y="549" width="0.3306%" height="15" fill="rgb(252,8,32)" fg:x="139" fg:w="2"/><text x="23.2252%" y="559.50"></text></g><g><title>core::fmt::write (3 samples, 0.50%)</title><rect x="23.3058%" y="549" width="0.4959%" height="15" fill="rgb(223,20,43)" fg:x="141" fg:w="3"/><text x="23.5558%" y="559.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.17%)</title><rect x="23.8017%" y="549" width="0.1653%" height="15" fill="rgb(229,81,49)" fg:x="144" fg:w="1"/><text x="24.0517%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.17%)</title><rect x="23.9669%" y="549" width="0.1653%" height="15" fill="rgb(236,28,36)" fg:x="145" fg:w="1"/><text x="24.2169%" y="559.50"></text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="24.1322%" y="293" width="0.1653%" height="15" fill="rgb(249,185,26)" fg:x="146" fg:w="1"/><text x="24.3822%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="24.1322%" y="277" width="0.1653%" height="15" fill="rgb(249,174,33)" fg:x="146" fg:w="1"/><text x="24.3822%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="24.1322%" y="261" width="0.1653%" height="15" fill="rgb(233,201,37)" fg:x="146" fg:w="1"/><text x="24.3822%" y="271.50"></text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="24.2975%" y="133" width="0.1653%" height="15" fill="rgb(221,78,26)" fg:x="147" fg:w="1"/><text x="24.5475%" y="143.50"></text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="24.4628%" y="101" width="0.1653%" height="15" fill="rgb(250,127,30)" fg:x="148" fg:w="1"/><text x="24.7128%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt; (1 samples, 0.17%)</title><rect x="24.6281%" y="69" width="0.1653%" height="15" fill="rgb(230,49,44)" fg:x="149" fg:w="1"/><text x="24.8781%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.17%)</title><rect x="24.6281%" y="53" width="0.1653%" height="15" fill="rgb(229,67,23)" fg:x="149" fg:w="1"/><text x="24.8781%" y="63.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.17%)</title><rect x="24.6281%" y="37" width="0.1653%" height="15" fill="rgb(249,83,47)" fg:x="149" fg:w="1"/><text x="24.8781%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::block::Block&gt; (5 samples, 0.83%)</title><rect x="24.1322%" y="501" width="0.8264%" height="15" fill="rgb(215,43,3)" fg:x="146" fg:w="5"/><text x="24.3822%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::pipeline::Pipeline&gt;&gt; (5 samples, 0.83%)</title><rect x="24.1322%" y="485" width="0.8264%" height="15" fill="rgb(238,154,13)" fg:x="146" fg:w="5"/><text x="24.3822%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.83%)</title><rect x="24.1322%" y="469" width="0.8264%" height="15" fill="rgb(219,56,2)" fg:x="146" fg:w="5"/><text x="24.3822%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt; (5 samples, 0.83%)</title><rect x="24.1322%" y="453" width="0.8264%" height="15" fill="rgb(233,0,4)" fg:x="146" fg:w="5"/><text x="24.3822%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.83%)</title><rect x="24.1322%" y="437" width="0.8264%" height="15" fill="rgb(235,30,7)" fg:x="146" fg:w="5"/><text x="24.3822%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (5 samples, 0.83%)</title><rect x="24.1322%" y="421" width="0.8264%" height="15" fill="rgb(250,79,13)" fg:x="146" fg:w="5"/><text x="24.3822%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (5 samples, 0.83%)</title><rect x="24.1322%" y="405" width="0.8264%" height="15" fill="rgb(211,146,34)" fg:x="146" fg:w="5"/><text x="24.3822%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (5 samples, 0.83%)</title><rect x="24.1322%" y="389" width="0.8264%" height="15" fill="rgb(228,22,38)" fg:x="146" fg:w="5"/><text x="24.3822%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt; (5 samples, 0.83%)</title><rect x="24.1322%" y="373" width="0.8264%" height="15" fill="rgb(235,168,5)" fg:x="146" fg:w="5"/><text x="24.3822%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.83%)</title><rect x="24.1322%" y="357" width="0.8264%" height="15" fill="rgb(221,155,16)" fg:x="146" fg:w="5"/><text x="24.3822%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (5 samples, 0.83%)</title><rect x="24.1322%" y="341" width="0.8264%" height="15" fill="rgb(215,215,53)" fg:x="146" fg:w="5"/><text x="24.3822%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (5 samples, 0.83%)</title><rect x="24.1322%" y="325" width="0.8264%" height="15" fill="rgb(223,4,10)" fg:x="146" fg:w="5"/><text x="24.3822%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (5 samples, 0.83%)</title><rect x="24.1322%" y="309" width="0.8264%" height="15" fill="rgb(234,103,6)" fg:x="146" fg:w="5"/><text x="24.3822%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt;&gt; (4 samples, 0.66%)</title><rect x="24.2975%" y="293" width="0.6612%" height="15" fill="rgb(227,97,0)" fg:x="147" fg:w="4"/><text x="24.5475%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.66%)</title><rect x="24.2975%" y="277" width="0.6612%" height="15" fill="rgb(234,150,53)" fg:x="147" fg:w="4"/><text x="24.5475%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (4 samples, 0.66%)</title><rect x="24.2975%" y="261" width="0.6612%" height="15" fill="rgb(228,201,54)" fg:x="147" fg:w="4"/><text x="24.5475%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (4 samples, 0.66%)</title><rect x="24.2975%" y="245" width="0.6612%" height="15" fill="rgb(222,22,37)" fg:x="147" fg:w="4"/><text x="24.5475%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (4 samples, 0.66%)</title><rect x="24.2975%" y="229" width="0.6612%" height="15" fill="rgb(237,53,32)" fg:x="147" fg:w="4"/><text x="24.5475%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt;&gt; (4 samples, 0.66%)</title><rect x="24.2975%" y="213" width="0.6612%" height="15" fill="rgb(233,25,53)" fg:x="147" fg:w="4"/><text x="24.5475%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.66%)</title><rect x="24.2975%" y="197" width="0.6612%" height="15" fill="rgb(210,40,34)" fg:x="147" fg:w="4"/><text x="24.5475%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt; (4 samples, 0.66%)</title><rect x="24.2975%" y="181" width="0.6612%" height="15" fill="rgb(241,220,44)" fg:x="147" fg:w="4"/><text x="24.5475%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.66%)</title><rect x="24.2975%" y="165" width="0.6612%" height="15" fill="rgb(235,28,35)" fg:x="147" fg:w="4"/><text x="24.5475%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (4 samples, 0.66%)</title><rect x="24.2975%" y="149" width="0.6612%" height="15" fill="rgb(210,56,17)" fg:x="147" fg:w="4"/><text x="24.5475%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (3 samples, 0.50%)</title><rect x="24.4628%" y="133" width="0.4959%" height="15" fill="rgb(224,130,29)" fg:x="148" fg:w="3"/><text x="24.7128%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (3 samples, 0.50%)</title><rect x="24.4628%" y="117" width="0.4959%" height="15" fill="rgb(235,212,8)" fg:x="148" fg:w="3"/><text x="24.7128%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt;&gt; (2 samples, 0.33%)</title><rect x="24.6281%" y="101" width="0.3306%" height="15" fill="rgb(223,33,50)" fg:x="149" fg:w="2"/><text x="24.8781%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.33%)</title><rect x="24.6281%" y="85" width="0.3306%" height="15" fill="rgb(219,149,13)" fg:x="149" fg:w="2"/><text x="24.8781%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.17%)</title><rect x="24.7934%" y="69" width="0.1653%" height="15" fill="rgb(250,156,29)" fg:x="150" fg:w="1"/><text x="25.0434%" y="79.50"></text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="24.7934%" y="53" width="0.1653%" height="15" fill="rgb(216,193,19)" fg:x="150" fg:w="1"/><text x="25.0434%" y="63.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="24.7934%" y="37" width="0.1653%" height="15" fill="rgb(216,135,14)" fg:x="150" fg:w="1"/><text x="25.0434%" y="47.50"></text></g><g><title>nu_parser::parser::parse (1 samples, 0.17%)</title><rect x="24.9587%" y="501" width="0.1653%" height="15" fill="rgb(241,47,5)" fg:x="151" fg:w="1"/><text x="25.2087%" y="511.50"></text></g><g><title>nu_parser::lex::lex (1 samples, 0.17%)</title><rect x="24.9587%" y="485" width="0.1653%" height="15" fill="rgb(233,42,35)" fg:x="151" fg:w="1"/><text x="25.2087%" y="495.50"></text></g><g><title>&lt;nu_protocol::ty::Type as core::fmt::Display&gt;::fmt (1 samples, 0.17%)</title><rect x="25.2893%" y="437" width="0.1653%" height="15" fill="rgb(231,13,6)" fg:x="153" fg:w="1"/><text x="25.5393%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.17%)</title><rect x="25.2893%" y="421" width="0.1653%" height="15" fill="rgb(207,181,40)" fg:x="153" fg:w="1"/><text x="25.5393%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.17%)</title><rect x="25.2893%" y="405" width="0.1653%" height="15" fill="rgb(254,173,49)" fg:x="153" fg:w="1"/><text x="25.5393%" y="415.50"></text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="25.2893%" y="389" width="0.1653%" height="15" fill="rgb(221,1,38)" fg:x="153" fg:w="1"/><text x="25.5393%" y="399.50"></text></g><g><title>&lt;nu_command::viewers::table::PagingTableCreator as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.50%)</title><rect x="25.1240%" y="453" width="0.4959%" height="15" fill="rgb(206,124,46)" fg:x="152" fg:w="3"/><text x="25.3740%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (1 samples, 0.17%)</title><rect x="25.4545%" y="437" width="0.1653%" height="15" fill="rgb(249,21,11)" fg:x="154" fg:w="1"/><text x="25.7045%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.17%)</title><rect x="25.4545%" y="421" width="0.1653%" height="15" fill="rgb(222,201,40)" fg:x="154" fg:w="1"/><text x="25.7045%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (1 samples, 0.17%)</title><rect x="25.4545%" y="405" width="0.1653%" height="15" fill="rgb(235,61,29)" fg:x="154" fg:w="1"/><text x="25.7045%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.17%)</title><rect x="25.4545%" y="389" width="0.1653%" height="15" fill="rgb(219,207,3)" fg:x="154" fg:w="1"/><text x="25.7045%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::value::Value&gt; (1 samples, 0.17%)</title><rect x="25.4545%" y="373" width="0.1653%" height="15" fill="rgb(222,56,46)" fg:x="154" fg:w="1"/><text x="25.7045%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.17%)</title><rect x="25.4545%" y="357" width="0.1653%" height="15" fill="rgb(239,76,54)" fg:x="154" fg:w="1"/><text x="25.7045%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.17%)</title><rect x="25.4545%" y="341" width="0.1653%" height="15" fill="rgb(231,124,27)" fg:x="154" fg:w="1"/><text x="25.7045%" y="351.50"></text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="25.4545%" y="325" width="0.1653%" height="15" fill="rgb(249,195,6)" fg:x="154" fg:w="1"/><text x="25.7045%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="25.4545%" y="309" width="0.1653%" height="15" fill="rgb(237,174,47)" fg:x="154" fg:w="1"/><text x="25.7045%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.17%)</title><rect x="25.6198%" y="453" width="0.1653%" height="15" fill="rgb(206,201,31)" fg:x="155" fg:w="1"/><text x="25.8698%" y="463.50"></text></g><g><title>malloc (1 samples, 0.17%)</title><rect x="25.6198%" y="437" width="0.1653%" height="15" fill="rgb(231,57,52)" fg:x="155" fg:w="1"/><text x="25.8698%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="25.6198%" y="421" width="0.1653%" height="15" fill="rgb(248,177,22)" fg:x="155" fg:w="1"/><text x="25.8698%" y="431.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="25.6198%" y="405" width="0.1653%" height="15" fill="rgb(215,211,37)" fg:x="155" fg:w="1"/><text x="25.8698%" y="415.50"></text></g><g><title>&lt;nu_protocol::pipeline_data::PipelineIterator as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 1.82%)</title><rect x="25.1240%" y="485" width="1.8182%" height="15" fill="rgb(241,128,51)" fg:x="152" fg:w="11"/><text x="25.3740%" y="495.50">&lt;..</text></g><g><title>&lt;nu_protocol::value::stream::RawStream as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 1.82%)</title><rect x="25.1240%" y="469" width="1.8182%" height="15" fill="rgb(227,165,31)" fg:x="152" fg:w="11"/><text x="25.3740%" y="479.50">&lt;..</text></g><g><title>core::str::converts::from_utf8 (7 samples, 1.16%)</title><rect x="25.7851%" y="453" width="1.1570%" height="15" fill="rgb(228,167,24)" fg:x="156" fg:w="7"/><text x="26.0351%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.50%)</title><rect x="26.9421%" y="485" width="0.4959%" height="15" fill="rgb(228,143,12)" fg:x="163" fg:w="3"/><text x="27.1921%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.50%)</title><rect x="26.9421%" y="469" width="0.4959%" height="15" fill="rgb(249,149,8)" fg:x="163" fg:w="3"/><text x="27.1921%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.50%)</title><rect x="26.9421%" y="453" width="0.4959%" height="15" fill="rgb(243,35,44)" fg:x="163" fg:w="3"/><text x="27.1921%" y="463.50"></text></g><g><title>realloc (3 samples, 0.50%)</title><rect x="26.9421%" y="437" width="0.4959%" height="15" fill="rgb(246,89,9)" fg:x="163" fg:w="3"/><text x="27.1921%" y="447.50"></text></g><g><title>[libc.so.6] (3 samples, 0.50%)</title><rect x="26.9421%" y="421" width="0.4959%" height="15" fill="rgb(233,213,13)" fg:x="163" fg:w="3"/><text x="27.1921%" y="431.50"></text></g><g><title>[libc.so.6] (3 samples, 0.50%)</title><rect x="26.9421%" y="405" width="0.4959%" height="15" fill="rgb(233,141,41)" fg:x="163" fg:w="3"/><text x="27.1921%" y="415.50"></text></g><g><title>nu_cli::util::eval_source (24 samples, 3.97%)</title><rect x="24.1322%" y="517" width="3.9669%" height="15" fill="rgb(239,167,4)" fg:x="146" fg:w="24"/><text x="24.3822%" y="527.50">nu_c..</text></g><g><title>nu_protocol::pipeline_data::PipelineData::print (18 samples, 2.98%)</title><rect x="25.1240%" y="501" width="2.9752%" height="15" fill="rgb(209,217,16)" fg:x="152" fg:w="18"/><text x="25.3740%" y="511.50">nu_..</text></g><g><title>nu_protocol::value::Value::into_string (4 samples, 0.66%)</title><rect x="27.4380%" y="485" width="0.6612%" height="15" fill="rgb(219,88,35)" fg:x="166" fg:w="4"/><text x="27.6880%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.66%)</title><rect x="27.4380%" y="469" width="0.6612%" height="15" fill="rgb(220,193,23)" fg:x="166" fg:w="4"/><text x="27.6880%" y="479.50"></text></g><g><title>[libc.so.6] (4 samples, 0.66%)</title><rect x="27.4380%" y="453" width="0.6612%" height="15" fill="rgb(230,90,52)" fg:x="166" fg:w="4"/><text x="27.6880%" y="463.50"></text></g><g><title>nu::main (25 samples, 4.13%)</title><rect x="24.1322%" y="549" width="4.1322%" height="15" fill="rgb(252,106,19)" fg:x="146" fg:w="25"/><text x="24.3822%" y="559.50">nu::m..</text></g><g><title>nu_cli::eval_file::evaluate_file (25 samples, 4.13%)</title><rect x="24.1322%" y="533" width="4.1322%" height="15" fill="rgb(206,74,20)" fg:x="146" fg:w="25"/><text x="24.3822%" y="543.50">nu_cl..</text></g><g><title>nu_parser::parser::parse (1 samples, 0.17%)</title><rect x="28.0992%" y="517" width="0.1653%" height="15" fill="rgb(230,138,44)" fg:x="170" fg:w="1"/><text x="28.3492%" y="527.50"></text></g><g><title>nu_parser::parser::parse_block (1 samples, 0.17%)</title><rect x="28.0992%" y="501" width="0.1653%" height="15" fill="rgb(235,182,43)" fg:x="170" fg:w="1"/><text x="28.3492%" y="511.50"></text></g><g><title>&lt;nu_protocol::ast::block::Block as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.17%)</title><rect x="28.0992%" y="485" width="0.1653%" height="15" fill="rgb(242,16,51)" fg:x="170" fg:w="1"/><text x="28.3492%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.17%)</title><rect x="28.0992%" y="469" width="0.1653%" height="15" fill="rgb(248,9,4)" fg:x="170" fg:w="1"/><text x="28.3492%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.17%)</title><rect x="28.0992%" y="453" width="0.1653%" height="15" fill="rgb(210,31,22)" fg:x="170" fg:w="1"/><text x="28.3492%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.17%)</title><rect x="28.0992%" y="437" width="0.1653%" height="15" fill="rgb(239,54,39)" fg:x="170" fg:w="1"/><text x="28.3492%" y="447.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.17%)</title><rect x="28.0992%" y="421" width="0.1653%" height="15" fill="rgb(230,99,41)" fg:x="170" fg:w="1"/><text x="28.3492%" y="431.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.17%)</title><rect x="28.0992%" y="405" width="0.1653%" height="15" fill="rgb(253,106,12)" fg:x="170" fg:w="1"/><text x="28.3492%" y="415.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.17%)</title><rect x="28.0992%" y="389" width="0.1653%" height="15" fill="rgb(213,46,41)" fg:x="170" fg:w="1"/><text x="28.3492%" y="399.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.17%)</title><rect x="28.0992%" y="373" width="0.1653%" height="15" fill="rgb(215,133,35)" fg:x="170" fg:w="1"/><text x="28.3492%" y="383.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (8 samples, 1.32%)</title><rect x="28.2645%" y="453" width="1.3223%" height="15" fill="rgb(213,28,5)" fg:x="171" fg:w="8"/><text x="28.5145%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 1.32%)</title><rect x="28.2645%" y="437" width="1.3223%" height="15" fill="rgb(215,77,49)" fg:x="171" fg:w="8"/><text x="28.5145%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 1.32%)</title><rect x="28.2645%" y="421" width="1.3223%" height="15" fill="rgb(248,100,22)" fg:x="171" fg:w="8"/><text x="28.5145%" y="431.50"></text></g><g><title>malloc (8 samples, 1.32%)</title><rect x="28.2645%" y="405" width="1.3223%" height="15" fill="rgb(208,67,9)" fg:x="171" fg:w="8"/><text x="28.5145%" y="415.50"></text></g><g><title>[libc.so.6] (8 samples, 1.32%)</title><rect x="28.2645%" y="389" width="1.3223%" height="15" fill="rgb(219,133,21)" fg:x="171" fg:w="8"/><text x="28.5145%" y="399.50"></text></g><g><title>[libc.so.6] (4 samples, 0.66%)</title><rect x="28.9256%" y="373" width="0.6612%" height="15" fill="rgb(246,46,29)" fg:x="175" fg:w="4"/><text x="29.1756%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (4 samples, 0.66%)</title><rect x="29.9174%" y="405" width="0.6612%" height="15" fill="rgb(246,185,52)" fg:x="181" fg:w="4"/><text x="30.1674%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;papergrid::CellContent&gt;&gt;&gt; (2 samples, 0.33%)</title><rect x="30.5785%" y="405" width="0.3306%" height="15" fill="rgb(252,136,11)" fg:x="185" fg:w="2"/><text x="30.8285%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.33%)</title><rect x="30.5785%" y="389" width="0.3306%" height="15" fill="rgb(219,138,53)" fg:x="185" fg:w="2"/><text x="30.8285%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;papergrid::CellContent&gt;&gt; (2 samples, 0.33%)</title><rect x="30.5785%" y="373" width="0.3306%" height="15" fill="rgb(211,51,23)" fg:x="185" fg:w="2"/><text x="30.8285%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.33%)</title><rect x="30.5785%" y="357" width="0.3306%" height="15" fill="rgb(247,221,28)" fg:x="185" fg:w="2"/><text x="30.8285%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;papergrid::CellContent&gt; (2 samples, 0.33%)</title><rect x="30.5785%" y="341" width="0.3306%" height="15" fill="rgb(251,222,45)" fg:x="185" fg:w="2"/><text x="30.8285%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt; (2 samples, 0.33%)</title><rect x="30.5785%" y="325" width="0.3306%" height="15" fill="rgb(217,162,53)" fg:x="185" fg:w="2"/><text x="30.8285%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.33%)</title><rect x="30.5785%" y="309" width="0.3306%" height="15" fill="rgb(229,93,14)" fg:x="185" fg:w="2"/><text x="30.8285%" y="319.50"></text></g><g><title>cfree (2 samples, 0.33%)</title><rect x="30.5785%" y="293" width="0.3306%" height="15" fill="rgb(209,67,49)" fg:x="185" fg:w="2"/><text x="30.8285%" y="303.50"></text></g><g><title>[libc.so.6] (2 samples, 0.33%)</title><rect x="30.5785%" y="277" width="0.3306%" height="15" fill="rgb(213,87,29)" fg:x="185" fg:w="2"/><text x="30.8285%" y="287.50"></text></g><g><title>&lt;papergrid::Entity as core::hash::Hash&gt;::hash (2 samples, 0.33%)</title><rect x="31.7355%" y="373" width="0.3306%" height="15" fill="rgb(205,151,52)" fg:x="192" fg:w="2"/><text x="31.9855%" y="383.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.17%)</title><rect x="31.9008%" y="357" width="0.1653%" height="15" fill="rgb(253,215,39)" fg:x="193" fg:w="1"/><text x="32.1508%" y="367.50"></text></g><g><title>papergrid::Grid::style (9 samples, 1.49%)</title><rect x="30.9091%" y="405" width="1.4876%" height="15" fill="rgb(221,220,41)" fg:x="187" fg:w="9"/><text x="31.1591%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.83%)</title><rect x="31.5702%" y="389" width="0.8264%" height="15" fill="rgb(218,133,21)" fg:x="191" fg:w="5"/><text x="31.8202%" y="399.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.33%)</title><rect x="32.0661%" y="373" width="0.3306%" height="15" fill="rgb(221,193,43)" fg:x="194" fg:w="2"/><text x="32.3161%" y="383.50"></text></g><g><title>nu_cli::eval_file::evaluate_file (41 samples, 6.78%)</title><rect x="28.2645%" y="549" width="6.7769%" height="15" fill="rgb(240,128,52)" fg:x="171" fg:w="41"/><text x="28.5145%" y="559.50">nu_cli::e..</text></g><g><title>nu_cli::util::eval_source (41 samples, 6.78%)</title><rect x="28.2645%" y="533" width="6.7769%" height="15" fill="rgb(253,114,12)" fg:x="171" fg:w="41"/><text x="28.5145%" y="543.50">nu_cli::u..</text></g><g><title>nu_protocol::pipeline_data::PipelineData::print (41 samples, 6.78%)</title><rect x="28.2645%" y="517" width="6.7769%" height="15" fill="rgb(215,223,47)" fg:x="171" fg:w="41"/><text x="28.5145%" y="527.50">nu_protoc..</text></g><g><title>&lt;nu_protocol::pipeline_data::PipelineIterator as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 6.78%)</title><rect x="28.2645%" y="501" width="6.7769%" height="15" fill="rgb(248,225,23)" fg:x="171" fg:w="41"/><text x="28.5145%" y="511.50">&lt;nu_proto..</text></g><g><title>&lt;nu_protocol::value::stream::RawStream as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 6.78%)</title><rect x="28.2645%" y="485" width="6.7769%" height="15" fill="rgb(250,108,0)" fg:x="171" fg:w="41"/><text x="28.5145%" y="495.50">&lt;nu_proto..</text></g><g><title>&lt;nu_command::viewers::table::PagingTableCreator as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 6.78%)</title><rect x="28.2645%" y="469" width="6.7769%" height="15" fill="rgb(228,208,7)" fg:x="171" fg:w="41"/><text x="28.5145%" y="479.50">&lt;nu_comma..</text></g><g><title>nu_command::viewers::table::print_table (33 samples, 5.45%)</title><rect x="29.5868%" y="453" width="5.4545%" height="15" fill="rgb(244,45,10)" fg:x="179" fg:w="33"/><text x="29.8368%" y="463.50">nu_comm..</text></g><g><title>core::fmt::write (33 samples, 5.45%)</title><rect x="29.5868%" y="437" width="5.4545%" height="15" fill="rgb(207,125,25)" fg:x="179" fg:w="33"/><text x="29.8368%" y="447.50">core::f..</text></g><g><title>&lt;papergrid::Grid as core::fmt::Display&gt;::fmt (33 samples, 5.45%)</title><rect x="29.5868%" y="421" width="5.4545%" height="15" fill="rgb(210,195,18)" fg:x="179" fg:w="33"/><text x="29.8368%" y="431.50">&lt;paperg..</text></g><g><title>papergrid::print_text_formated (16 samples, 2.64%)</title><rect x="32.3967%" y="405" width="2.6446%" height="15" fill="rgb(249,80,12)" fg:x="196" fg:w="16"/><text x="32.6467%" y="415.50">pa..</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (10 samples, 1.65%)</title><rect x="33.3884%" y="389" width="1.6529%" height="15" fill="rgb(221,65,9)" fg:x="202" fg:w="10"/><text x="33.6384%" y="399.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (1 samples, 0.17%)</title><rect x="35.0413%" y="469" width="0.1653%" height="15" fill="rgb(235,49,36)" fg:x="212" fg:w="1"/><text x="35.2913%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.17%)</title><rect x="35.0413%" y="453" width="0.1653%" height="15" fill="rgb(225,32,20)" fg:x="212" fg:w="1"/><text x="35.2913%" y="463.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (1 samples, 0.17%)</title><rect x="35.0413%" y="437" width="0.1653%" height="15" fill="rgb(215,141,46)" fg:x="212" fg:w="1"/><text x="35.2913%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.17%)</title><rect x="35.0413%" y="421" width="0.1653%" height="15" fill="rgb(250,160,47)" fg:x="212" fg:w="1"/><text x="35.2913%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.17%)</title><rect x="35.0413%" y="405" width="0.1653%" height="15" fill="rgb(216,222,40)" fg:x="212" fg:w="1"/><text x="35.2913%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="35.0413%" y="389" width="0.1653%" height="15" fill="rgb(234,217,39)" fg:x="212" fg:w="1"/><text x="35.2913%" y="399.50"></text></g><g><title>bytecount::integer_simd::chunk_count (2 samples, 0.33%)</title><rect x="35.2066%" y="357" width="0.3306%" height="15" fill="rgb(207,178,40)" fg:x="213" fg:w="2"/><text x="35.4566%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.50%)</title><rect x="35.2066%" y="389" width="0.4959%" height="15" fill="rgb(221,136,13)" fg:x="213" fg:w="3"/><text x="35.4566%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.50%)</title><rect x="35.2066%" y="373" width="0.4959%" height="15" fill="rgb(249,199,10)" fg:x="213" fg:w="3"/><text x="35.4566%" y="383.50"></text></g><g><title>papergrid::string_width (1 samples, 0.17%)</title><rect x="35.5372%" y="357" width="0.1653%" height="15" fill="rgb(249,222,13)" fg:x="215" fg:w="1"/><text x="35.7872%" y="367.50"></text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="35.5372%" y="341" width="0.1653%" height="15" fill="rgb(244,185,38)" fg:x="215" fg:w="1"/><text x="35.7872%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="35.5372%" y="325" width="0.1653%" height="15" fill="rgb(236,202,9)" fg:x="215" fg:w="1"/><text x="35.7872%" y="335.50"></text></g><g><title>&lt;ansi_str::AnsiSplit as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.17%)</title><rect x="35.7025%" y="389" width="0.1653%" height="15" fill="rgb(250,229,37)" fg:x="216" fg:w="1"/><text x="35.9525%" y="399.50"></text></g><g><title>&lt;str as ansi_str::AnsiStr&gt;::ansi_get (1 samples, 0.17%)</title><rect x="35.7025%" y="373" width="0.1653%" height="15" fill="rgb(206,174,23)" fg:x="216" fg:w="1"/><text x="35.9525%" y="383.50"></text></g><g><title>ansi_str::get (1 samples, 0.17%)</title><rect x="35.7025%" y="357" width="0.1653%" height="15" fill="rgb(211,33,43)" fg:x="216" fg:w="1"/><text x="35.9525%" y="367.50"></text></g><g><title>core::fmt::write (1 samples, 0.17%)</title><rect x="35.7025%" y="341" width="0.1653%" height="15" fill="rgb(245,58,50)" fg:x="216" fg:w="1"/><text x="35.9525%" y="351.50"></text></g><g><title>&lt;ansi_parser::enums::AnsiSequence as core::fmt::Display&gt;::fmt (1 samples, 0.17%)</title><rect x="35.7025%" y="325" width="0.1653%" height="15" fill="rgb(244,68,36)" fg:x="216" fg:w="1"/><text x="35.9525%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.17%)</title><rect x="35.7025%" y="309" width="0.1653%" height="15" fill="rgb(232,229,15)" fg:x="216" fg:w="1"/><text x="35.9525%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.17%)</title><rect x="35.7025%" y="293" width="0.1653%" height="15" fill="rgb(254,30,23)" fg:x="216" fg:w="1"/><text x="35.9525%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.17%)</title><rect x="35.7025%" y="277" width="0.1653%" height="15" fill="rgb(235,160,14)" fg:x="216" fg:w="1"/><text x="35.9525%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.17%)</title><rect x="35.7025%" y="261" width="0.1653%" height="15" fill="rgb(212,155,44)" fg:x="216" fg:w="1"/><text x="35.9525%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.17%)</title><rect x="35.7025%" y="245" width="0.1653%" height="15" fill="rgb(226,2,50)" fg:x="216" fg:w="1"/><text x="35.9525%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.17%)</title><rect x="35.7025%" y="229" width="0.1653%" height="15" fill="rgb(234,177,6)" fg:x="216" fg:w="1"/><text x="35.9525%" y="239.50"></text></g><g><title>__rdl_realloc (1 samples, 0.17%)</title><rect x="35.7025%" y="213" width="0.1653%" height="15" fill="rgb(217,24,9)" fg:x="216" fg:w="1"/><text x="35.9525%" y="223.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 3.14%)</title><rect x="37.1901%" y="325" width="3.1405%" height="15" fill="rgb(220,13,46)" fg:x="225" fg:w="19"/><text x="37.4401%" y="335.50">&lt;an..</text></g><g><title>core::slice::memchr::memchr_general_case (7 samples, 1.16%)</title><rect x="39.1736%" y="309" width="1.1570%" height="15" fill="rgb(239,221,27)" fg:x="237" fg:w="7"/><text x="39.4236%" y="319.50"></text></g><g><title>ansi_str::update_ansi_state (8 samples, 1.32%)</title><rect x="40.3306%" y="325" width="1.3223%" height="15" fill="rgb(222,198,25)" fg:x="244" fg:w="8"/><text x="40.5806%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="44.7934%" y="245" width="0.1653%" height="15" fill="rgb(211,99,13)" fg:x="271" fg:w="1"/><text x="45.0434%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.17%)</title><rect x="44.9587%" y="245" width="0.1653%" height="15" fill="rgb(232,111,31)" fg:x="272" fg:w="1"/><text x="45.2087%" y="255.50"></text></g><g><title>malloc (1 samples, 0.17%)</title><rect x="45.1240%" y="197" width="0.1653%" height="15" fill="rgb(245,82,37)" fg:x="273" fg:w="1"/><text x="45.3740%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="45.1240%" y="181" width="0.1653%" height="15" fill="rgb(227,149,46)" fg:x="273" fg:w="1"/><text x="45.3740%" y="191.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (9 samples, 1.49%)</title><rect x="44.1322%" y="277" width="1.4876%" height="15" fill="rgb(218,36,50)" fg:x="267" fg:w="9"/><text x="44.3822%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 1.49%)</title><rect x="44.1322%" y="261" width="1.4876%" height="15" fill="rgb(226,80,48)" fg:x="267" fg:w="9"/><text x="44.3822%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.50%)</title><rect x="45.1240%" y="245" width="0.4959%" height="15" fill="rgb(238,224,15)" fg:x="273" fg:w="3"/><text x="45.3740%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.50%)</title><rect x="45.1240%" y="229" width="0.4959%" height="15" fill="rgb(241,136,10)" fg:x="273" fg:w="3"/><text x="45.3740%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.50%)</title><rect x="45.1240%" y="213" width="0.4959%" height="15" fill="rgb(208,32,45)" fg:x="273" fg:w="3"/><text x="45.3740%" y="223.50"></text></g><g><title>realloc (2 samples, 0.33%)</title><rect x="45.2893%" y="197" width="0.3306%" height="15" fill="rgb(207,135,9)" fg:x="274" fg:w="2"/><text x="45.5393%" y="207.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="45.4545%" y="181" width="0.1653%" height="15" fill="rgb(206,86,44)" fg:x="275" fg:w="1"/><text x="45.7045%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="45.4545%" y="165" width="0.1653%" height="15" fill="rgb(245,177,15)" fg:x="275" fg:w="1"/><text x="45.7045%" y="175.50"></text></g><g><title>[libc.so.6] (2 samples, 0.33%)</title><rect x="45.6198%" y="229" width="0.3306%" height="15" fill="rgb(206,64,50)" fg:x="276" fg:w="2"/><text x="45.8698%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.66%)</title><rect x="45.6198%" y="261" width="0.6612%" height="15" fill="rgb(234,36,40)" fg:x="276" fg:w="4"/><text x="45.8698%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.66%)</title><rect x="45.6198%" y="245" width="0.6612%" height="15" fill="rgb(213,64,8)" fg:x="276" fg:w="4"/><text x="45.8698%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.33%)</title><rect x="45.9504%" y="229" width="0.3306%" height="15" fill="rgb(210,75,36)" fg:x="278" fg:w="2"/><text x="46.2004%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.33%)</title><rect x="45.9504%" y="213" width="0.3306%" height="15" fill="rgb(229,88,21)" fg:x="278" fg:w="2"/><text x="46.2004%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.17%)</title><rect x="46.1157%" y="197" width="0.1653%" height="15" fill="rgb(252,204,47)" fg:x="279" fg:w="1"/><text x="46.3657%" y="207.50"></text></g><g><title>realloc (1 samples, 0.17%)</title><rect x="46.1157%" y="181" width="0.1653%" height="15" fill="rgb(208,77,27)" fg:x="279" fg:w="1"/><text x="46.3657%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="46.1157%" y="165" width="0.1653%" height="15" fill="rgb(221,76,26)" fg:x="279" fg:w="1"/><text x="46.3657%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="46.1157%" y="149" width="0.1653%" height="15" fill="rgb(225,139,18)" fg:x="279" fg:w="1"/><text x="46.3657%" y="159.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="46.1157%" y="133" width="0.1653%" height="15" fill="rgb(230,137,11)" fg:x="279" fg:w="1"/><text x="46.3657%" y="143.50"></text></g><g><title>nu_command::viewers::table::print_table (68 samples, 11.24%)</title><rect x="35.2066%" y="469" width="11.2397%" height="15" fill="rgb(212,28,1)" fg:x="213" fg:w="68"/><text x="35.4566%" y="479.50">nu_command::viewe..</text></g><g><title>core::fmt::write (68 samples, 11.24%)</title><rect x="35.2066%" y="453" width="11.2397%" height="15" fill="rgb(248,164,17)" fg:x="213" fg:w="68"/><text x="35.4566%" y="463.50">core::fmt::write</text></g><g><title>&lt;papergrid::Grid as core::fmt::Display&gt;::fmt (68 samples, 11.24%)</title><rect x="35.2066%" y="437" width="11.2397%" height="15" fill="rgb(222,171,42)" fg:x="213" fg:w="68"/><text x="35.4566%" y="447.50">&lt;papergrid::Grid ..</text></g><g><title>papergrid::cells_content (68 samples, 11.24%)</title><rect x="35.2066%" y="421" width="11.2397%" height="15" fill="rgb(243,84,45)" fg:x="213" fg:w="68"/><text x="35.4566%" y="431.50">papergrid::cells_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (68 samples, 11.24%)</title><rect x="35.2066%" y="405" width="11.2397%" height="15" fill="rgb(252,49,23)" fg:x="213" fg:w="68"/><text x="35.4566%" y="415.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (64 samples, 10.58%)</title><rect x="35.8678%" y="389" width="10.5785%" height="15" fill="rgb(215,19,7)" fg:x="217" fg:w="64"/><text x="36.1178%" y="399.50">alloc::vec::Vec..</text></g><g><title>&lt;ansi_str::AnsiSplit as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 10.58%)</title><rect x="35.8678%" y="373" width="10.5785%" height="15" fill="rgb(238,81,41)" fg:x="217" fg:w="64"/><text x="36.1178%" y="383.50">&lt;ansi_str::Ansi..</text></g><g><title>&lt;str as ansi_str::AnsiStr&gt;::ansi_get (64 samples, 10.58%)</title><rect x="35.8678%" y="357" width="10.5785%" height="15" fill="rgb(210,199,37)" fg:x="217" fg:w="64"/><text x="36.1178%" y="367.50">&lt;str as ansi_st..</text></g><g><title>ansi_str::get (64 samples, 10.58%)</title><rect x="35.8678%" y="341" width="10.5785%" height="15" fill="rgb(244,192,49)" fg:x="217" fg:w="64"/><text x="36.1178%" y="351.50">ansi_str::get</text></g><g><title>core::fmt::write (29 samples, 4.79%)</title><rect x="41.6529%" y="325" width="4.7934%" height="15" fill="rgb(226,211,11)" fg:x="252" fg:w="29"/><text x="41.9029%" y="335.50">core::..</text></g><g><title>&lt;ansi_parser::enums::AnsiSequence as core::fmt::Display&gt;::fmt (26 samples, 4.30%)</title><rect x="42.1488%" y="309" width="4.2975%" height="15" fill="rgb(236,162,54)" fg:x="255" fg:w="26"/><text x="42.3988%" y="319.50">&lt;ansi..</text></g><g><title>core::fmt::write (22 samples, 3.64%)</title><rect x="42.8099%" y="293" width="3.6364%" height="15" fill="rgb(220,229,9)" fg:x="259" fg:w="22"/><text x="43.0599%" y="303.50">core..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (5 samples, 0.83%)</title><rect x="45.6198%" y="277" width="0.8264%" height="15" fill="rgb(250,87,22)" fg:x="276" fg:w="5"/><text x="45.8698%" y="287.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.17%)</title><rect x="46.2810%" y="261" width="0.1653%" height="15" fill="rgb(239,43,17)" fg:x="280" fg:w="1"/><text x="46.5310%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.17%)</title><rect x="46.4463%" y="453" width="0.1653%" height="15" fill="rgb(231,177,25)" fg:x="281" fg:w="1"/><text x="46.6963%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.17%)</title><rect x="46.4463%" y="437" width="0.1653%" height="15" fill="rgb(219,179,1)" fg:x="281" fg:w="1"/><text x="46.6963%" y="447.50"></text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="46.4463%" y="421" width="0.1653%" height="15" fill="rgb(238,219,53)" fg:x="281" fg:w="1"/><text x="46.6963%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (2 samples, 0.33%)</title><rect x="46.6116%" y="389" width="0.3306%" height="15" fill="rgb(232,167,36)" fg:x="282" fg:w="2"/><text x="46.8616%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.33%)</title><rect x="46.6116%" y="373" width="0.3306%" height="15" fill="rgb(244,19,51)" fg:x="282" fg:w="2"/><text x="46.8616%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (2 samples, 0.33%)</title><rect x="46.6116%" y="357" width="0.3306%" height="15" fill="rgb(224,6,22)" fg:x="282" fg:w="2"/><text x="46.8616%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.33%)</title><rect x="46.6116%" y="341" width="0.3306%" height="15" fill="rgb(224,145,5)" fg:x="282" fg:w="2"/><text x="46.8616%" y="351.50"></text></g><g><title>cfree (2 samples, 0.33%)</title><rect x="46.6116%" y="325" width="0.3306%" height="15" fill="rgb(234,130,49)" fg:x="282" fg:w="2"/><text x="46.8616%" y="335.50"></text></g><g><title>[libc.so.6] (2 samples, 0.33%)</title><rect x="46.6116%" y="309" width="0.3306%" height="15" fill="rgb(254,6,2)" fg:x="282" fg:w="2"/><text x="46.8616%" y="319.50"></text></g><g><title>nu_cli::util::eval_source (73 samples, 12.07%)</title><rect x="35.0413%" y="549" width="12.0661%" height="15" fill="rgb(208,96,46)" fg:x="212" fg:w="73"/><text x="35.2913%" y="559.50">nu_cli::util::eval..</text></g><g><title>nu_protocol::pipeline_data::PipelineData::print (73 samples, 12.07%)</title><rect x="35.0413%" y="533" width="12.0661%" height="15" fill="rgb(239,3,39)" fg:x="212" fg:w="73"/><text x="35.2913%" y="543.50">nu_protocol::pipel..</text></g><g><title>&lt;nu_protocol::pipeline_data::PipelineIterator as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 12.07%)</title><rect x="35.0413%" y="517" width="12.0661%" height="15" fill="rgb(233,210,1)" fg:x="212" fg:w="73"/><text x="35.2913%" y="527.50">&lt;nu_protocol::pipe..</text></g><g><title>&lt;nu_protocol::value::stream::RawStream as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 12.07%)</title><rect x="35.0413%" y="501" width="12.0661%" height="15" fill="rgb(244,137,37)" fg:x="212" fg:w="73"/><text x="35.2913%" y="511.50">&lt;nu_protocol::valu..</text></g><g><title>&lt;nu_command::viewers::table::PagingTableCreator as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 12.07%)</title><rect x="35.0413%" y="485" width="12.0661%" height="15" fill="rgb(240,136,2)" fg:x="212" fg:w="73"/><text x="35.2913%" y="495.50">&lt;nu_command::viewe..</text></g><g><title>nu_protocol::value::Value::follow_cell_path (4 samples, 0.66%)</title><rect x="46.4463%" y="469" width="0.6612%" height="15" fill="rgb(239,18,37)" fg:x="281" fg:w="4"/><text x="46.6963%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (3 samples, 0.50%)</title><rect x="46.6116%" y="453" width="0.4959%" height="15" fill="rgb(218,185,22)" fg:x="282" fg:w="3"/><text x="46.8616%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.50%)</title><rect x="46.6116%" y="437" width="0.4959%" height="15" fill="rgb(225,218,4)" fg:x="282" fg:w="3"/><text x="46.8616%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (3 samples, 0.50%)</title><rect x="46.6116%" y="421" width="0.4959%" height="15" fill="rgb(230,182,32)" fg:x="282" fg:w="3"/><text x="46.8616%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.50%)</title><rect x="46.6116%" y="405" width="0.4959%" height="15" fill="rgb(242,56,43)" fg:x="282" fg:w="3"/><text x="46.8616%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::value::Value&gt; (1 samples, 0.17%)</title><rect x="46.9421%" y="389" width="0.1653%" height="15" fill="rgb(233,99,24)" fg:x="284" fg:w="1"/><text x="47.1921%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.17%)</title><rect x="46.9421%" y="373" width="0.1653%" height="15" fill="rgb(234,209,42)" fg:x="284" fg:w="1"/><text x="47.1921%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.17%)</title><rect x="46.9421%" y="357" width="0.1653%" height="15" fill="rgb(227,7,12)" fg:x="284" fg:w="1"/><text x="47.1921%" y="367.50"></text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="46.9421%" y="341" width="0.1653%" height="15" fill="rgb(245,203,43)" fg:x="284" fg:w="1"/><text x="47.1921%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.33%)</title><rect x="47.1074%" y="469" width="0.3306%" height="15" fill="rgb(238,205,33)" fg:x="285" fg:w="2"/><text x="47.3574%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.33%)</title><rect x="47.1074%" y="453" width="0.3306%" height="15" fill="rgb(231,56,7)" fg:x="285" fg:w="2"/><text x="47.3574%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.33%)</title><rect x="47.1074%" y="437" width="0.3306%" height="15" fill="rgb(244,186,29)" fg:x="285" fg:w="2"/><text x="47.3574%" y="447.50"></text></g><g><title>papergrid::string_width (2 samples, 0.33%)</title><rect x="47.1074%" y="421" width="0.3306%" height="15" fill="rgb(234,111,31)" fg:x="285" fg:w="2"/><text x="47.3574%" y="431.50"></text></g><g><title>strip_ansi_escapes::strip (2 samples, 0.33%)</title><rect x="47.1074%" y="405" width="0.3306%" height="15" fill="rgb(241,149,10)" fg:x="285" fg:w="2"/><text x="47.3574%" y="415.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.33%)</title><rect x="47.1074%" y="389" width="0.3306%" height="15" fill="rgb(249,206,44)" fg:x="285" fg:w="2"/><text x="47.3574%" y="399.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.33%)</title><rect x="47.1074%" y="373" width="0.3306%" height="15" fill="rgb(251,153,30)" fg:x="285" fg:w="2"/><text x="47.3574%" y="383.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::print (2 samples, 0.33%)</title><rect x="47.1074%" y="357" width="0.3306%" height="15" fill="rgb(239,152,38)" fg:x="285" fg:w="2"/><text x="47.3574%" y="367.50"></text></g><g><title>std::io::Write::write_fmt (2 samples, 0.33%)</title><rect x="47.1074%" y="341" width="0.3306%" height="15" fill="rgb(249,139,47)" fg:x="285" fg:w="2"/><text x="47.3574%" y="351.50"></text></g><g><title>&lt;tabled::width::Wrap&lt;W,P&gt; as tabled::table::TableOption&gt;::change (3 samples, 0.50%)</title><rect x="47.1074%" y="517" width="0.4959%" height="15" fill="rgb(244,64,35)" fg:x="285" fg:w="3"/><text x="47.3574%" y="527.50"></text></g><g><title>papergrid::Grid::total_width (3 samples, 0.50%)</title><rect x="47.1074%" y="501" width="0.4959%" height="15" fill="rgb(216,46,15)" fg:x="285" fg:w="3"/><text x="47.3574%" y="511.50"></text></g><g><title>papergrid::cells_content (3 samples, 0.50%)</title><rect x="47.1074%" y="485" width="0.4959%" height="15" fill="rgb(250,74,19)" fg:x="285" fg:w="3"/><text x="47.3574%" y="495.50"></text></g><g><title>&lt;str as ansi_str::AnsiStr&gt;::ansi_strip (1 samples, 0.17%)</title><rect x="47.4380%" y="469" width="0.1653%" height="15" fill="rgb(249,42,33)" fg:x="287" fg:w="1"/><text x="47.6880%" y="479.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.17%)</title><rect x="47.4380%" y="453" width="0.1653%" height="15" fill="rgb(242,149,17)" fg:x="287" fg:w="1"/><text x="47.6880%" y="463.50"></text></g><g><title>ansi_parser::parsers::parse_escape (1 samples, 0.17%)</title><rect x="47.4380%" y="437" width="0.1653%" height="15" fill="rgb(244,29,21)" fg:x="287" fg:w="1"/><text x="47.6880%" y="447.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::execute (1 samples, 0.17%)</title><rect x="47.6033%" y="421" width="0.1653%" height="15" fill="rgb(220,130,37)" fg:x="288" fg:w="1"/><text x="47.8533%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.17%)</title><rect x="47.6033%" y="405" width="0.1653%" height="15" fill="rgb(211,67,2)" fg:x="288" fg:w="1"/><text x="47.8533%" y="415.50"></text></g><g><title>core::fmt::write (1 samples, 0.17%)</title><rect x="47.6033%" y="389" width="0.1653%" height="15" fill="rgb(235,68,52)" fg:x="288" fg:w="1"/><text x="47.8533%" y="399.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.17%)</title><rect x="47.6033%" y="373" width="0.1653%" height="15" fill="rgb(246,142,3)" fg:x="288" fg:w="1"/><text x="47.8533%" y="383.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.17%)</title><rect x="47.6033%" y="357" width="0.1653%" height="15" fill="rgb(241,25,7)" fg:x="288" fg:w="1"/><text x="47.8533%" y="367.50"></text></g><g><title>&lt;char as core::fmt::Display&gt;::fmt (1 samples, 0.17%)</title><rect x="47.7686%" y="373" width="0.1653%" height="15" fill="rgb(242,119,39)" fg:x="289" fg:w="1"/><text x="48.0186%" y="383.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::print (2 samples, 0.33%)</title><rect x="47.7686%" y="421" width="0.3306%" height="15" fill="rgb(241,98,45)" fg:x="289" fg:w="2"/><text x="48.0186%" y="431.50"></text></g><g><title>std::io::Write::write_fmt (2 samples, 0.33%)</title><rect x="47.7686%" y="405" width="0.3306%" height="15" fill="rgb(254,28,30)" fg:x="289" fg:w="2"/><text x="48.0186%" y="415.50"></text></g><g><title>core::fmt::write (2 samples, 0.33%)</title><rect x="47.7686%" y="389" width="0.3306%" height="15" fill="rgb(241,142,54)" fg:x="289" fg:w="2"/><text x="48.0186%" y="399.50"></text></g><g><title>core::fmt::Write::write_char (1 samples, 0.17%)</title><rect x="47.9339%" y="373" width="0.1653%" height="15" fill="rgb(222,85,15)" fg:x="290" fg:w="1"/><text x="48.1839%" y="383.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.17%)</title><rect x="47.9339%" y="357" width="0.1653%" height="15" fill="rgb(210,85,47)" fg:x="290" fg:w="1"/><text x="48.1839%" y="367.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.17%)</title><rect x="47.9339%" y="341" width="0.1653%" height="15" fill="rgb(224,206,25)" fg:x="290" fg:w="1"/><text x="48.1839%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="47.9339%" y="325" width="0.1653%" height="15" fill="rgb(243,201,19)" fg:x="290" fg:w="1"/><text x="48.1839%" y="335.50"></text></g><g><title>papergrid::string_width_multiline (4 samples, 0.66%)</title><rect x="47.6033%" y="485" width="0.6612%" height="15" fill="rgb(236,59,4)" fg:x="288" fg:w="4"/><text x="47.8533%" y="495.50"></text></g><g><title>strip_ansi_escapes::strip (4 samples, 0.66%)</title><rect x="47.6033%" y="469" width="0.6612%" height="15" fill="rgb(254,179,45)" fg:x="288" fg:w="4"/><text x="47.8533%" y="479.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.66%)</title><rect x="47.6033%" y="453" width="0.6612%" height="15" fill="rgb(226,14,10)" fg:x="288" fg:w="4"/><text x="47.8533%" y="463.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (4 samples, 0.66%)</title><rect x="47.6033%" y="437" width="0.6612%" height="15" fill="rgb(244,27,41)" fg:x="288" fg:w="4"/><text x="47.8533%" y="447.50"></text></g><g><title>vte::Parser::perform_action (1 samples, 0.17%)</title><rect x="48.0992%" y="421" width="0.1653%" height="15" fill="rgb(235,35,32)" fg:x="291" fg:w="1"/><text x="48.3492%" y="431.50"></text></g><g><title>ansi_parser::parsers::cursor_forward (3 samples, 0.50%)</title><rect x="48.4298%" y="405" width="0.4959%" height="15" fill="rgb(218,68,31)" fg:x="293" fg:w="3"/><text x="48.6798%" y="415.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (1 samples, 0.17%)</title><rect x="48.7603%" y="389" width="0.1653%" height="15" fill="rgb(207,120,37)" fg:x="295" fg:w="1"/><text x="49.0103%" y="399.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (1 samples, 0.17%)</title><rect x="48.7603%" y="373" width="0.1653%" height="15" fill="rgb(227,98,0)" fg:x="295" fg:w="1"/><text x="49.0103%" y="383.50"></text></g><g><title>ansi_parser::parsers::erase_display (2 samples, 0.33%)</title><rect x="48.9256%" y="405" width="0.3306%" height="15" fill="rgb(207,7,3)" fg:x="296" fg:w="2"/><text x="49.1756%" y="415.50"></text></g><g><title>ansi_parser::parsers::graphics_mode (2 samples, 0.33%)</title><rect x="49.2562%" y="405" width="0.3306%" height="15" fill="rgb(206,98,19)" fg:x="298" fg:w="2"/><text x="49.5062%" y="415.50"></text></g><g><title>ansi_parser::parsers::parse_int (2 samples, 0.33%)</title><rect x="49.2562%" y="389" width="0.3306%" height="15" fill="rgb(217,5,26)" fg:x="298" fg:w="2"/><text x="49.5062%" y="399.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (1 samples, 0.17%)</title><rect x="49.4215%" y="373" width="0.1653%" height="15" fill="rgb(235,190,38)" fg:x="299" fg:w="1"/><text x="49.6715%" y="383.50"></text></g><g><title>&lt;str as ansi_str::AnsiStr&gt;::ansi_split_at (10 samples, 1.65%)</title><rect x="48.2645%" y="453" width="1.6529%" height="15" fill="rgb(247,86,24)" fg:x="292" fg:w="10"/><text x="48.5145%" y="463.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 1.65%)</title><rect x="48.2645%" y="437" width="1.6529%" height="15" fill="rgb(205,101,16)" fg:x="292" fg:w="10"/><text x="48.5145%" y="447.50"></text></g><g><title>ansi_parser::parsers::parse_escape (10 samples, 1.65%)</title><rect x="48.2645%" y="421" width="1.6529%" height="15" fill="rgb(246,168,33)" fg:x="292" fg:w="10"/><text x="48.5145%" y="431.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (2 samples, 0.33%)</title><rect x="49.5868%" y="405" width="0.3306%" height="15" fill="rgb(231,114,1)" fg:x="300" fg:w="2"/><text x="49.8368%" y="415.50"></text></g><g><title>ansi_parser::parsers::erase_line (1 samples, 0.17%)</title><rect x="50.2479%" y="405" width="0.1653%" height="15" fill="rgb(207,184,53)" fg:x="304" fg:w="1"/><text x="50.4979%" y="415.50"></text></g><g><title>ansi_parser::parsers::graphics_mode (1 samples, 0.17%)</title><rect x="50.4132%" y="405" width="0.1653%" height="15" fill="rgb(224,95,51)" fg:x="305" fg:w="1"/><text x="50.6632%" y="415.50"></text></g><g><title>&lt;tabled::width::Wrap&lt;W&gt; as tabled::table::CellOption&gt;::change_cell (19 samples, 3.14%)</title><rect x="47.6033%" y="501" width="3.1405%" height="15" fill="rgb(212,188,45)" fg:x="288" fg:w="19"/><text x="47.8533%" y="511.50">&lt;ta..</text></g><g><title>papergrid::wrap_text (15 samples, 2.48%)</title><rect x="48.2645%" y="485" width="2.4793%" height="15" fill="rgb(223,154,38)" fg:x="292" fg:w="15"/><text x="48.5145%" y="495.50">pa..</text></g><g><title>papergrid::split_by_lines (15 samples, 2.48%)</title><rect x="48.2645%" y="469" width="2.4793%" height="15" fill="rgb(251,22,52)" fg:x="292" fg:w="15"/><text x="48.5145%" y="479.50">pa..</text></g><g><title>&lt;str as ansi_str::AnsiStr&gt;::ansi_strip (5 samples, 0.83%)</title><rect x="49.9174%" y="453" width="0.8264%" height="15" fill="rgb(229,209,22)" fg:x="302" fg:w="5"/><text x="50.1674%" y="463.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.83%)</title><rect x="49.9174%" y="437" width="0.8264%" height="15" fill="rgb(234,138,34)" fg:x="302" fg:w="5"/><text x="50.1674%" y="447.50"></text></g><g><title>ansi_parser::parsers::parse_escape (5 samples, 0.83%)</title><rect x="49.9174%" y="421" width="0.8264%" height="15" fill="rgb(212,95,11)" fg:x="302" fg:w="5"/><text x="50.1674%" y="431.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (1 samples, 0.17%)</title><rect x="50.5785%" y="405" width="0.1653%" height="15" fill="rgb(240,179,47)" fg:x="306" fg:w="1"/><text x="50.8285%" y="415.50"></text></g><g><title>nu_command::viewers::table::build_table (26 samples, 4.30%)</title><rect x="47.1074%" y="549" width="4.2975%" height="15" fill="rgb(240,163,11)" fg:x="285" fg:w="26"/><text x="47.3574%" y="559.50">nu_co..</text></g><g><title>tabled::table::Table::with (26 samples, 4.30%)</title><rect x="47.1074%" y="533" width="4.2975%" height="15" fill="rgb(236,37,12)" fg:x="285" fg:w="26"/><text x="47.3574%" y="543.50">table..</text></g><g><title>tabled::width::wrap_total_width (23 samples, 3.80%)</title><rect x="47.6033%" y="517" width="3.8017%" height="15" fill="rgb(232,164,16)" fg:x="288" fg:w="23"/><text x="47.8533%" y="527.50">tabl..</text></g><g><title>tabled::width::decrease_total_width_fn (4 samples, 0.66%)</title><rect x="50.7438%" y="501" width="0.6612%" height="15" fill="rgb(244,205,15)" fg:x="307" fg:w="4"/><text x="50.9938%" y="511.50"></text></g><g><title>papergrid::Grid::build_widths (4 samples, 0.66%)</title><rect x="50.7438%" y="485" width="0.6612%" height="15" fill="rgb(223,117,47)" fg:x="307" fg:w="4"/><text x="50.9938%" y="495.50"></text></g><g><title>papergrid::cells_content (4 samples, 0.66%)</title><rect x="50.7438%" y="469" width="0.6612%" height="15" fill="rgb(244,107,35)" fg:x="307" fg:w="4"/><text x="50.9938%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.66%)</title><rect x="50.7438%" y="453" width="0.6612%" height="15" fill="rgb(205,140,8)" fg:x="307" fg:w="4"/><text x="50.9938%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.66%)</title><rect x="50.7438%" y="437" width="0.6612%" height="15" fill="rgb(228,84,46)" fg:x="307" fg:w="4"/><text x="50.9938%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.66%)</title><rect x="50.7438%" y="421" width="0.6612%" height="15" fill="rgb(254,188,9)" fg:x="307" fg:w="4"/><text x="50.9938%" y="431.50"></text></g><g><title>papergrid::string_width (4 samples, 0.66%)</title><rect x="50.7438%" y="405" width="0.6612%" height="15" fill="rgb(206,112,54)" fg:x="307" fg:w="4"/><text x="50.9938%" y="415.50"></text></g><g><title>strip_ansi_escapes::strip (4 samples, 0.66%)</title><rect x="50.7438%" y="389" width="0.6612%" height="15" fill="rgb(216,84,49)" fg:x="307" fg:w="4"/><text x="50.9938%" y="399.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.66%)</title><rect x="50.7438%" y="373" width="0.6612%" height="15" fill="rgb(214,194,35)" fg:x="307" fg:w="4"/><text x="50.9938%" y="383.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (4 samples, 0.66%)</title><rect x="50.7438%" y="357" width="0.6612%" height="15" fill="rgb(249,28,3)" fg:x="307" fg:w="4"/><text x="50.9938%" y="367.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::print (3 samples, 0.50%)</title><rect x="50.9091%" y="341" width="0.4959%" height="15" fill="rgb(222,56,52)" fg:x="308" fg:w="3"/><text x="51.1591%" y="351.50"></text></g><g><title>std::io::Write::write_fmt (3 samples, 0.50%)</title><rect x="50.9091%" y="325" width="0.4959%" height="15" fill="rgb(245,217,50)" fg:x="308" fg:w="3"/><text x="51.1591%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.17%)</title><rect x="51.2397%" y="309" width="0.1653%" height="15" fill="rgb(213,201,24)" fg:x="310" fg:w="1"/><text x="51.4897%" y="319.50"></text></g><g><title>core::fmt::Write::write_char (1 samples, 0.17%)</title><rect x="51.2397%" y="293" width="0.1653%" height="15" fill="rgb(248,116,28)" fg:x="310" fg:w="1"/><text x="51.4897%" y="303.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.17%)</title><rect x="51.2397%" y="277" width="0.1653%" height="15" fill="rgb(219,72,43)" fg:x="310" fg:w="1"/><text x="51.4897%" y="287.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.17%)</title><rect x="51.2397%" y="261" width="0.1653%" height="15" fill="rgb(209,138,14)" fg:x="310" fg:w="1"/><text x="51.4897%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="51.4050%" y="485" width="0.1653%" height="15" fill="rgb(222,18,33)" fg:x="311" fg:w="1"/><text x="51.6550%" y="495.50"></text></g><g><title>nu_engine::eval::eval_expression (2 samples, 0.33%)</title><rect x="51.4050%" y="549" width="0.3306%" height="15" fill="rgb(213,199,7)" fg:x="311" fg:w="2"/><text x="51.6550%" y="559.50"></text></g><g><title>nu_engine::eval::eval_expression (2 samples, 0.33%)</title><rect x="51.4050%" y="533" width="0.3306%" height="15" fill="rgb(250,110,10)" fg:x="311" fg:w="2"/><text x="51.6550%" y="543.50"></text></g><g><title>nu_engine::eval::eval_expression (2 samples, 0.33%)</title><rect x="51.4050%" y="517" width="0.3306%" height="15" fill="rgb(248,123,6)" fg:x="311" fg:w="2"/><text x="51.6550%" y="527.50"></text></g><g><title>nu_engine::eval::eval_expression (2 samples, 0.33%)</title><rect x="51.4050%" y="501" width="0.3306%" height="15" fill="rgb(206,91,31)" fg:x="311" fg:w="2"/><text x="51.6550%" y="511.50"></text></g><g><title>nu_protocol::value::Value::as_string (1 samples, 0.17%)</title><rect x="51.5702%" y="485" width="0.1653%" height="15" fill="rgb(211,154,13)" fg:x="312" fg:w="1"/><text x="51.8202%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.17%)</title><rect x="51.5702%" y="469" width="0.1653%" height="15" fill="rgb(225,148,7)" fg:x="312" fg:w="1"/><text x="51.8202%" y="479.50"></text></g><g><title>malloc (1 samples, 0.17%)</title><rect x="51.5702%" y="453" width="0.1653%" height="15" fill="rgb(220,160,43)" fg:x="312" fg:w="1"/><text x="51.8202%" y="463.50"></text></g><g><title>nu_parser::lex::is_item_terminator (2 samples, 0.33%)</title><rect x="51.7355%" y="549" width="0.3306%" height="15" fill="rgb(213,52,39)" fg:x="313" fg:w="2"/><text x="51.9855%" y="559.50"></text></g><g><title>nu_parser::parser::parse_builtin_commands (3 samples, 0.50%)</title><rect x="52.0661%" y="549" width="0.4959%" height="15" fill="rgb(243,137,7)" fg:x="315" fg:w="3"/><text x="52.3161%" y="559.50"></text></g><g><title>nu_parser::parser::parse_expression (3 samples, 0.50%)</title><rect x="52.0661%" y="533" width="0.4959%" height="15" fill="rgb(230,79,13)" fg:x="315" fg:w="3"/><text x="52.3161%" y="543.50"></text></g><g><title>nu_parser::parser::parse_math_expression (3 samples, 0.50%)</title><rect x="52.0661%" y="517" width="0.4959%" height="15" fill="rgb(247,105,23)" fg:x="315" fg:w="3"/><text x="52.3161%" y="527.50"></text></g><g><title>nu_parser::parser::parse_value (3 samples, 0.50%)</title><rect x="52.0661%" y="501" width="0.4959%" height="15" fill="rgb(223,179,41)" fg:x="315" fg:w="3"/><text x="52.3161%" y="511.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (3 samples, 0.50%)</title><rect x="52.0661%" y="485" width="0.4959%" height="15" fill="rgb(218,9,34)" fg:x="315" fg:w="3"/><text x="52.3161%" y="495.50"></text></g><g><title>nu_parser::lex::lex (3 samples, 0.50%)</title><rect x="52.0661%" y="469" width="0.4959%" height="15" fill="rgb(222,106,8)" fg:x="315" fg:w="3"/><text x="52.3161%" y="479.50"></text></g><g><title>nu_parser::parser::parse_expression (3 samples, 0.50%)</title><rect x="52.5620%" y="549" width="0.4959%" height="15" fill="rgb(211,220,0)" fg:x="318" fg:w="3"/><text x="52.8120%" y="559.50"></text></g><g><title>nu_parser::parser::parse_math_expression (3 samples, 0.50%)</title><rect x="52.5620%" y="533" width="0.4959%" height="15" fill="rgb(229,52,16)" fg:x="318" fg:w="3"/><text x="52.8120%" y="543.50"></text></g><g><title>nu_parser::parser::parse_value (3 samples, 0.50%)</title><rect x="52.5620%" y="517" width="0.4959%" height="15" fill="rgb(212,155,18)" fg:x="318" fg:w="3"/><text x="52.8120%" y="527.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (3 samples, 0.50%)</title><rect x="52.5620%" y="501" width="0.4959%" height="15" fill="rgb(242,21,14)" fg:x="318" fg:w="3"/><text x="52.8120%" y="511.50"></text></g><g><title>nu_parser::parser::parse_table_expression (3 samples, 0.50%)</title><rect x="52.5620%" y="485" width="0.4959%" height="15" fill="rgb(222,19,48)" fg:x="318" fg:w="3"/><text x="52.8120%" y="495.50"></text></g><g><title>nu_parser::lex::lex (3 samples, 0.50%)</title><rect x="52.5620%" y="469" width="0.4959%" height="15" fill="rgb(232,45,27)" fg:x="318" fg:w="3"/><text x="52.8120%" y="479.50"></text></g><g><title>nu_parser::parser::parse_record (1 samples, 0.17%)</title><rect x="53.0579%" y="533" width="0.1653%" height="15" fill="rgb(249,103,42)" fg:x="321" fg:w="1"/><text x="53.3079%" y="543.50"></text></g><g><title>nu_parser::parser::parse_value (1 samples, 0.17%)</title><rect x="53.0579%" y="517" width="0.1653%" height="15" fill="rgb(246,81,33)" fg:x="321" fg:w="1"/><text x="53.3079%" y="527.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (1 samples, 0.17%)</title><rect x="53.0579%" y="501" width="0.1653%" height="15" fill="rgb(252,33,42)" fg:x="321" fg:w="1"/><text x="53.3079%" y="511.50"></text></g><g><title>nu_parser::parser::parse_record (1 samples, 0.17%)</title><rect x="53.0579%" y="485" width="0.1653%" height="15" fill="rgb(209,212,41)" fg:x="321" fg:w="1"/><text x="53.3079%" y="495.50"></text></g><g><title>nu_parser::parser::parse_value (1 samples, 0.17%)</title><rect x="53.0579%" y="469" width="0.1653%" height="15" fill="rgb(207,154,6)" fg:x="321" fg:w="1"/><text x="53.3079%" y="479.50"></text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="53.0579%" y="453" width="0.1653%" height="15" fill="rgb(223,64,47)" fg:x="321" fg:w="1"/><text x="53.3079%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="53.0579%" y="437" width="0.1653%" height="15" fill="rgb(211,161,38)" fg:x="321" fg:w="1"/><text x="53.3079%" y="447.50"></text></g><g><title>nu_parser::parser::parse_list_expression (5 samples, 0.83%)</title><rect x="53.2231%" y="517" width="0.8264%" height="15" fill="rgb(219,138,40)" fg:x="322" fg:w="5"/><text x="53.4731%" y="527.50"></text></g><g><title>nu_parser::parser::parse_multispan_value (5 samples, 0.83%)</title><rect x="53.2231%" y="501" width="0.8264%" height="15" fill="rgb(241,228,46)" fg:x="322" fg:w="5"/><text x="53.4731%" y="511.50"></text></g><g><title>nu_parser::parser::parse_value (5 samples, 0.83%)</title><rect x="53.2231%" y="485" width="0.8264%" height="15" fill="rgb(223,209,38)" fg:x="322" fg:w="5"/><text x="53.4731%" y="495.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (5 samples, 0.83%)</title><rect x="53.2231%" y="469" width="0.8264%" height="15" fill="rgb(236,164,45)" fg:x="322" fg:w="5"/><text x="53.4731%" y="479.50"></text></g><g><title>nu_parser::lex::lex (5 samples, 0.83%)</title><rect x="53.2231%" y="453" width="0.8264%" height="15" fill="rgb(231,15,5)" fg:x="322" fg:w="5"/><text x="53.4731%" y="463.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (1 samples, 0.17%)</title><rect x="54.0496%" y="453" width="0.1653%" height="15" fill="rgb(252,35,15)" fg:x="327" fg:w="1"/><text x="54.2996%" y="463.50"></text></g><g><title>nu_parser::parser::parse_int (1 samples, 0.17%)</title><rect x="54.2149%" y="437" width="0.1653%" height="15" fill="rgb(248,181,18)" fg:x="328" fg:w="1"/><text x="54.4649%" y="447.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.17%)</title><rect x="54.2149%" y="421" width="0.1653%" height="15" fill="rgb(233,39,42)" fg:x="328" fg:w="1"/><text x="54.4649%" y="431.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.17%)</title><rect x="54.2149%" y="405" width="0.1653%" height="15" fill="rgb(238,110,33)" fg:x="328" fg:w="1"/><text x="54.4649%" y="415.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (9 samples, 1.49%)</title><rect x="53.0579%" y="549" width="1.4876%" height="15" fill="rgb(233,195,10)" fg:x="321" fg:w="9"/><text x="53.3079%" y="559.50"></text></g><g><title>nu_parser::parser::parse_table_expression (8 samples, 1.32%)</title><rect x="53.2231%" y="533" width="1.3223%" height="15" fill="rgb(254,105,3)" fg:x="322" fg:w="8"/><text x="53.4731%" y="543.50"></text></g><g><title>nu_parser::parser::parse_value (3 samples, 0.50%)</title><rect x="54.0496%" y="517" width="0.4959%" height="15" fill="rgb(221,225,9)" fg:x="327" fg:w="3"/><text x="54.2996%" y="527.50"></text></g><g><title>nu_parser::parser::parse_list_expression (3 samples, 0.50%)</title><rect x="54.0496%" y="501" width="0.4959%" height="15" fill="rgb(224,227,45)" fg:x="327" fg:w="3"/><text x="54.2996%" y="511.50"></text></g><g><title>nu_parser::parser::parse_multispan_value (3 samples, 0.50%)</title><rect x="54.0496%" y="485" width="0.4959%" height="15" fill="rgb(229,198,43)" fg:x="327" fg:w="3"/><text x="54.2996%" y="495.50"></text></g><g><title>nu_parser::parser::parse_value (3 samples, 0.50%)</title><rect x="54.0496%" y="469" width="0.4959%" height="15" fill="rgb(206,209,35)" fg:x="327" fg:w="3"/><text x="54.2996%" y="479.50"></text></g><g><title>nu_parser::parser::parse_value (2 samples, 0.33%)</title><rect x="54.2149%" y="453" width="0.3306%" height="15" fill="rgb(245,195,53)" fg:x="328" fg:w="2"/><text x="54.4649%" y="463.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (1 samples, 0.17%)</title><rect x="54.3802%" y="437" width="0.1653%" height="15" fill="rgb(240,92,26)" fg:x="329" fg:w="1"/><text x="54.6302%" y="447.50"></text></g><g><title>&lt;nu_protocol::syntax_shape::SyntaxShape as core::cmp::PartialEq&gt;::eq (1 samples, 0.17%)</title><rect x="54.5455%" y="437" width="0.1653%" height="15" fill="rgb(207,40,23)" fg:x="330" fg:w="1"/><text x="54.7955%" y="447.50"></text></g><g><title>nu_parser::parser::parse_int (1 samples, 0.17%)</title><rect x="54.7107%" y="437" width="0.1653%" height="15" fill="rgb(223,111,35)" fg:x="331" fg:w="1"/><text x="54.9607%" y="447.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.17%)</title><rect x="54.7107%" y="421" width="0.1653%" height="15" fill="rgb(229,147,28)" fg:x="331" fg:w="1"/><text x="54.9607%" y="431.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.17%)</title><rect x="54.7107%" y="405" width="0.1653%" height="15" fill="rgb(211,29,28)" fg:x="331" fg:w="1"/><text x="54.9607%" y="415.50"></text></g><g><title>nu_parser::parser::parse_list_expression (4 samples, 0.66%)</title><rect x="54.5455%" y="549" width="0.6612%" height="15" fill="rgb(228,72,33)" fg:x="330" fg:w="4"/><text x="54.7955%" y="559.50"></text></g><g><title>nu_parser::parser::parse_multispan_value (4 samples, 0.66%)</title><rect x="54.5455%" y="533" width="0.6612%" height="15" fill="rgb(205,214,31)" fg:x="330" fg:w="4"/><text x="54.7955%" y="543.50"></text></g><g><title>nu_parser::parser::parse_value (4 samples, 0.66%)</title><rect x="54.5455%" y="517" width="0.6612%" height="15" fill="rgb(224,111,15)" fg:x="330" fg:w="4"/><text x="54.7955%" y="527.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (4 samples, 0.66%)</title><rect x="54.5455%" y="501" width="0.6612%" height="15" fill="rgb(253,21,26)" fg:x="330" fg:w="4"/><text x="54.7955%" y="511.50"></text></g><g><title>nu_parser::parser::parse_record (4 samples, 0.66%)</title><rect x="54.5455%" y="485" width="0.6612%" height="15" fill="rgb(245,139,43)" fg:x="330" fg:w="4"/><text x="54.7955%" y="495.50"></text></g><g><title>nu_parser::parser::parse_value (4 samples, 0.66%)</title><rect x="54.5455%" y="469" width="0.6612%" height="15" fill="rgb(252,170,7)" fg:x="330" fg:w="4"/><text x="54.7955%" y="479.50"></text></g><g><title>nu_parser::parser::parse_value (4 samples, 0.66%)</title><rect x="54.5455%" y="453" width="0.6612%" height="15" fill="rgb(231,118,14)" fg:x="330" fg:w="4"/><text x="54.7955%" y="463.50"></text></g><g><title>nu_parser::parser::parse_string (2 samples, 0.33%)</title><rect x="54.8760%" y="437" width="0.3306%" height="15" fill="rgb(238,83,0)" fg:x="332" fg:w="2"/><text x="55.1260%" y="447.50"></text></g><g><title>nu_parser::parser::parse_math_expression (1 samples, 0.17%)</title><rect x="55.2066%" y="549" width="0.1653%" height="15" fill="rgb(221,39,39)" fg:x="334" fg:w="1"/><text x="55.4566%" y="559.50"></text></g><g><title>nu_parser::parser::parse_value (1 samples, 0.17%)</title><rect x="55.2066%" y="533" width="0.1653%" height="15" fill="rgb(222,119,46)" fg:x="334" fg:w="1"/><text x="55.4566%" y="543.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (1 samples, 0.17%)</title><rect x="55.2066%" y="517" width="0.1653%" height="15" fill="rgb(222,165,49)" fg:x="334" fg:w="1"/><text x="55.4566%" y="527.50"></text></g><g><title>nu_parser::parser::parse_table_expression (1 samples, 0.17%)</title><rect x="55.2066%" y="501" width="0.1653%" height="15" fill="rgb(219,113,52)" fg:x="334" fg:w="1"/><text x="55.4566%" y="511.50"></text></g><g><title>nu_parser::parser::parse_list_expression (1 samples, 0.17%)</title><rect x="55.2066%" y="485" width="0.1653%" height="15" fill="rgb(214,7,15)" fg:x="334" fg:w="1"/><text x="55.4566%" y="495.50"></text></g><g><title>nu_parser::lex::lex (1 samples, 0.17%)</title><rect x="55.2066%" y="469" width="0.1653%" height="15" fill="rgb(235,32,4)" fg:x="334" fg:w="1"/><text x="55.4566%" y="479.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (2 samples, 0.33%)</title><rect x="55.3719%" y="469" width="0.3306%" height="15" fill="rgb(238,90,54)" fg:x="335" fg:w="2"/><text x="55.6219%" y="479.50"></text></g><g><title>nu_parser::lex::lex (2 samples, 0.33%)</title><rect x="55.3719%" y="453" width="0.3306%" height="15" fill="rgb(213,208,19)" fg:x="335" fg:w="2"/><text x="55.6219%" y="463.50"></text></g><g><title>nu_parser::parser::parse_binary (2 samples, 0.33%)</title><rect x="55.7025%" y="453" width="0.3306%" height="15" fill="rgb(233,156,4)" fg:x="337" fg:w="2"/><text x="55.9525%" y="463.50"></text></g><g><title>[libc.so.6] (2 samples, 0.33%)</title><rect x="55.7025%" y="437" width="0.3306%" height="15" fill="rgb(207,194,5)" fg:x="337" fg:w="2"/><text x="55.9525%" y="447.50"></text></g><g><title>nu_parser::parser::parse_filesize (1 samples, 0.17%)</title><rect x="56.0331%" y="453" width="0.1653%" height="15" fill="rgb(206,111,30)" fg:x="339" fg:w="1"/><text x="56.2831%" y="463.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (1 samples, 0.17%)</title><rect x="56.0331%" y="437" width="0.1653%" height="15" fill="rgb(243,70,54)" fg:x="339" fg:w="1"/><text x="56.2831%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="56.3636%" y="437" width="0.1653%" height="15" fill="rgb(242,28,8)" fg:x="341" fg:w="1"/><text x="56.6136%" y="447.50"></text></g><g><title>nu_parser::parser::parse_number (3 samples, 0.50%)</title><rect x="56.1983%" y="453" width="0.4959%" height="15" fill="rgb(219,106,18)" fg:x="340" fg:w="3"/><text x="56.4483%" y="463.50"></text></g><g><title>nu_parser::parser::parse_int (1 samples, 0.17%)</title><rect x="56.5289%" y="437" width="0.1653%" height="15" fill="rgb(244,222,10)" fg:x="342" fg:w="1"/><text x="56.7789%" y="447.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.33%)</title><rect x="56.6942%" y="437" width="0.3306%" height="15" fill="rgb(236,179,52)" fg:x="343" fg:w="2"/><text x="56.9442%" y="447.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.33%)</title><rect x="56.6942%" y="421" width="0.3306%" height="15" fill="rgb(213,23,39)" fg:x="343" fg:w="2"/><text x="56.9442%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.33%)</title><rect x="57.0248%" y="437" width="0.3306%" height="15" fill="rgb(238,48,10)" fg:x="345" fg:w="2"/><text x="57.2748%" y="447.50"></text></g><g><title>malloc (2 samples, 0.33%)</title><rect x="57.0248%" y="421" width="0.3306%" height="15" fill="rgb(251,196,23)" fg:x="345" fg:w="2"/><text x="57.2748%" y="431.50"></text></g><g><title>cfree (1 samples, 0.17%)</title><rect x="57.3554%" y="437" width="0.1653%" height="15" fill="rgb(250,152,24)" fg:x="347" fg:w="1"/><text x="57.6054%" y="447.50"></text></g><g><title>nu_parser::parser::parse_range (6 samples, 0.99%)</title><rect x="56.6942%" y="453" width="0.9917%" height="15" fill="rgb(209,150,17)" fg:x="343" fg:w="6"/><text x="56.9442%" y="463.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (1 samples, 0.17%)</title><rect x="57.5207%" y="437" width="0.1653%" height="15" fill="rgb(234,202,34)" fg:x="348" fg:w="1"/><text x="57.7707%" y="447.50"></text></g><g><title>nu_parser::parser::parse_multispan_value (20 samples, 3.31%)</title><rect x="55.3719%" y="549" width="3.3058%" height="15" fill="rgb(253,148,53)" fg:x="335" fg:w="20"/><text x="55.6219%" y="559.50">nu_..</text></g><g><title>nu_parser::parser::parse_value (20 samples, 3.31%)</title><rect x="55.3719%" y="533" width="3.3058%" height="15" fill="rgb(218,129,16)" fg:x="335" fg:w="20"/><text x="55.6219%" y="543.50">nu_..</text></g><g><title>nu_parser::parser::parse_full_cell_path (20 samples, 3.31%)</title><rect x="55.3719%" y="517" width="3.3058%" height="15" fill="rgb(216,85,19)" fg:x="335" fg:w="20"/><text x="55.6219%" y="527.50">nu_..</text></g><g><title>nu_parser::parser::parse_record (20 samples, 3.31%)</title><rect x="55.3719%" y="501" width="3.3058%" height="15" fill="rgb(235,228,7)" fg:x="335" fg:w="20"/><text x="55.6219%" y="511.50">nu_..</text></g><g><title>nu_parser::parser::parse_value (20 samples, 3.31%)</title><rect x="55.3719%" y="485" width="3.3058%" height="15" fill="rgb(245,175,0)" fg:x="335" fg:w="20"/><text x="55.6219%" y="495.50">nu_..</text></g><g><title>nu_parser::parser::parse_value (18 samples, 2.98%)</title><rect x="55.7025%" y="469" width="2.9752%" height="15" fill="rgb(208,168,36)" fg:x="337" fg:w="18"/><text x="55.9525%" y="479.50">nu_..</text></g><g><title>nu_parser::parser::parse_string (6 samples, 0.99%)</title><rect x="57.6860%" y="453" width="0.9917%" height="15" fill="rgb(246,171,24)" fg:x="349" fg:w="6"/><text x="57.9360%" y="463.50"></text></g><g><title>nu_parser::parser::unescape_unquote_string (6 samples, 0.99%)</title><rect x="57.6860%" y="437" width="0.9917%" height="15" fill="rgb(215,142,24)" fg:x="349" fg:w="6"/><text x="57.9360%" y="447.50"></text></g><g><title>nu_parser::parser::unescape_string (6 samples, 0.99%)</title><rect x="57.6860%" y="421" width="0.9917%" height="15" fill="rgb(250,187,7)" fg:x="349" fg:w="6"/><text x="57.9360%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.17%)</title><rect x="58.5124%" y="405" width="0.1653%" height="15" fill="rgb(228,66,33)" fg:x="354" fg:w="1"/><text x="58.7624%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.17%)</title><rect x="58.5124%" y="389" width="0.1653%" height="15" fill="rgb(234,215,21)" fg:x="354" fg:w="1"/><text x="58.7624%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.17%)</title><rect x="58.5124%" y="373" width="0.1653%" height="15" fill="rgb(222,191,20)" fg:x="354" fg:w="1"/><text x="58.7624%" y="383.50"></text></g><g><title>realloc (1 samples, 0.17%)</title><rect x="58.5124%" y="357" width="0.1653%" height="15" fill="rgb(245,79,54)" fg:x="354" fg:w="1"/><text x="58.7624%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="58.5124%" y="341" width="0.1653%" height="15" fill="rgb(240,10,37)" fg:x="354" fg:w="1"/><text x="58.7624%" y="351.50"></text></g><g><title>nu_parser::parser::parse_range (2 samples, 0.33%)</title><rect x="58.6777%" y="549" width="0.3306%" height="15" fill="rgb(214,192,32)" fg:x="355" fg:w="2"/><text x="58.9277%" y="559.50"></text></g><g><title>nu_parser::parser::parse_record (1 samples, 0.17%)</title><rect x="59.0083%" y="501" width="0.1653%" height="15" fill="rgb(209,36,54)" fg:x="357" fg:w="1"/><text x="59.2583%" y="511.50"></text></g><g><title>nu_parser::parser::parse_value (1 samples, 0.17%)</title><rect x="59.0083%" y="485" width="0.1653%" height="15" fill="rgb(220,10,11)" fg:x="357" fg:w="1"/><text x="59.2583%" y="495.50"></text></g><g><title>nu_parser::parser::parse_value (1 samples, 0.17%)</title><rect x="59.0083%" y="469" width="0.1653%" height="15" fill="rgb(221,106,17)" fg:x="357" fg:w="1"/><text x="59.2583%" y="479.50"></text></g><g><title>nu_parser::parser::parse_binary (1 samples, 0.17%)</title><rect x="59.0083%" y="453" width="0.1653%" height="15" fill="rgb(251,142,44)" fg:x="357" fg:w="1"/><text x="59.2583%" y="463.50"></text></g><g><title>nu_parser::parser::parse_binary_with_base (1 samples, 0.17%)</title><rect x="59.0083%" y="437" width="0.1653%" height="15" fill="rgb(238,13,15)" fg:x="357" fg:w="1"/><text x="59.2583%" y="447.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (1 samples, 0.17%)</title><rect x="59.0083%" y="421" width="0.1653%" height="15" fill="rgb(208,107,27)" fg:x="357" fg:w="1"/><text x="59.2583%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.33%)</title><rect x="59.1736%" y="453" width="0.3306%" height="15" fill="rgb(205,136,37)" fg:x="358" fg:w="2"/><text x="59.4236%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.33%)</title><rect x="59.1736%" y="437" width="0.3306%" height="15" fill="rgb(250,205,27)" fg:x="358" fg:w="2"/><text x="59.4236%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.33%)</title><rect x="59.1736%" y="421" width="0.3306%" height="15" fill="rgb(210,80,43)" fg:x="358" fg:w="2"/><text x="59.4236%" y="431.50"></text></g><g><title>realloc (2 samples, 0.33%)</title><rect x="59.1736%" y="405" width="0.3306%" height="15" fill="rgb(247,160,36)" fg:x="358" fg:w="2"/><text x="59.4236%" y="415.50"></text></g><g><title>[libc.so.6] (2 samples, 0.33%)</title><rect x="59.1736%" y="389" width="0.3306%" height="15" fill="rgb(234,13,49)" fg:x="358" fg:w="2"/><text x="59.4236%" y="399.50"></text></g><g><title>[libc.so.6] (2 samples, 0.33%)</title><rect x="59.1736%" y="373" width="0.3306%" height="15" fill="rgb(234,122,0)" fg:x="358" fg:w="2"/><text x="59.4236%" y="383.50"></text></g><g><title>[libc.so.6] (2 samples, 0.33%)</title><rect x="59.1736%" y="357" width="0.3306%" height="15" fill="rgb(207,146,38)" fg:x="358" fg:w="2"/><text x="59.4236%" y="367.50"></text></g><g><title>nu_parser::parser::parse_record (6 samples, 0.99%)</title><rect x="59.0083%" y="549" width="0.9917%" height="15" fill="rgb(207,177,25)" fg:x="357" fg:w="6"/><text x="59.2583%" y="559.50"></text></g><g><title>nu_parser::parser::parse_value (6 samples, 0.99%)</title><rect x="59.0083%" y="533" width="0.9917%" height="15" fill="rgb(211,178,42)" fg:x="357" fg:w="6"/><text x="59.2583%" y="543.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (6 samples, 0.99%)</title><rect x="59.0083%" y="517" width="0.9917%" height="15" fill="rgb(230,69,54)" fg:x="357" fg:w="6"/><text x="59.2583%" y="527.50"></text></g><g><title>nu_parser::parser::parse_table_expression (5 samples, 0.83%)</title><rect x="59.1736%" y="501" width="0.8264%" height="15" fill="rgb(214,135,41)" fg:x="358" fg:w="5"/><text x="59.4236%" y="511.50"></text></g><g><title>nu_parser::parser::parse_value (5 samples, 0.83%)</title><rect x="59.1736%" y="485" width="0.8264%" height="15" fill="rgb(237,67,25)" fg:x="358" fg:w="5"/><text x="59.4236%" y="495.50"></text></g><g><title>nu_parser::parser::parse_list_expression (5 samples, 0.83%)</title><rect x="59.1736%" y="469" width="0.8264%" height="15" fill="rgb(222,189,50)" fg:x="358" fg:w="5"/><text x="59.4236%" y="479.50"></text></g><g><title>nu_parser::lex::lex (3 samples, 0.50%)</title><rect x="59.5041%" y="453" width="0.4959%" height="15" fill="rgb(245,148,34)" fg:x="360" fg:w="3"/><text x="59.7541%" y="463.50"></text></g><g><title>nu_parser::lex::lex (3 samples, 0.50%)</title><rect x="60.0000%" y="453" width="0.4959%" height="15" fill="rgb(222,29,6)" fg:x="363" fg:w="3"/><text x="60.2500%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.17%)</title><rect x="60.3306%" y="437" width="0.1653%" height="15" fill="rgb(221,189,43)" fg:x="365" fg:w="1"/><text x="60.5806%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.17%)</title><rect x="60.3306%" y="421" width="0.1653%" height="15" fill="rgb(207,36,27)" fg:x="365" fg:w="1"/><text x="60.5806%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.17%)</title><rect x="60.3306%" y="405" width="0.1653%" height="15" fill="rgb(217,90,24)" fg:x="365" fg:w="1"/><text x="60.5806%" y="415.50"></text></g><g><title>realloc (1 samples, 0.17%)</title><rect x="60.3306%" y="389" width="0.1653%" height="15" fill="rgb(224,66,35)" fg:x="365" fg:w="1"/><text x="60.5806%" y="399.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="60.3306%" y="373" width="0.1653%" height="15" fill="rgb(221,13,50)" fg:x="365" fg:w="1"/><text x="60.5806%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="60.3306%" y="357" width="0.1653%" height="15" fill="rgb(236,68,49)" fg:x="365" fg:w="1"/><text x="60.5806%" y="367.50"></text></g><g><title>nu_parser::parser::parse_list_expression (4 samples, 0.66%)</title><rect x="60.0000%" y="533" width="0.6612%" height="15" fill="rgb(229,146,28)" fg:x="363" fg:w="4"/><text x="60.2500%" y="543.50"></text></g><g><title>nu_parser::parser::parse_multispan_value (4 samples, 0.66%)</title><rect x="60.0000%" y="517" width="0.6612%" height="15" fill="rgb(225,31,38)" fg:x="363" fg:w="4"/><text x="60.2500%" y="527.50"></text></g><g><title>nu_parser::parser::parse_value (4 samples, 0.66%)</title><rect x="60.0000%" y="501" width="0.6612%" height="15" fill="rgb(250,208,3)" fg:x="363" fg:w="4"/><text x="60.2500%" y="511.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (4 samples, 0.66%)</title><rect x="60.0000%" y="485" width="0.6612%" height="15" fill="rgb(246,54,23)" fg:x="363" fg:w="4"/><text x="60.2500%" y="495.50"></text></g><g><title>nu_parser::parser::parse_record (4 samples, 0.66%)</title><rect x="60.0000%" y="469" width="0.6612%" height="15" fill="rgb(243,76,11)" fg:x="363" fg:w="4"/><text x="60.2500%" y="479.50"></text></g><g><title>nu_parser::parser::parse_value (1 samples, 0.17%)</title><rect x="60.4959%" y="453" width="0.1653%" height="15" fill="rgb(245,21,50)" fg:x="366" fg:w="1"/><text x="60.7459%" y="463.50"></text></g><g><title>nu_parser::lex::lex (2 samples, 0.33%)</title><rect x="60.6612%" y="453" width="0.3306%" height="15" fill="rgb(228,9,43)" fg:x="367" fg:w="2"/><text x="60.9112%" y="463.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (7 samples, 1.16%)</title><rect x="60.6612%" y="469" width="1.1570%" height="15" fill="rgb(208,100,47)" fg:x="367" fg:w="7"/><text x="60.9112%" y="479.50"></text></g><g><title>nu_parser::parser::parse_record (5 samples, 0.83%)</title><rect x="60.9917%" y="453" width="0.8264%" height="15" fill="rgb(232,26,8)" fg:x="369" fg:w="5"/><text x="61.2417%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.17%)</title><rect x="61.6529%" y="437" width="0.1653%" height="15" fill="rgb(216,166,38)" fg:x="373" fg:w="1"/><text x="61.9029%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.17%)</title><rect x="61.6529%" y="421" width="0.1653%" height="15" fill="rgb(251,202,51)" fg:x="373" fg:w="1"/><text x="61.9029%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.17%)</title><rect x="61.6529%" y="405" width="0.1653%" height="15" fill="rgb(254,216,34)" fg:x="373" fg:w="1"/><text x="61.9029%" y="415.50"></text></g><g><title>realloc (1 samples, 0.17%)</title><rect x="61.6529%" y="389" width="0.1653%" height="15" fill="rgb(251,32,27)" fg:x="373" fg:w="1"/><text x="61.9029%" y="399.50"></text></g><g><title>nu_parser::parser::parse_table_expression (12 samples, 1.98%)</title><rect x="60.0000%" y="549" width="1.9835%" height="15" fill="rgb(208,127,28)" fg:x="363" fg:w="12"/><text x="60.2500%" y="559.50">n..</text></g><g><title>nu_parser::parser::parse_value (8 samples, 1.32%)</title><rect x="60.6612%" y="533" width="1.3223%" height="15" fill="rgb(224,137,22)" fg:x="367" fg:w="8"/><text x="60.9112%" y="543.50"></text></g><g><title>nu_parser::parser::parse_list_expression (8 samples, 1.32%)</title><rect x="60.6612%" y="517" width="1.3223%" height="15" fill="rgb(254,70,32)" fg:x="367" fg:w="8"/><text x="60.9112%" y="527.50"></text></g><g><title>nu_parser::parser::parse_multispan_value (8 samples, 1.32%)</title><rect x="60.6612%" y="501" width="1.3223%" height="15" fill="rgb(229,75,37)" fg:x="367" fg:w="8"/><text x="60.9112%" y="511.50"></text></g><g><title>nu_parser::parser::parse_value (8 samples, 1.32%)</title><rect x="60.6612%" y="485" width="1.3223%" height="15" fill="rgb(252,64,23)" fg:x="367" fg:w="8"/><text x="60.9112%" y="495.50"></text></g><g><title>nu_parser::parser::parse_value (1 samples, 0.17%)</title><rect x="61.8182%" y="469" width="0.1653%" height="15" fill="rgb(232,162,48)" fg:x="374" fg:w="1"/><text x="62.0682%" y="479.50"></text></g><g><title>nu_parser::parser::parse_binary (1 samples, 0.17%)</title><rect x="61.8182%" y="453" width="0.1653%" height="15" fill="rgb(246,160,12)" fg:x="374" fg:w="1"/><text x="62.0682%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="61.8182%" y="437" width="0.1653%" height="15" fill="rgb(247,166,0)" fg:x="374" fg:w="1"/><text x="62.0682%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="62.1488%" y="453" width="0.1653%" height="15" fill="rgb(249,219,21)" fg:x="376" fg:w="1"/><text x="62.3988%" y="463.50"></text></g><g><title>nu_parser::parser::parse_record (3 samples, 0.50%)</title><rect x="61.9835%" y="517" width="0.4959%" height="15" fill="rgb(205,209,3)" fg:x="375" fg:w="3"/><text x="62.2335%" y="527.50"></text></g><g><title>nu_parser::parser::parse_value (3 samples, 0.50%)</title><rect x="61.9835%" y="501" width="0.4959%" height="15" fill="rgb(243,44,1)" fg:x="375" fg:w="3"/><text x="62.2335%" y="511.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (3 samples, 0.50%)</title><rect x="61.9835%" y="485" width="0.4959%" height="15" fill="rgb(206,159,16)" fg:x="375" fg:w="3"/><text x="62.2335%" y="495.50"></text></g><g><title>nu_parser::parser::parse_record (3 samples, 0.50%)</title><rect x="61.9835%" y="469" width="0.4959%" height="15" fill="rgb(244,77,30)" fg:x="375" fg:w="3"/><text x="62.2335%" y="479.50"></text></g><g><title>nu_parser::lex::lex (1 samples, 0.17%)</title><rect x="62.3140%" y="453" width="0.1653%" height="15" fill="rgb(218,69,12)" fg:x="377" fg:w="1"/><text x="62.5640%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;(nu_protocol::ast::expression::Expression,core::option::Option&lt;nu_parser::errors::ParseError&gt;)&gt; (1 samples, 0.17%)</title><rect x="62.4793%" y="437" width="0.1653%" height="15" fill="rgb(212,87,7)" fg:x="378" fg:w="1"/><text x="62.7293%" y="447.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (5 samples, 0.83%)</title><rect x="61.9835%" y="533" width="0.8264%" height="15" fill="rgb(245,114,25)" fg:x="375" fg:w="5"/><text x="62.2335%" y="543.50"></text></g><g><title>nu_parser::parser::parse_table_expression (2 samples, 0.33%)</title><rect x="62.4793%" y="517" width="0.3306%" height="15" fill="rgb(210,61,42)" fg:x="378" fg:w="2"/><text x="62.7293%" y="527.50"></text></g><g><title>nu_parser::parser::parse_value (2 samples, 0.33%)</title><rect x="62.4793%" y="501" width="0.3306%" height="15" fill="rgb(211,52,33)" fg:x="378" fg:w="2"/><text x="62.7293%" y="511.50"></text></g><g><title>nu_parser::parser::parse_list_expression (2 samples, 0.33%)</title><rect x="62.4793%" y="485" width="0.3306%" height="15" fill="rgb(234,58,33)" fg:x="378" fg:w="2"/><text x="62.7293%" y="495.50"></text></g><g><title>nu_parser::parser::parse_multispan_value (2 samples, 0.33%)</title><rect x="62.4793%" y="469" width="0.3306%" height="15" fill="rgb(220,115,36)" fg:x="378" fg:w="2"/><text x="62.7293%" y="479.50"></text></g><g><title>nu_parser::parser::parse_value (2 samples, 0.33%)</title><rect x="62.4793%" y="453" width="0.3306%" height="15" fill="rgb(243,153,54)" fg:x="378" fg:w="2"/><text x="62.7293%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::syntax_shape::SyntaxShape: 10]&gt; (1 samples, 0.17%)</title><rect x="62.6446%" y="437" width="0.1653%" height="15" fill="rgb(251,47,18)" fg:x="379" fg:w="1"/><text x="62.8946%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::syntax_shape::SyntaxShape&gt; (1 samples, 0.17%)</title><rect x="62.6446%" y="421" width="0.1653%" height="15" fill="rgb(242,102,42)" fg:x="379" fg:w="1"/><text x="62.8946%" y="431.50"></text></g><g><title>nu_parser::parser::parse_value (8 samples, 1.32%)</title><rect x="61.9835%" y="549" width="1.3223%" height="15" fill="rgb(234,31,38)" fg:x="375" fg:w="8"/><text x="62.2335%" y="559.50"></text></g><g><title>nu_parser::parser::parse_list_expression (3 samples, 0.50%)</title><rect x="62.8099%" y="533" width="0.4959%" height="15" fill="rgb(221,117,51)" fg:x="380" fg:w="3"/><text x="63.0599%" y="543.50"></text></g><g><title>nu_parser::parser::parse_multispan_value (3 samples, 0.50%)</title><rect x="62.8099%" y="517" width="0.4959%" height="15" fill="rgb(212,20,18)" fg:x="380" fg:w="3"/><text x="63.0599%" y="527.50"></text></g><g><title>nu_parser::parser::parse_value (3 samples, 0.50%)</title><rect x="62.8099%" y="501" width="0.4959%" height="15" fill="rgb(245,133,36)" fg:x="380" fg:w="3"/><text x="63.0599%" y="511.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (3 samples, 0.50%)</title><rect x="62.8099%" y="485" width="0.4959%" height="15" fill="rgb(212,6,19)" fg:x="380" fg:w="3"/><text x="63.0599%" y="495.50"></text></g><g><title>nu_parser::parser::parse_record (3 samples, 0.50%)</title><rect x="62.8099%" y="469" width="0.4959%" height="15" fill="rgb(218,1,36)" fg:x="380" fg:w="3"/><text x="63.0599%" y="479.50"></text></g><g><title>nu_parser::lex::lex (3 samples, 0.50%)</title><rect x="62.8099%" y="453" width="0.4959%" height="15" fill="rgb(246,84,54)" fg:x="380" fg:w="3"/><text x="63.0599%" y="463.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_decl (1 samples, 0.17%)</title><rect x="63.3058%" y="549" width="0.1653%" height="15" fill="rgb(242,110,6)" fg:x="383" fg:w="1"/><text x="63.5558%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.50%)</title><rect x="63.9669%" y="357" width="0.4959%" height="15" fill="rgb(214,47,5)" fg:x="387" fg:w="3"/><text x="64.2169%" y="367.50"></text></g><g><title>malloc (3 samples, 0.50%)</title><rect x="63.9669%" y="341" width="0.4959%" height="15" fill="rgb(218,159,25)" fg:x="387" fg:w="3"/><text x="64.2169%" y="351.50"></text></g><g><title>[libc.so.6] (2 samples, 0.33%)</title><rect x="64.1322%" y="325" width="0.3306%" height="15" fill="rgb(215,211,28)" fg:x="388" fg:w="2"/><text x="64.3822%" y="335.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (7 samples, 1.16%)</title><rect x="63.4711%" y="389" width="1.1570%" height="15" fill="rgb(238,59,32)" fg:x="384" fg:w="7"/><text x="63.7211%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 1.16%)</title><rect x="63.4711%" y="373" width="1.1570%" height="15" fill="rgb(226,82,3)" fg:x="384" fg:w="7"/><text x="63.7211%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="64.4628%" y="357" width="0.1653%" height="15" fill="rgb(240,164,32)" fg:x="390" fg:w="1"/><text x="64.7128%" y="367.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (9 samples, 1.49%)</title><rect x="63.4711%" y="485" width="1.4876%" height="15" fill="rgb(232,46,7)" fg:x="384" fg:w="9"/><text x="63.7211%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 1.49%)</title><rect x="63.4711%" y="469" width="1.4876%" height="15" fill="rgb(229,129,53)" fg:x="384" fg:w="9"/><text x="63.7211%" y="479.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (9 samples, 1.49%)</title><rect x="63.4711%" y="453" width="1.4876%" height="15" fill="rgb(234,188,29)" fg:x="384" fg:w="9"/><text x="63.7211%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 1.49%)</title><rect x="63.4711%" y="437" width="1.4876%" height="15" fill="rgb(246,141,4)" fg:x="384" fg:w="9"/><text x="63.7211%" y="447.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (9 samples, 1.49%)</title><rect x="63.4711%" y="421" width="1.4876%" height="15" fill="rgb(229,23,39)" fg:x="384" fg:w="9"/><text x="63.7211%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 1.49%)</title><rect x="63.4711%" y="405" width="1.4876%" height="15" fill="rgb(206,12,3)" fg:x="384" fg:w="9"/><text x="63.7211%" y="415.50"></text></g><g><title>[libc.so.6] (2 samples, 0.33%)</title><rect x="64.6281%" y="389" width="0.3306%" height="15" fill="rgb(252,226,20)" fg:x="391" fg:w="2"/><text x="64.8781%" y="399.50"></text></g><g><title>std::io::Write::write_all (22 samples, 3.64%)</title><rect x="65.1240%" y="341" width="3.6364%" height="15" fill="rgb(216,123,35)" fg:x="394" fg:w="22"/><text x="65.3740%" y="351.50">std:..</text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (22 samples, 3.64%)</title><rect x="65.1240%" y="325" width="3.6364%" height="15" fill="rgb(212,68,40)" fg:x="394" fg:w="22"/><text x="65.3740%" y="335.50">&lt;str..</text></g><g><title>vte::Parser::perform_action (7 samples, 1.16%)</title><rect x="67.6033%" y="309" width="1.1570%" height="15" fill="rgb(254,125,32)" fg:x="409" fg:w="7"/><text x="67.8533%" y="319.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::with_capacity (1 samples, 0.17%)</title><rect x="68.7603%" y="341" width="0.1653%" height="15" fill="rgb(253,97,22)" fg:x="416" fg:w="1"/><text x="69.0103%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.17%)</title><rect x="68.7603%" y="325" width="0.1653%" height="15" fill="rgb(241,101,14)" fg:x="416" fg:w="1"/><text x="69.0103%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (25 samples, 4.13%)</title><rect x="64.9587%" y="405" width="4.1322%" height="15" fill="rgb(238,103,29)" fg:x="393" fg:w="25"/><text x="65.2087%" y="415.50">&lt;allo..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (25 samples, 4.13%)</title><rect x="64.9587%" y="389" width="4.1322%" height="15" fill="rgb(233,195,47)" fg:x="393" fg:w="25"/><text x="65.2087%" y="399.50">&lt;core..</text></g><g><title>papergrid::string_width (25 samples, 4.13%)</title><rect x="64.9587%" y="373" width="4.1322%" height="15" fill="rgb(246,218,30)" fg:x="393" fg:w="25"/><text x="65.2087%" y="383.50">paper..</text></g><g><title>strip_ansi_escapes::strip (25 samples, 4.13%)</title><rect x="64.9587%" y="357" width="4.1322%" height="15" fill="rgb(219,145,47)" fg:x="393" fg:w="25"/><text x="65.2087%" y="367.50">strip..</text></g><g><title>strip_ansi_escapes::Performer&lt;W&gt;::into_inner (1 samples, 0.17%)</title><rect x="68.9256%" y="341" width="0.1653%" height="15" fill="rgb(243,12,26)" fg:x="417" fg:w="1"/><text x="69.1756%" y="351.50"></text></g><g><title>std::io::buffered::linewriter::LineWriter&lt;W&gt;::into_inner (1 samples, 0.17%)</title><rect x="68.9256%" y="325" width="0.1653%" height="15" fill="rgb(214,87,16)" fg:x="417" fg:w="1"/><text x="69.1756%" y="335.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::into_inner (1 samples, 0.17%)</title><rect x="68.9256%" y="309" width="0.1653%" height="15" fill="rgb(208,99,42)" fg:x="417" fg:w="1"/><text x="69.1756%" y="319.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.17%)</title><rect x="68.9256%" y="293" width="0.1653%" height="15" fill="rgb(253,99,2)" fg:x="417" fg:w="1"/><text x="69.1756%" y="303.50"></text></g><g><title>std::io::cursor::vec_write (1 samples, 0.17%)</title><rect x="68.9256%" y="277" width="0.1653%" height="15" fill="rgb(220,168,23)" fg:x="417" fg:w="1"/><text x="69.1756%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.17%)</title><rect x="68.9256%" y="261" width="0.1653%" height="15" fill="rgb(242,38,24)" fg:x="417" fg:w="1"/><text x="69.1756%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.17%)</title><rect x="68.9256%" y="245" width="0.1653%" height="15" fill="rgb(225,182,9)" fg:x="417" fg:w="1"/><text x="69.1756%" y="255.50"></text></g><g><title>malloc (1 samples, 0.17%)</title><rect x="68.9256%" y="229" width="0.1653%" height="15" fill="rgb(243,178,37)" fg:x="417" fg:w="1"/><text x="69.1756%" y="239.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position (1 samples, 0.17%)</title><rect x="79.8347%" y="277" width="0.1653%" height="15" fill="rgb(232,139,19)" fg:x="483" fg:w="1"/><text x="80.0847%" y="287.50"></text></g><g><title>ansi_parser::parsers::cursor_backward (16 samples, 2.64%)</title><rect x="78.1818%" y="309" width="2.6446%" height="15" fill="rgb(225,201,24)" fg:x="473" fg:w="16"/><text x="78.4318%" y="319.50">an..</text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (12 samples, 1.98%)</title><rect x="78.8430%" y="293" width="1.9835%" height="15" fill="rgb(221,47,46)" fg:x="477" fg:w="12"/><text x="79.0930%" y="303.50">a..</text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (5 samples, 0.83%)</title><rect x="80.0000%" y="277" width="0.8264%" height="15" fill="rgb(249,23,13)" fg:x="484" fg:w="5"/><text x="80.2500%" y="287.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position (6 samples, 0.99%)</title><rect x="83.1405%" y="277" width="0.9917%" height="15" fill="rgb(219,9,5)" fg:x="503" fg:w="6"/><text x="83.3905%" y="287.50"></text></g><g><title>ansi_parser::parsers::cursor_forward (28 samples, 4.63%)</title><rect x="80.8264%" y="309" width="4.6281%" height="15" fill="rgb(254,171,16)" fg:x="489" fg:w="28"/><text x="81.0764%" y="319.50">ansi_..</text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (20 samples, 3.31%)</title><rect x="82.1488%" y="293" width="3.3058%" height="15" fill="rgb(230,171,20)" fg:x="497" fg:w="20"/><text x="82.3988%" y="303.50">ans..</text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (8 samples, 1.32%)</title><rect x="84.1322%" y="277" width="1.3223%" height="15" fill="rgb(210,71,41)" fg:x="509" fg:w="8"/><text x="84.3822%" y="287.50"></text></g><g><title>ansi_parser::parsers::cursor_restore (3 samples, 0.50%)</title><rect x="85.4545%" y="309" width="0.4959%" height="15" fill="rgb(206,173,20)" fg:x="517" fg:w="3"/><text x="85.7045%" y="319.50"></text></g><g><title>ansi_parser::parsers::erase_display (4 samples, 0.66%)</title><rect x="85.9504%" y="309" width="0.6612%" height="15" fill="rgb(233,88,34)" fg:x="520" fg:w="4"/><text x="86.2004%" y="319.50"></text></g><g><title>ansi_parser::parsers::erase_line (1 samples, 0.17%)</title><rect x="86.6116%" y="309" width="0.1653%" height="15" fill="rgb(223,209,46)" fg:x="524" fg:w="1"/><text x="86.8616%" y="319.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position (23 samples, 3.80%)</title><rect x="90.9091%" y="293" width="3.8017%" height="15" fill="rgb(250,43,18)" fg:x="550" fg:w="23"/><text x="91.1591%" y="303.50">&lt;&amp;st..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (188 samples, 31.07%)</title><rect x="64.9587%" y="421" width="31.0744%" height="15" fill="rgb(208,13,10)" fg:x="393" fg:w="188"/><text x="65.2087%" y="431.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (163 samples, 26.94%)</title><rect x="69.0909%" y="405" width="26.9421%" height="15" fill="rgb(212,200,36)" fg:x="418" fg:w="163"/><text x="69.3409%" y="415.50">alloc::vec::Vec&lt;T,A&gt;::extend_desugared</text></g><g><title>&lt;ansi_str::AnsiSplit as core::iter::traits::iterator::Iterator&gt;::next (163 samples, 26.94%)</title><rect x="69.0909%" y="389" width="26.9421%" height="15" fill="rgb(225,90,30)" fg:x="418" fg:w="163"/><text x="69.3409%" y="399.50">&lt;ansi_str::AnsiSplit as core::iter::traits:..</text></g><g><title>&lt;str as ansi_str::AnsiStr&gt;::ansi_get (163 samples, 26.94%)</title><rect x="69.0909%" y="373" width="26.9421%" height="15" fill="rgb(236,182,39)" fg:x="418" fg:w="163"/><text x="69.3409%" y="383.50">&lt;str as ansi_str::AnsiStr&gt;::ansi_get</text></g><g><title>ansi_str::get (163 samples, 26.94%)</title><rect x="69.0909%" y="357" width="26.9421%" height="15" fill="rgb(212,144,35)" fg:x="418" fg:w="163"/><text x="69.3409%" y="367.50">ansi_str::get</text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (163 samples, 26.94%)</title><rect x="69.0909%" y="341" width="26.9421%" height="15" fill="rgb(228,63,44)" fg:x="418" fg:w="163"/><text x="69.3409%" y="351.50">&lt;ansi_parser::traits::AnsiParseIterator as ..</text></g><g><title>ansi_parser::parsers::parse_escape (163 samples, 26.94%)</title><rect x="69.0909%" y="325" width="26.9421%" height="15" fill="rgb(228,109,6)" fg:x="418" fg:w="163"/><text x="69.3409%" y="335.50">ansi_parser::parsers::parse_escape</text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (56 samples, 9.26%)</title><rect x="86.7769%" y="309" width="9.2562%" height="15" fill="rgb(238,117,24)" fg:x="525" fg:w="56"/><text x="87.0269%" y="319.50">ansi_parser::..</text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (8 samples, 1.32%)</title><rect x="94.7107%" y="293" width="1.3223%" height="15" fill="rgb(242,26,26)" fg:x="573" fg:w="8"/><text x="94.9607%" y="303.50"></text></g><g><title>ansi_parser::parsers::cursor_backward (1 samples, 0.17%)</title><rect x="96.3636%" y="373" width="0.1653%" height="15" fill="rgb(221,92,48)" fg:x="583" fg:w="1"/><text x="96.6136%" y="383.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (1 samples, 0.17%)</title><rect x="96.3636%" y="357" width="0.1653%" height="15" fill="rgb(209,209,32)" fg:x="583" fg:w="1"/><text x="96.6136%" y="367.50"></text></g><g><title>ansi_parser::parsers::graphics_mode (1 samples, 0.17%)</title><rect x="96.5289%" y="373" width="0.1653%" height="15" fill="rgb(221,70,22)" fg:x="584" fg:w="1"/><text x="96.7789%" y="383.50"></text></g><g><title>nu_command::viewers::table::print_table (194 samples, 32.07%)</title><rect x="64.9587%" y="485" width="32.0661%" height="15" fill="rgb(248,145,5)" fg:x="393" fg:w="194"/><text x="65.2087%" y="495.50">nu_command::viewers::table::print_table</text></g><g><title>core::fmt::write (194 samples, 32.07%)</title><rect x="64.9587%" y="469" width="32.0661%" height="15" fill="rgb(226,116,26)" fg:x="393" fg:w="194"/><text x="65.2087%" y="479.50">core::fmt::write</text></g><g><title>&lt;papergrid::Grid as core::fmt::Display&gt;::fmt (194 samples, 32.07%)</title><rect x="64.9587%" y="453" width="32.0661%" height="15" fill="rgb(244,5,17)" fg:x="393" fg:w="194"/><text x="65.2087%" y="463.50">&lt;papergrid::Grid as core::fmt::Display&gt;::fmt</text></g><g><title>papergrid::cells_content (194 samples, 32.07%)</title><rect x="64.9587%" y="437" width="32.0661%" height="15" fill="rgb(252,159,33)" fg:x="393" fg:w="194"/><text x="65.2087%" y="447.50">papergrid::cells_content</text></g><g><title>&lt;str as ansi_str::AnsiStr&gt;::ansi_strip (6 samples, 0.99%)</title><rect x="96.0331%" y="421" width="0.9917%" height="15" fill="rgb(206,71,0)" fg:x="581" fg:w="6"/><text x="96.2831%" y="431.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.99%)</title><rect x="96.0331%" y="405" width="0.9917%" height="15" fill="rgb(233,118,54)" fg:x="581" fg:w="6"/><text x="96.2831%" y="415.50"></text></g><g><title>ansi_parser::parsers::parse_escape (6 samples, 0.99%)</title><rect x="96.0331%" y="389" width="0.9917%" height="15" fill="rgb(234,83,48)" fg:x="581" fg:w="6"/><text x="96.2831%" y="399.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (2 samples, 0.33%)</title><rect x="96.6942%" y="373" width="0.3306%" height="15" fill="rgb(228,3,54)" fg:x="585" fg:w="2"/><text x="96.9442%" y="383.50"></text></g><g><title>nu_protocol::pipeline_data::PipelineData::print (205 samples, 33.88%)</title><rect x="63.4711%" y="549" width="33.8843%" height="15" fill="rgb(226,155,13)" fg:x="384" fg:w="205"/><text x="63.7211%" y="559.50">nu_protocol::pipeline_data::PipelineData::print</text></g><g><title>&lt;nu_protocol::pipeline_data::PipelineIterator as core::iter::traits::iterator::Iterator&gt;::next (205 samples, 33.88%)</title><rect x="63.4711%" y="533" width="33.8843%" height="15" fill="rgb(241,28,37)" fg:x="384" fg:w="205"/><text x="63.7211%" y="543.50">&lt;nu_protocol::pipeline_data::PipelineIterator as core::..</text></g><g><title>&lt;nu_protocol::value::stream::RawStream as core::iter::traits::iterator::Iterator&gt;::next (205 samples, 33.88%)</title><rect x="63.4711%" y="517" width="33.8843%" height="15" fill="rgb(233,93,10)" fg:x="384" fg:w="205"/><text x="63.7211%" y="527.50">&lt;nu_protocol::value::stream::RawStream as core::iter::t..</text></g><g><title>&lt;nu_command::viewers::table::PagingTableCreator as core::iter::traits::iterator::Iterator&gt;::next (205 samples, 33.88%)</title><rect x="63.4711%" y="501" width="33.8843%" height="15" fill="rgb(225,113,19)" fg:x="384" fg:w="205"/><text x="63.7211%" y="511.50">&lt;nu_command::viewers::table::PagingTableCreator as core..</text></g><g><title>nu_protocol::value::Value::follow_cell_path (2 samples, 0.33%)</title><rect x="97.0248%" y="485" width="0.3306%" height="15" fill="rgb(241,2,18)" fg:x="587" fg:w="2"/><text x="97.2748%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (2 samples, 0.33%)</title><rect x="97.0248%" y="469" width="0.3306%" height="15" fill="rgb(228,207,21)" fg:x="587" fg:w="2"/><text x="97.2748%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.33%)</title><rect x="97.0248%" y="453" width="0.3306%" height="15" fill="rgb(213,211,35)" fg:x="587" fg:w="2"/><text x="97.2748%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (2 samples, 0.33%)</title><rect x="97.0248%" y="437" width="0.3306%" height="15" fill="rgb(209,83,10)" fg:x="587" fg:w="2"/><text x="97.2748%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.33%)</title><rect x="97.0248%" y="421" width="0.3306%" height="15" fill="rgb(209,164,1)" fg:x="587" fg:w="2"/><text x="97.2748%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (2 samples, 0.33%)</title><rect x="97.0248%" y="405" width="0.3306%" height="15" fill="rgb(213,184,43)" fg:x="587" fg:w="2"/><text x="97.2748%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.33%)</title><rect x="97.0248%" y="389" width="0.3306%" height="15" fill="rgb(231,61,34)" fg:x="587" fg:w="2"/><text x="97.2748%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::value::Value&gt; (2 samples, 0.33%)</title><rect x="97.0248%" y="373" width="0.3306%" height="15" fill="rgb(235,75,3)" fg:x="587" fg:w="2"/><text x="97.2748%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (2 samples, 0.33%)</title><rect x="97.0248%" y="357" width="0.3306%" height="15" fill="rgb(220,106,47)" fg:x="587" fg:w="2"/><text x="97.2748%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.33%)</title><rect x="97.0248%" y="341" width="0.3306%" height="15" fill="rgb(210,196,33)" fg:x="587" fg:w="2"/><text x="97.2748%" y="351.50"></text></g><g><title>cfree (2 samples, 0.33%)</title><rect x="97.0248%" y="325" width="0.3306%" height="15" fill="rgb(229,154,42)" fg:x="587" fg:w="2"/><text x="97.2748%" y="335.50"></text></g><g><title>[libc.so.6] (2 samples, 0.33%)</title><rect x="97.0248%" y="309" width="0.3306%" height="15" fill="rgb(228,114,26)" fg:x="587" fg:w="2"/><text x="97.2748%" y="319.50"></text></g><g><title>papergrid::print_text_formated (2 samples, 0.33%)</title><rect x="97.3554%" y="549" width="0.3306%" height="15" fill="rgb(208,144,1)" fg:x="589" fg:w="2"/><text x="97.6054%" y="559.50"></text></g><g><title>[unknown] (512 samples, 84.63%)</title><rect x="13.2231%" y="565" width="84.6281%" height="15" fill="rgb(239,112,37)" fg:x="80" fg:w="512"/><text x="13.4731%" y="575.50">[unknown]</text></g><g><title>std::io::buffered::linewritershim::LineWriterShim&lt;W&gt;::flush_if_completed_line (1 samples, 0.17%)</title><rect x="97.6860%" y="549" width="0.1653%" height="15" fill="rgb(210,96,50)" fg:x="591" fg:w="1"/><text x="97.9360%" y="559.50"></text></g><g><title>__clone (6 samples, 0.99%)</title><rect x="97.8512%" y="565" width="0.9917%" height="15" fill="rgb(222,178,2)" fg:x="592" fg:w="6"/><text x="98.1012%" y="575.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="98.6777%" y="549" width="0.1653%" height="15" fill="rgb(226,74,18)" fg:x="597" fg:w="1"/><text x="98.9277%" y="559.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.17%)</title><rect x="98.8430%" y="485" width="0.1653%" height="15" fill="rgb(225,67,54)" fg:x="598" fg:w="1"/><text x="99.0930%" y="495.50"></text></g><g><title>__isoc99_sscanf (1 samples, 0.17%)</title><rect x="98.8430%" y="469" width="0.1653%" height="15" fill="rgb(251,92,32)" fg:x="598" fg:w="1"/><text x="99.0930%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.17%)</title><rect x="98.8430%" y="453" width="0.1653%" height="15" fill="rgb(228,149,22)" fg:x="598" fg:w="1"/><text x="99.0930%" y="463.50"></text></g><g><title>_start (2 samples, 0.33%)</title><rect x="98.8430%" y="565" width="0.3306%" height="15" fill="rgb(243,54,13)" fg:x="598" fg:w="2"/><text x="99.0930%" y="575.50"></text></g><g><title>__libc_start_main (2 samples, 0.33%)</title><rect x="98.8430%" y="549" width="0.3306%" height="15" fill="rgb(243,180,28)" fg:x="598" fg:w="2"/><text x="99.0930%" y="559.50"></text></g><g><title>[libc.so.6] (2 samples, 0.33%)</title><rect x="98.8430%" y="533" width="0.3306%" height="15" fill="rgb(208,167,24)" fg:x="598" fg:w="2"/><text x="99.0930%" y="543.50"></text></g><g><title>main (2 samples, 0.33%)</title><rect x="98.8430%" y="517" width="0.3306%" height="15" fill="rgb(245,73,45)" fg:x="598" fg:w="2"/><text x="99.0930%" y="527.50"></text></g><g><title>std::rt::lang_start_internal (2 samples, 0.33%)</title><rect x="98.8430%" y="501" width="0.3306%" height="15" fill="rgb(237,203,48)" fg:x="598" fg:w="2"/><text x="99.0930%" y="511.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.17%)</title><rect x="99.0083%" y="485" width="0.1653%" height="15" fill="rgb(211,197,16)" fg:x="599" fg:w="1"/><text x="99.2583%" y="495.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.17%)</title><rect x="99.0083%" y="469" width="0.1653%" height="15" fill="rgb(243,99,51)" fg:x="599" fg:w="1"/><text x="99.2583%" y="479.50"></text></g><g><title>nu::main (1 samples, 0.17%)</title><rect x="99.0083%" y="453" width="0.1653%" height="15" fill="rgb(215,123,29)" fg:x="599" fg:w="1"/><text x="99.2583%" y="463.50"></text></g><g><title>nu_command::default_context::create_default_context (1 samples, 0.17%)</title><rect x="99.0083%" y="437" width="0.1653%" height="15" fill="rgb(239,186,37)" fg:x="599" fg:w="1"/><text x="99.2583%" y="447.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::add_decl (1 samples, 0.17%)</title><rect x="99.0083%" y="421" width="0.1653%" height="15" fill="rgb(252,136,39)" fg:x="599" fg:w="1"/><text x="99.2583%" y="431.50"></text></g><g><title>&lt;nu_command::conversions::into::string::SubCommand as nu_protocol::engine::command::Command&gt;::name (1 samples, 0.17%)</title><rect x="99.0083%" y="405" width="0.1653%" height="15" fill="rgb(223,213,32)" fg:x="599" fg:w="1"/><text x="99.2583%" y="415.50"></text></g><g><title>all (605 samples, 100%)</title><rect x="0.0000%" y="597" width="100.0000%" height="15" fill="rgb(233,115,5)" fg:x="0" fg:w="605"/><text x="0.2500%" y="607.50"></text></g><g><title>nu (605 samples, 100.00%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(207,226,44)" fg:x="0" fg:w="605"/><text x="0.2500%" y="591.50">nu</text></g><g><title>ansi_parser::parsers::parse_escape (5 samples, 0.83%)</title><rect x="99.1736%" y="565" width="0.8264%" height="15" fill="rgb(208,126,0)" fg:x="600" fg:w="5"/><text x="99.4236%" y="575.50"></text></g></svg></svg>