<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1110" onload="init(evt)" viewBox="0 0 1200 1110" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1110" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1093.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1093.00"> </text><svg id="frames" x="10" width="1180" total_samples="2413"><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="0.0000%" y="1029" width="0.0414%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="0.0414%" y="1029" width="0.0414%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.2914%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.12%)</title><rect x="0.0829%" y="1029" width="0.1243%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="3"/><text x="0.3329%" y="1039.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.08%)</title><rect x="0.2072%" y="1029" width="0.0829%" height="15" fill="rgb(248,212,6)" fg:x="5" fg:w="2"/><text x="0.4572%" y="1039.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.08%)</title><rect x="0.2901%" y="1029" width="0.0829%" height="15" fill="rgb(208,68,35)" fg:x="7" fg:w="2"/><text x="0.5401%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="0.3730%" y="1029" width="0.0829%" height="15" fill="rgb(232,128,0)" fg:x="9" fg:w="2"/><text x="0.6230%" y="1039.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="0.4559%" y="1029" width="0.0414%" height="15" fill="rgb(207,160,47)" fg:x="11" fg:w="1"/><text x="0.7059%" y="1039.50"></text></g><g><title>&lt;typenum::uint::UInt&lt;U,B&gt; as typenum::marker_traits::Unsigned&gt;::to_usize (1 samples, 0.04%)</title><rect x="0.4973%" y="1029" width="0.0414%" height="15" fill="rgb(228,23,34)" fg:x="12" fg:w="1"/><text x="0.7473%" y="1039.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2 samples, 0.08%)</title><rect x="0.5387%" y="1029" width="0.0829%" height="15" fill="rgb(218,30,26)" fg:x="13" fg:w="2"/><text x="0.7887%" y="1039.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="0.6216%" y="1013" width="0.0414%" height="15" fill="rgb(220,122,19)" fg:x="15" fg:w="1"/><text x="0.8716%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="0.6631%" y="1013" width="0.0414%" height="15" fill="rgb(250,228,42)" fg:x="16" fg:w="1"/><text x="0.9131%" y="1023.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.04%)</title><rect x="0.6631%" y="997" width="0.0414%" height="15" fill="rgb(240,193,28)" fg:x="16" fg:w="1"/><text x="0.9131%" y="1007.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="0.6631%" y="981" width="0.0414%" height="15" fill="rgb(216,20,37)" fg:x="16" fg:w="1"/><text x="0.9131%" y="991.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="0.6631%" y="965" width="0.0414%" height="15" fill="rgb(206,188,39)" fg:x="16" fg:w="1"/><text x="0.9131%" y="975.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="0.7045%" y="1013" width="0.0414%" height="15" fill="rgb(217,207,13)" fg:x="17" fg:w="1"/><text x="0.9545%" y="1023.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (2 samples, 0.08%)</title><rect x="0.7460%" y="1013" width="0.0829%" height="15" fill="rgb(231,73,38)" fg:x="18" fg:w="2"/><text x="0.9960%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="0.8288%" y="1013" width="0.0414%" height="15" fill="rgb(225,20,46)" fg:x="20" fg:w="1"/><text x="1.0788%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.12%)</title><rect x="0.8703%" y="1013" width="0.1243%" height="15" fill="rgb(210,31,41)" fg:x="21" fg:w="3"/><text x="1.1203%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="0.9946%" y="1013" width="0.0829%" height="15" fill="rgb(221,200,47)" fg:x="24" fg:w="2"/><text x="1.2446%" y="1023.50"></text></g><g><title>&lt;ansi_str::AnsiState as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="1.0775%" y="1013" width="0.0414%" height="15" fill="rgb(226,26,5)" fg:x="26" fg:w="1"/><text x="1.3275%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.04%)</title><rect x="1.1189%" y="1013" width="0.0414%" height="15" fill="rgb(249,33,26)" fg:x="27" fg:w="1"/><text x="1.3689%" y="1023.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="1.1604%" y="1013" width="0.0414%" height="15" fill="rgb(235,183,28)" fg:x="28" fg:w="1"/><text x="1.4104%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.08%)</title><rect x="1.2018%" y="1013" width="0.0829%" height="15" fill="rgb(221,5,38)" fg:x="29" fg:w="2"/><text x="1.4518%" y="1023.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (1 samples, 0.04%)</title><rect x="1.2847%" y="1013" width="0.0414%" height="15" fill="rgb(247,18,42)" fg:x="31" fg:w="1"/><text x="1.5347%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 1.45%)</title><rect x="1.3262%" y="1013" width="1.4505%" height="15" fill="rgb(241,131,45)" fg:x="32" fg:w="35"/><text x="1.5762%" y="1023.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (16 samples, 0.66%)</title><rect x="2.1136%" y="997" width="0.6631%" height="15" fill="rgb(249,31,29)" fg:x="51" fg:w="16"/><text x="2.3636%" y="1007.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.29%)</title><rect x="2.7766%" y="1013" width="0.2901%" height="15" fill="rgb(225,111,53)" fg:x="67" fg:w="7"/><text x="3.0266%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (4 samples, 0.17%)</title><rect x="2.9010%" y="997" width="0.1658%" height="15" fill="rgb(238,160,17)" fg:x="70" fg:w="4"/><text x="3.1510%" y="1007.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="3.0667%" y="1013" width="0.0414%" height="15" fill="rgb(214,148,48)" fg:x="74" fg:w="1"/><text x="3.3167%" y="1023.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.12%)</title><rect x="3.1082%" y="1013" width="0.1243%" height="15" fill="rgb(232,36,49)" fg:x="75" fg:w="3"/><text x="3.3582%" y="1023.50"></text></g><g><title>__rdl_realloc (1 samples, 0.04%)</title><rect x="3.2325%" y="1013" width="0.0414%" height="15" fill="rgb(209,103,24)" fg:x="78" fg:w="1"/><text x="3.4825%" y="1023.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.04%)</title><rect x="3.2325%" y="997" width="0.0414%" height="15" fill="rgb(229,88,8)" fg:x="78" fg:w="1"/><text x="3.4825%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="3.2739%" y="1013" width="0.0829%" height="15" fill="rgb(213,181,19)" fg:x="79" fg:w="2"/><text x="3.5239%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (2 samples, 0.08%)</title><rect x="3.3568%" y="1013" width="0.0829%" height="15" fill="rgb(254,191,54)" fg:x="81" fg:w="2"/><text x="3.6068%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.08%)</title><rect x="3.3568%" y="997" width="0.0829%" height="15" fill="rgb(241,83,37)" fg:x="81" fg:w="2"/><text x="3.6068%" y="1007.50"></text></g><g><title>alloc::raw_vec::alloc_guard (2 samples, 0.08%)</title><rect x="3.4397%" y="1013" width="0.0829%" height="15" fill="rgb(233,36,39)" fg:x="83" fg:w="2"/><text x="3.6897%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="3.5226%" y="1013" width="0.0414%" height="15" fill="rgb(226,3,54)" fg:x="85" fg:w="1"/><text x="3.7726%" y="1023.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.04%)</title><rect x="3.5640%" y="1013" width="0.0414%" height="15" fill="rgb(245,192,40)" fg:x="86" fg:w="1"/><text x="3.8140%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (4 samples, 0.17%)</title><rect x="3.6055%" y="1013" width="0.1658%" height="15" fill="rgb(238,167,29)" fg:x="87" fg:w="4"/><text x="3.8555%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (4 samples, 0.17%)</title><rect x="3.7712%" y="1013" width="0.1658%" height="15" fill="rgb(232,182,51)" fg:x="91" fg:w="4"/><text x="4.0212%" y="1023.50"></text></g><g><title>ansi_str::update_ansi_state (1 samples, 0.04%)</title><rect x="3.9370%" y="1013" width="0.0414%" height="15" fill="rgb(231,60,39)" fg:x="95" fg:w="1"/><text x="4.1870%" y="1023.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="3.9785%" y="1013" width="0.0414%" height="15" fill="rgb(208,69,12)" fg:x="96" fg:w="1"/><text x="4.2285%" y="1023.50"></text></g><g><title>core::alloc::layout::Layout::align (1 samples, 0.04%)</title><rect x="4.0199%" y="1013" width="0.0414%" height="15" fill="rgb(235,93,37)" fg:x="97" fg:w="1"/><text x="4.2699%" y="1023.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="4.0613%" y="1013" width="0.0414%" height="15" fill="rgb(213,116,39)" fg:x="98" fg:w="1"/><text x="4.3113%" y="1023.50"></text></g><g><title>core::alloc::layout::Layout::size (1 samples, 0.04%)</title><rect x="4.1028%" y="1013" width="0.0414%" height="15" fill="rgb(222,207,29)" fg:x="99" fg:w="1"/><text x="4.3528%" y="1023.50"></text></g><g><title>core::cmp::min (1 samples, 0.04%)</title><rect x="4.1442%" y="1013" width="0.0414%" height="15" fill="rgb(206,96,30)" fg:x="100" fg:w="1"/><text x="4.3942%" y="1023.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.04%)</title><rect x="4.1857%" y="1013" width="0.0414%" height="15" fill="rgb(218,138,4)" fg:x="101" fg:w="1"/><text x="4.4357%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="4.2271%" y="1013" width="0.0414%" height="15" fill="rgb(250,191,14)" fg:x="102" fg:w="1"/><text x="4.4771%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.08%)</title><rect x="4.2685%" y="1013" width="0.0829%" height="15" fill="rgb(239,60,40)" fg:x="103" fg:w="2"/><text x="4.5185%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::peekable (1 samples, 0.04%)</title><rect x="4.3514%" y="1013" width="0.0414%" height="15" fill="rgb(206,27,48)" fg:x="105" fg:w="1"/><text x="4.6014%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (2 samples, 0.08%)</title><rect x="4.3929%" y="1013" width="0.0829%" height="15" fill="rgb(225,35,8)" fg:x="106" fg:w="2"/><text x="4.6429%" y="1023.50"></text></g><g><title>core::num::dec2flt::parse::parse_number (2 samples, 0.08%)</title><rect x="4.4758%" y="1013" width="0.0829%" height="15" fill="rgb(250,213,24)" fg:x="108" fg:w="2"/><text x="4.7258%" y="1023.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::get (1 samples, 0.04%)</title><rect x="4.5586%" y="1013" width="0.0414%" height="15" fill="rgb(247,123,22)" fg:x="110" fg:w="1"/><text x="4.8086%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="4.6001%" y="1013" width="0.0414%" height="15" fill="rgb(231,138,38)" fg:x="111" fg:w="1"/><text x="4.8501%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (12 samples, 0.50%)</title><rect x="4.6415%" y="1013" width="0.4973%" height="15" fill="rgb(231,145,46)" fg:x="112" fg:w="12"/><text x="4.8915%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (3 samples, 0.12%)</title><rect x="5.1388%" y="1013" width="0.1243%" height="15" fill="rgb(251,118,11)" fg:x="124" fg:w="3"/><text x="5.3888%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::len (1 samples, 0.04%)</title><rect x="5.2632%" y="1013" width="0.0414%" height="15" fill="rgb(217,147,25)" fg:x="127" fg:w="1"/><text x="5.5132%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.08%)</title><rect x="5.3046%" y="1013" width="0.0829%" height="15" fill="rgb(247,81,37)" fg:x="128" fg:w="2"/><text x="5.5546%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="5.3875%" y="1013" width="0.0414%" height="15" fill="rgb(209,12,38)" fg:x="130" fg:w="1"/><text x="5.6375%" y="1023.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="5.4289%" y="1013" width="0.0414%" height="15" fill="rgb(227,1,9)" fg:x="131" fg:w="1"/><text x="5.6789%" y="1023.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="5.4704%" y="1013" width="0.0414%" height="15" fill="rgb(248,47,43)" fg:x="132" fg:w="1"/><text x="5.7204%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.12%)</title><rect x="5.5118%" y="1013" width="0.1243%" height="15" fill="rgb(221,10,30)" fg:x="133" fg:w="3"/><text x="5.7618%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (23 samples, 0.95%)</title><rect x="5.6361%" y="1013" width="0.9532%" height="15" fill="rgb(210,229,1)" fg:x="136" fg:w="23"/><text x="5.8861%" y="1023.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (8 samples, 0.33%)</title><rect x="6.5893%" y="1013" width="0.3315%" height="15" fill="rgb(222,148,37)" fg:x="159" fg:w="8"/><text x="6.8393%" y="1023.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (3 samples, 0.12%)</title><rect x="6.9208%" y="1013" width="0.1243%" height="15" fill="rgb(234,67,33)" fg:x="167" fg:w="3"/><text x="7.1708%" y="1023.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (3 samples, 0.12%)</title><rect x="7.0452%" y="1013" width="0.1243%" height="15" fill="rgb(247,98,35)" fg:x="170" fg:w="3"/><text x="7.2952%" y="1023.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="7.1695%" y="1013" width="0.0414%" height="15" fill="rgb(247,138,52)" fg:x="173" fg:w="1"/><text x="7.4195%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.08%)</title><rect x="7.2109%" y="1013" width="0.0829%" height="15" fill="rgb(213,79,30)" fg:x="174" fg:w="2"/><text x="7.4609%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="7.2938%" y="1013" width="0.0414%" height="15" fill="rgb(246,177,23)" fg:x="176" fg:w="1"/><text x="7.5438%" y="1023.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (1 samples, 0.04%)</title><rect x="7.3353%" y="1013" width="0.0414%" height="15" fill="rgb(230,62,27)" fg:x="177" fg:w="1"/><text x="7.5853%" y="1023.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (1 samples, 0.04%)</title><rect x="7.3353%" y="997" width="0.0414%" height="15" fill="rgb(216,154,8)" fg:x="177" fg:w="1"/><text x="7.5853%" y="1007.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="7.3767%" y="1013" width="0.0414%" height="15" fill="rgb(244,35,45)" fg:x="178" fg:w="1"/><text x="7.6267%" y="1023.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="7.4182%" y="1013" width="0.0414%" height="15" fill="rgb(251,115,12)" fg:x="179" fg:w="1"/><text x="7.6682%" y="1023.50"></text></g><g><title>core::str::&lt;impl core::convert::AsRef&lt;[u8]&gt; for str&gt;::as_ref (1 samples, 0.04%)</title><rect x="7.4596%" y="1013" width="0.0414%" height="15" fill="rgb(240,54,50)" fg:x="180" fg:w="1"/><text x="7.7096%" y="1023.50"></text></g><g><title>core::str::&lt;impl str&gt;::char_indices (1 samples, 0.04%)</title><rect x="7.5010%" y="1013" width="0.0414%" height="15" fill="rgb(233,84,52)" fg:x="181" fg:w="1"/><text x="7.7510%" y="1023.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (2 samples, 0.08%)</title><rect x="7.5425%" y="1013" width="0.0829%" height="15" fill="rgb(207,117,47)" fg:x="182" fg:w="2"/><text x="7.7925%" y="1023.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.04%)</title><rect x="7.6254%" y="1013" width="0.0414%" height="15" fill="rgb(249,43,39)" fg:x="184" fg:w="1"/><text x="7.8754%" y="1023.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.04%)</title><rect x="7.6668%" y="1013" width="0.0414%" height="15" fill="rgb(209,38,44)" fg:x="185" fg:w="1"/><text x="7.9168%" y="1023.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (1 samples, 0.04%)</title><rect x="7.6668%" y="997" width="0.0414%" height="15" fill="rgb(236,212,23)" fg:x="185" fg:w="1"/><text x="7.9168%" y="1007.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="7.6668%" y="981" width="0.0414%" height="15" fill="rgb(242,79,21)" fg:x="185" fg:w="1"/><text x="7.9168%" y="991.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="7.6668%" y="965" width="0.0414%" height="15" fill="rgb(211,96,35)" fg:x="185" fg:w="1"/><text x="7.9168%" y="975.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (4 samples, 0.17%)</title><rect x="7.7082%" y="1013" width="0.1658%" height="15" fill="rgb(253,215,40)" fg:x="186" fg:w="4"/><text x="7.9582%" y="1023.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="7.8740%" y="1013" width="0.0829%" height="15" fill="rgb(211,81,21)" fg:x="190" fg:w="2"/><text x="8.1240%" y="1023.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.04%)</title><rect x="7.9569%" y="1013" width="0.0414%" height="15" fill="rgb(208,190,38)" fg:x="192" fg:w="1"/><text x="8.2069%" y="1023.50"></text></g><g><title>nu_parser::parser::parse_binary_with_base (1 samples, 0.04%)</title><rect x="7.9983%" y="1013" width="0.0414%" height="15" fill="rgb(235,213,38)" fg:x="193" fg:w="1"/><text x="8.2483%" y="1023.50"></text></g><g><title>nu_parser::parser::parse_datetime (1 samples, 0.04%)</title><rect x="8.0398%" y="1013" width="0.0414%" height="15" fill="rgb(237,122,38)" fg:x="194" fg:w="1"/><text x="8.2898%" y="1023.50"></text></g><g><title>nu_parser::parser::unescape_unquote_string (1 samples, 0.04%)</title><rect x="8.0812%" y="1013" width="0.0414%" height="15" fill="rgb(244,218,35)" fg:x="195" fg:w="1"/><text x="8.3312%" y="1023.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (2 samples, 0.08%)</title><rect x="8.1227%" y="1013" width="0.0829%" height="15" fill="rgb(240,68,47)" fg:x="196" fg:w="2"/><text x="8.3727%" y="1023.50"></text></g><g><title>[[heap]] (184 samples, 7.63%)</title><rect x="0.6216%" y="1029" width="7.6254%" height="15" fill="rgb(210,16,53)" fg:x="15" fg:w="184"/><text x="0.8716%" y="1039.50">[[heap]]</text></g><g><title>std::io::cursor::vec_write (1 samples, 0.04%)</title><rect x="8.2056%" y="1013" width="0.0414%" height="15" fill="rgb(235,124,12)" fg:x="198" fg:w="1"/><text x="8.4556%" y="1023.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="8.2470%" y="1013" width="0.0414%" height="15" fill="rgb(224,169,11)" fg:x="199" fg:w="1"/><text x="8.4970%" y="1023.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position (1 samples, 0.04%)</title><rect x="8.2884%" y="1013" width="0.0414%" height="15" fill="rgb(250,166,2)" fg:x="200" fg:w="1"/><text x="8.5384%" y="1023.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="8.3299%" y="1013" width="0.0414%" height="15" fill="rgb(242,216,29)" fg:x="201" fg:w="1"/><text x="8.5799%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.12%)</title><rect x="8.3713%" y="1013" width="0.1243%" height="15" fill="rgb(230,116,27)" fg:x="202" fg:w="3"/><text x="8.6213%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="8.4956%" y="1013" width="0.0829%" height="15" fill="rgb(228,99,48)" fg:x="205" fg:w="2"/><text x="8.7456%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.12%)</title><rect x="8.5785%" y="1013" width="0.1243%" height="15" fill="rgb(253,11,6)" fg:x="207" fg:w="3"/><text x="8.8285%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="8.7029%" y="1013" width="0.0829%" height="15" fill="rgb(247,143,39)" fg:x="210" fg:w="2"/><text x="8.9529%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="8.7857%" y="1013" width="0.0414%" height="15" fill="rgb(236,97,10)" fg:x="212" fg:w="1"/><text x="9.0357%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="8.8272%" y="1013" width="0.0414%" height="15" fill="rgb(233,208,19)" fg:x="213" fg:w="1"/><text x="9.0772%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.04%)</title><rect x="8.8686%" y="1013" width="0.0414%" height="15" fill="rgb(216,164,2)" fg:x="214" fg:w="1"/><text x="9.1186%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="8.9101%" y="1013" width="0.1243%" height="15" fill="rgb(220,129,5)" fg:x="215" fg:w="3"/><text x="9.1601%" y="1023.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="9.0344%" y="1013" width="0.0414%" height="15" fill="rgb(242,17,10)" fg:x="218" fg:w="1"/><text x="9.2844%" y="1023.50"></text></g><g><title>&lt;core::ops::range::RangeFull as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="9.0758%" y="1013" width="0.0414%" height="15" fill="rgb(242,107,0)" fg:x="219" fg:w="1"/><text x="9.3258%" y="1023.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.08%)</title><rect x="9.1173%" y="1013" width="0.0829%" height="15" fill="rgb(251,28,31)" fg:x="220" fg:w="2"/><text x="9.3673%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="9.2002%" y="1013" width="0.1658%" height="15" fill="rgb(233,223,10)" fg:x="222" fg:w="4"/><text x="9.4502%" y="1023.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="9.3245%" y="997" width="0.0414%" height="15" fill="rgb(215,21,27)" fg:x="225" fg:w="1"/><text x="9.5745%" y="1007.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.29%)</title><rect x="9.3659%" y="1013" width="0.2901%" height="15" fill="rgb(232,23,21)" fg:x="226" fg:w="7"/><text x="9.6159%" y="1023.50"></text></g><g><title>&lt;usize as core::ops::arith::Sub&lt;&amp;usize&gt;&gt;::sub (1 samples, 0.04%)</title><rect x="9.6560%" y="1013" width="0.0414%" height="15" fill="rgb(244,5,23)" fg:x="233" fg:w="1"/><text x="9.9060%" y="1023.50"></text></g><g><title>[libc.so.6] (3 samples, 0.12%)</title><rect x="9.6975%" y="1013" width="0.1243%" height="15" fill="rgb(226,81,46)" fg:x="234" fg:w="3"/><text x="9.9475%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="9.8218%" y="1013" width="0.0414%" height="15" fill="rgb(247,70,30)" fg:x="237" fg:w="1"/><text x="10.0718%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (1 samples, 0.04%)</title><rect x="9.8632%" y="1013" width="0.0414%" height="15" fill="rgb(212,68,19)" fg:x="238" fg:w="1"/><text x="10.1132%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.21%)</title><rect x="9.9047%" y="1013" width="0.2072%" height="15" fill="rgb(240,187,13)" fg:x="239" fg:w="5"/><text x="10.1547%" y="1023.50"></text></g><g><title>alloc::raw_vec::handle_reserve (1 samples, 0.04%)</title><rect x="10.1119%" y="1013" width="0.0414%" height="15" fill="rgb(223,113,26)" fg:x="244" fg:w="1"/><text x="10.3619%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="10.1533%" y="1013" width="0.0414%" height="15" fill="rgb(206,192,2)" fg:x="245" fg:w="1"/><text x="10.4033%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="10.1948%" y="1013" width="0.0414%" height="15" fill="rgb(241,108,4)" fg:x="246" fg:w="1"/><text x="10.4448%" y="1023.50"></text></g><g><title>alloc::string::String::from_utf8_unchecked (1 samples, 0.04%)</title><rect x="10.2362%" y="1013" width="0.0414%" height="15" fill="rgb(247,173,49)" fg:x="247" fg:w="1"/><text x="10.4862%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="10.2777%" y="1013" width="0.0414%" height="15" fill="rgb(224,114,35)" fg:x="248" fg:w="1"/><text x="10.5277%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="10.3191%" y="1013" width="0.0414%" height="15" fill="rgb(245,159,27)" fg:x="249" fg:w="1"/><text x="10.5691%" y="1023.50"></text></g><g><title>ansi_str::emit_ansi_color (1 samples, 0.04%)</title><rect x="10.3605%" y="1013" width="0.0414%" height="15" fill="rgb(245,172,44)" fg:x="250" fg:w="1"/><text x="10.6105%" y="1023.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.04%)</title><rect x="10.4020%" y="1013" width="0.0414%" height="15" fill="rgb(236,23,11)" fg:x="251" fg:w="1"/><text x="10.6520%" y="1023.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (1 samples, 0.04%)</title><rect x="10.4434%" y="1013" width="0.0414%" height="15" fill="rgb(205,117,38)" fg:x="252" fg:w="1"/><text x="10.6934%" y="1023.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for &amp;T&gt;::clone (2 samples, 0.08%)</title><rect x="10.4849%" y="1013" width="0.0829%" height="15" fill="rgb(237,72,25)" fg:x="253" fg:w="2"/><text x="10.7349%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::any (1 samples, 0.04%)</title><rect x="10.5678%" y="1013" width="0.0414%" height="15" fill="rgb(244,70,9)" fg:x="255" fg:w="1"/><text x="10.8178%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="10.6092%" y="1013" width="0.0414%" height="15" fill="rgb(217,125,39)" fg:x="256" fg:w="1"/><text x="10.8592%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by_key::key::{{closure}} (1 samples, 0.04%)</title><rect x="10.6506%" y="1013" width="0.0414%" height="15" fill="rgb(235,36,10)" fg:x="257" fg:w="1"/><text x="10.9006%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.12%)</title><rect x="10.6921%" y="1013" width="0.1243%" height="15" fill="rgb(251,123,47)" fg:x="258" fg:w="3"/><text x="10.9421%" y="1023.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.04%)</title><rect x="10.8164%" y="1013" width="0.0414%" height="15" fill="rgb(221,13,13)" fg:x="261" fg:w="1"/><text x="11.0664%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (2 samples, 0.08%)</title><rect x="10.8579%" y="1013" width="0.0829%" height="15" fill="rgb(238,131,9)" fg:x="262" fg:w="2"/><text x="11.1079%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="10.9407%" y="1013" width="0.0414%" height="15" fill="rgb(211,50,8)" fg:x="264" fg:w="1"/><text x="11.1907%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::syntax_shape::SyntaxShape: 10]&gt; (1 samples, 0.04%)</title><rect x="10.9822%" y="1013" width="0.0414%" height="15" fill="rgb(245,182,24)" fg:x="265" fg:w="1"/><text x="11.2322%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="11.0236%" y="1013" width="0.0414%" height="15" fill="rgb(242,14,37)" fg:x="266" fg:w="1"/><text x="11.2736%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="11.0651%" y="1013" width="0.0414%" height="15" fill="rgb(246,228,12)" fg:x="267" fg:w="1"/><text x="11.3151%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.08%)</title><rect x="11.1065%" y="1013" width="0.0829%" height="15" fill="rgb(213,55,15)" fg:x="268" fg:w="2"/><text x="11.3565%" y="1023.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (6 samples, 0.25%)</title><rect x="11.1894%" y="1013" width="0.2487%" height="15" fill="rgb(209,9,3)" fg:x="270" fg:w="6"/><text x="11.4394%" y="1023.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="11.4380%" y="1013" width="0.0414%" height="15" fill="rgb(230,59,30)" fg:x="276" fg:w="1"/><text x="11.6880%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (1 samples, 0.04%)</title><rect x="11.4795%" y="1013" width="0.0414%" height="15" fill="rgb(209,121,21)" fg:x="277" fg:w="1"/><text x="11.7295%" y="1023.50"></text></g><g><title>core::slice::memchr::memchr_general_case (1 samples, 0.04%)</title><rect x="11.5209%" y="1013" width="0.0414%" height="15" fill="rgb(220,109,13)" fg:x="278" fg:w="1"/><text x="11.7709%" y="1023.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.12%)</title><rect x="11.5624%" y="1013" width="0.1243%" height="15" fill="rgb(232,18,1)" fg:x="279" fg:w="3"/><text x="11.8124%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.08%)</title><rect x="11.6867%" y="1013" width="0.0829%" height="15" fill="rgb(215,41,42)" fg:x="282" fg:w="2"/><text x="11.9367%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="11.7696%" y="1013" width="0.0414%" height="15" fill="rgb(224,123,36)" fg:x="284" fg:w="1"/><text x="12.0196%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::is_empty (1 samples, 0.04%)</title><rect x="11.8110%" y="1013" width="0.0414%" height="15" fill="rgb(240,125,3)" fg:x="285" fg:w="1"/><text x="12.0610%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.04%)</title><rect x="11.8525%" y="1013" width="0.0414%" height="15" fill="rgb(205,98,50)" fg:x="286" fg:w="1"/><text x="12.1025%" y="1023.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="11.8939%" y="1013" width="0.0414%" height="15" fill="rgb(205,185,37)" fg:x="287" fg:w="1"/><text x="12.1439%" y="1023.50"></text></g><g><title>nu_parser::lex::lex_item (3 samples, 0.12%)</title><rect x="11.9354%" y="1013" width="0.1243%" height="15" fill="rgb(238,207,15)" fg:x="288" fg:w="3"/><text x="12.1854%" y="1023.50"></text></g><g><title>nu_parser::parser::parse_binary_with_base (2 samples, 0.08%)</title><rect x="12.0597%" y="1013" width="0.0829%" height="15" fill="rgb(213,199,42)" fg:x="291" fg:w="2"/><text x="12.3097%" y="1023.50"></text></g><g><title>papergrid::Theme::get_vertical (1 samples, 0.04%)</title><rect x="12.1426%" y="1013" width="0.0414%" height="15" fill="rgb(235,201,11)" fg:x="293" fg:w="1"/><text x="12.3926%" y="1023.50"></text></g><g><title>papergrid::lookup_entity_value::{{closure}} (3 samples, 0.12%)</title><rect x="12.1840%" y="1013" width="0.1243%" height="15" fill="rgb(207,46,11)" fg:x="294" fg:w="3"/><text x="12.4340%" y="1023.50"></text></g><g><title>papergrid::print_grid (1 samples, 0.04%)</title><rect x="12.3083%" y="1013" width="0.0414%" height="15" fill="rgb(241,35,35)" fg:x="297" fg:w="1"/><text x="12.5583%" y="1023.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.12%)</title><rect x="12.3498%" y="1013" width="0.1243%" height="15" fill="rgb(243,32,47)" fg:x="298" fg:w="3"/><text x="12.5998%" y="1023.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.04%)</title><rect x="12.4741%" y="1013" width="0.0414%" height="15" fill="rgb(247,202,23)" fg:x="301" fg:w="1"/><text x="12.7241%" y="1023.50"></text></g><g><title>[[stack]] (104 samples, 4.31%)</title><rect x="8.2470%" y="1029" width="4.3100%" height="15" fill="rgb(219,102,11)" fg:x="199" fg:w="104"/><text x="8.4970%" y="1039.50">[[sta..</text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (1 samples, 0.04%)</title><rect x="12.5155%" y="1013" width="0.0414%" height="15" fill="rgb(243,110,44)" fg:x="302" fg:w="1"/><text x="12.7655%" y="1023.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="12.5570%" y="1013" width="0.0414%" height="15" fill="rgb(222,74,54)" fg:x="303" fg:w="1"/><text x="12.8070%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (2 samples, 0.08%)</title><rect x="12.5984%" y="1013" width="0.0829%" height="15" fill="rgb(216,99,12)" fg:x="304" fg:w="2"/><text x="12.8484%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="12.6813%" y="1013" width="0.0414%" height="15" fill="rgb(226,22,26)" fg:x="306" fg:w="1"/><text x="12.9313%" y="1023.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="12.7228%" y="1013" width="0.0829%" height="15" fill="rgb(217,163,10)" fg:x="307" fg:w="2"/><text x="12.9728%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="12.8056%" y="1013" width="0.0414%" height="15" fill="rgb(213,25,53)" fg:x="309" fg:w="1"/><text x="13.0556%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="12.8471%" y="1013" width="0.0414%" height="15" fill="rgb(252,105,26)" fg:x="310" fg:w="1"/><text x="13.0971%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (8 samples, 0.33%)</title><rect x="12.8885%" y="1013" width="0.3315%" height="15" fill="rgb(220,39,43)" fg:x="311" fg:w="8"/><text x="13.1385%" y="1023.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="13.2201%" y="1013" width="0.0414%" height="15" fill="rgb(229,68,48)" fg:x="319" fg:w="1"/><text x="13.4701%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="13.2615%" y="1013" width="0.0414%" height="15" fill="rgb(252,8,32)" fg:x="320" fg:w="1"/><text x="13.5115%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="13.3029%" y="1013" width="0.0829%" height="15" fill="rgb(223,20,43)" fg:x="321" fg:w="2"/><text x="13.5529%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (1 samples, 0.04%)</title><rect x="13.3858%" y="1013" width="0.0414%" height="15" fill="rgb(229,81,49)" fg:x="323" fg:w="1"/><text x="13.6358%" y="1023.50"></text></g><g><title>[anon] (22 samples, 0.91%)</title><rect x="12.5570%" y="1029" width="0.9117%" height="15" fill="rgb(236,28,36)" fg:x="303" fg:w="22"/><text x="12.8070%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::len (1 samples, 0.04%)</title><rect x="13.4273%" y="1013" width="0.0414%" height="15" fill="rgb(249,185,26)" fg:x="324" fg:w="1"/><text x="13.6773%" y="1023.50"></text></g><g><title>[ld-linux-x86-64.so.2] (11 samples, 0.46%)</title><rect x="13.4687%" y="1029" width="0.4559%" height="15" fill="rgb(249,174,33)" fg:x="325" fg:w="11"/><text x="13.7187%" y="1039.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.25%)</title><rect x="13.6759%" y="1013" width="0.2487%" height="15" fill="rgb(233,201,37)" fg:x="330" fg:w="6"/><text x="13.9259%" y="1023.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.25%)</title><rect x="13.6759%" y="997" width="0.2487%" height="15" fill="rgb(221,78,26)" fg:x="330" fg:w="6"/><text x="13.9259%" y="1007.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.25%)</title><rect x="13.6759%" y="981" width="0.2487%" height="15" fill="rgb(250,127,30)" fg:x="330" fg:w="6"/><text x="13.9259%" y="991.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.25%)</title><rect x="13.6759%" y="965" width="0.2487%" height="15" fill="rgb(230,49,44)" fg:x="330" fg:w="6"/><text x="13.9259%" y="975.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.08%)</title><rect x="13.8417%" y="949" width="0.0829%" height="15" fill="rgb(229,67,23)" fg:x="334" fg:w="2"/><text x="14.0917%" y="959.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.08%)</title><rect x="13.8417%" y="933" width="0.0829%" height="15" fill="rgb(249,83,47)" fg:x="334" fg:w="2"/><text x="14.0917%" y="943.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.08%)</title><rect x="13.8417%" y="917" width="0.0829%" height="15" fill="rgb(215,43,3)" fg:x="334" fg:w="2"/><text x="14.0917%" y="927.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.08%)</title><rect x="13.8417%" y="901" width="0.0829%" height="15" fill="rgb(238,154,13)" fg:x="334" fg:w="2"/><text x="14.0917%" y="911.50"></text></g><g><title>[libc.so.6] (4 samples, 0.17%)</title><rect x="13.9246%" y="1029" width="0.1658%" height="15" fill="rgb(219,56,2)" fg:x="336" fg:w="4"/><text x="14.1746%" y="1039.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (1 samples, 0.04%)</title><rect x="14.0903%" y="1013" width="0.0414%" height="15" fill="rgb(233,0,4)" fg:x="340" fg:w="1"/><text x="14.3403%" y="1023.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="14.1318%" y="1013" width="0.0414%" height="15" fill="rgb(235,30,7)" fg:x="341" fg:w="1"/><text x="14.3818%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (1 samples, 0.04%)</title><rect x="14.1732%" y="1013" width="0.0414%" height="15" fill="rgb(250,79,13)" fg:x="342" fg:w="1"/><text x="14.4232%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.50%)</title><rect x="14.2147%" y="1013" width="0.4973%" height="15" fill="rgb(211,146,34)" fg:x="343" fg:w="12"/><text x="14.4647%" y="1023.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (7 samples, 0.29%)</title><rect x="14.4219%" y="997" width="0.2901%" height="15" fill="rgb(228,22,38)" fg:x="348" fg:w="7"/><text x="14.6719%" y="1007.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="14.7120%" y="1013" width="0.0829%" height="15" fill="rgb(235,168,5)" fg:x="355" fg:w="2"/><text x="14.9620%" y="1023.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.04%)</title><rect x="14.7949%" y="1013" width="0.0414%" height="15" fill="rgb(221,155,16)" fg:x="357" fg:w="1"/><text x="15.0449%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="14.8363%" y="1013" width="0.0414%" height="15" fill="rgb(215,215,53)" fg:x="358" fg:w="1"/><text x="15.0863%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="14.8777%" y="1013" width="0.0414%" height="15" fill="rgb(223,4,10)" fg:x="359" fg:w="1"/><text x="15.1277%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.12%)</title><rect x="14.9192%" y="1013" width="0.1243%" height="15" fill="rgb(234,103,6)" fg:x="360" fg:w="3"/><text x="15.1692%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.04%)</title><rect x="15.0435%" y="1013" width="0.0414%" height="15" fill="rgb(227,97,0)" fg:x="363" fg:w="1"/><text x="15.2935%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="15.0850%" y="1013" width="0.0414%" height="15" fill="rgb(234,150,53)" fg:x="364" fg:w="1"/><text x="15.3350%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (4 samples, 0.17%)</title><rect x="15.1264%" y="1013" width="0.1658%" height="15" fill="rgb(228,201,54)" fg:x="365" fg:w="4"/><text x="15.3764%" y="1023.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="15.2922%" y="1013" width="0.0414%" height="15" fill="rgb(222,22,37)" fg:x="369" fg:w="1"/><text x="15.5422%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.12%)</title><rect x="15.3336%" y="1013" width="0.1243%" height="15" fill="rgb(237,53,32)" fg:x="370" fg:w="3"/><text x="15.5836%" y="1023.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="15.4579%" y="1013" width="0.0414%" height="15" fill="rgb(233,25,53)" fg:x="373" fg:w="1"/><text x="15.7079%" y="1023.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="15.4994%" y="1013" width="0.0414%" height="15" fill="rgb(210,40,34)" fg:x="374" fg:w="1"/><text x="15.7494%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.04%)</title><rect x="15.5408%" y="1013" width="0.0414%" height="15" fill="rgb(241,220,44)" fg:x="375" fg:w="1"/><text x="15.7908%" y="1023.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="15.5823%" y="1013" width="0.0414%" height="15" fill="rgb(235,28,35)" fg:x="376" fg:w="1"/><text x="15.8323%" y="1023.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (1 samples, 0.04%)</title><rect x="15.6237%" y="1013" width="0.0414%" height="15" fill="rgb(210,56,17)" fg:x="377" fg:w="1"/><text x="15.8737%" y="1023.50"></text></g><g><title>nu_parser::parser::parse_binary_with_base (1 samples, 0.04%)</title><rect x="15.6651%" y="1013" width="0.0414%" height="15" fill="rgb(224,130,29)" fg:x="378" fg:w="1"/><text x="15.9151%" y="1023.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (1 samples, 0.04%)</title><rect x="15.7066%" y="1013" width="0.0414%" height="15" fill="rgb(235,212,8)" fg:x="379" fg:w="1"/><text x="15.9566%" y="1023.50"></text></g><g><title>[nu] (41 samples, 1.70%)</title><rect x="14.0903%" y="1029" width="1.6991%" height="15" fill="rgb(223,33,50)" fg:x="340" fg:w="41"/><text x="14.3403%" y="1039.50"></text></g><g><title>std::io::buffered::linewritershim::LineWriterShim&lt;W&gt;::new (1 samples, 0.04%)</title><rect x="15.7480%" y="1013" width="0.0414%" height="15" fill="rgb(219,149,13)" fg:x="380" fg:w="1"/><text x="15.9980%" y="1023.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare::{{closure}} (2 samples, 0.08%)</title><rect x="15.9552%" y="1013" width="0.0829%" height="15" fill="rgb(250,156,29)" fg:x="385" fg:w="2"/><text x="16.2052%" y="1023.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputLength&gt;::input_len (1 samples, 0.04%)</title><rect x="16.0381%" y="1013" width="0.0414%" height="15" fill="rgb(216,193,19)" fg:x="387" fg:w="1"/><text x="16.2881%" y="1023.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTake&gt;::take_split (1 samples, 0.04%)</title><rect x="16.0796%" y="1013" width="0.0414%" height="15" fill="rgb(216,135,14)" fg:x="388" fg:w="1"/><text x="16.3296%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="16.1210%" y="661" width="0.0829%" height="15" fill="rgb(241,47,5)" fg:x="389" fg:w="2"/><text x="16.3710%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="16.1210%" y="645" width="0.0829%" height="15" fill="rgb(233,42,35)" fg:x="389" fg:w="2"/><text x="16.3710%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.08%)</title><rect x="16.1210%" y="629" width="0.0829%" height="15" fill="rgb(231,13,6)" fg:x="389" fg:w="2"/><text x="16.3710%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.08%)</title><rect x="16.1210%" y="613" width="0.0829%" height="15" fill="rgb(207,181,40)" fg:x="389" fg:w="2"/><text x="16.3710%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="16.1210%" y="597" width="0.0829%" height="15" fill="rgb(254,173,49)" fg:x="389" fg:w="2"/><text x="16.3710%" y="607.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.08%)</title><rect x="16.1210%" y="581" width="0.0829%" height="15" fill="rgb(221,1,38)" fg:x="389" fg:w="2"/><text x="16.3710%" y="591.50"></text></g><g><title>malloc (2 samples, 0.08%)</title><rect x="16.1210%" y="565" width="0.0829%" height="15" fill="rgb(206,124,46)" fg:x="389" fg:w="2"/><text x="16.3710%" y="575.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="16.1625%" y="549" width="0.0414%" height="15" fill="rgb(249,21,11)" fg:x="390" fg:w="1"/><text x="16.4125%" y="559.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (3 samples, 0.12%)</title><rect x="16.1210%" y="757" width="0.1243%" height="15" fill="rgb(222,201,40)" fg:x="389" fg:w="3"/><text x="16.3710%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.12%)</title><rect x="16.1210%" y="741" width="0.1243%" height="15" fill="rgb(235,61,29)" fg:x="389" fg:w="3"/><text x="16.3710%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.12%)</title><rect x="16.1210%" y="725" width="0.1243%" height="15" fill="rgb(219,207,3)" fg:x="389" fg:w="3"/><text x="16.3710%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.12%)</title><rect x="16.1210%" y="709" width="0.1243%" height="15" fill="rgb(222,56,46)" fg:x="389" fg:w="3"/><text x="16.3710%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.12%)</title><rect x="16.1210%" y="693" width="0.1243%" height="15" fill="rgb(239,76,54)" fg:x="389" fg:w="3"/><text x="16.3710%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.12%)</title><rect x="16.1210%" y="677" width="0.1243%" height="15" fill="rgb(231,124,27)" fg:x="389" fg:w="3"/><text x="16.3710%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.04%)</title><rect x="16.2039%" y="661" width="0.0414%" height="15" fill="rgb(249,195,6)" fg:x="391" fg:w="1"/><text x="16.4539%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="16.2039%" y="645" width="0.0414%" height="15" fill="rgb(237,174,47)" fg:x="391" fg:w="1"/><text x="16.4539%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="16.2039%" y="629" width="0.0414%" height="15" fill="rgb(206,201,31)" fg:x="391" fg:w="1"/><text x="16.4539%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.17%)</title><rect x="16.1210%" y="1013" width="0.1658%" height="15" fill="rgb(231,57,52)" fg:x="389" fg:w="4"/><text x="16.3710%" y="1023.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (4 samples, 0.17%)</title><rect x="16.1210%" y="997" width="0.1658%" height="15" fill="rgb(248,177,22)" fg:x="389" fg:w="4"/><text x="16.3710%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.17%)</title><rect x="16.1210%" y="981" width="0.1658%" height="15" fill="rgb(215,211,37)" fg:x="389" fg:w="4"/><text x="16.3710%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.17%)</title><rect x="16.1210%" y="965" width="0.1658%" height="15" fill="rgb(241,128,51)" fg:x="389" fg:w="4"/><text x="16.3710%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.17%)</title><rect x="16.1210%" y="949" width="0.1658%" height="15" fill="rgb(227,165,31)" fg:x="389" fg:w="4"/><text x="16.3710%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.17%)</title><rect x="16.1210%" y="933" width="0.1658%" height="15" fill="rgb(228,167,24)" fg:x="389" fg:w="4"/><text x="16.3710%" y="943.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (4 samples, 0.17%)</title><rect x="16.1210%" y="917" width="0.1658%" height="15" fill="rgb(228,143,12)" fg:x="389" fg:w="4"/><text x="16.3710%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.17%)</title><rect x="16.1210%" y="901" width="0.1658%" height="15" fill="rgb(249,149,8)" fg:x="389" fg:w="4"/><text x="16.3710%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.17%)</title><rect x="16.1210%" y="885" width="0.1658%" height="15" fill="rgb(243,35,44)" fg:x="389" fg:w="4"/><text x="16.3710%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.17%)</title><rect x="16.1210%" y="869" width="0.1658%" height="15" fill="rgb(246,89,9)" fg:x="389" fg:w="4"/><text x="16.3710%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.17%)</title><rect x="16.1210%" y="853" width="0.1658%" height="15" fill="rgb(233,213,13)" fg:x="389" fg:w="4"/><text x="16.3710%" y="863.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (4 samples, 0.17%)</title><rect x="16.1210%" y="837" width="0.1658%" height="15" fill="rgb(233,141,41)" fg:x="389" fg:w="4"/><text x="16.3710%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.17%)</title><rect x="16.1210%" y="821" width="0.1658%" height="15" fill="rgb(239,167,4)" fg:x="389" fg:w="4"/><text x="16.3710%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.17%)</title><rect x="16.1210%" y="805" width="0.1658%" height="15" fill="rgb(209,217,16)" fg:x="389" fg:w="4"/><text x="16.3710%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.17%)</title><rect x="16.1210%" y="789" width="0.1658%" height="15" fill="rgb(219,88,35)" fg:x="389" fg:w="4"/><text x="16.3710%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.17%)</title><rect x="16.1210%" y="773" width="0.1658%" height="15" fill="rgb(220,193,23)" fg:x="389" fg:w="4"/><text x="16.3710%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="16.2453%" y="757" width="0.0414%" height="15" fill="rgb(230,90,52)" fg:x="392" fg:w="1"/><text x="16.4953%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="16.2453%" y="741" width="0.0414%" height="15" fill="rgb(252,106,19)" fg:x="392" fg:w="1"/><text x="16.4953%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="16.2453%" y="725" width="0.0414%" height="15" fill="rgb(206,74,20)" fg:x="392" fg:w="1"/><text x="16.4953%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="16.2453%" y="709" width="0.0414%" height="15" fill="rgb(230,138,44)" fg:x="392" fg:w="1"/><text x="16.4953%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="16.2453%" y="693" width="0.0414%" height="15" fill="rgb(235,182,43)" fg:x="392" fg:w="1"/><text x="16.4953%" y="703.50"></text></g><g><title>nu_command::viewers::table::convert_data (1 samples, 0.04%)</title><rect x="16.2868%" y="981" width="0.0414%" height="15" fill="rgb(242,16,51)" fg:x="393" fg:w="1"/><text x="16.5368%" y="991.50"></text></g><g><title>nu_protocol::value::Value::get_type (1 samples, 0.04%)</title><rect x="16.2868%" y="965" width="0.0414%" height="15" fill="rgb(248,9,4)" fg:x="393" fg:w="1"/><text x="16.5368%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.04%)</title><rect x="16.2868%" y="949" width="0.0414%" height="15" fill="rgb(210,31,22)" fg:x="393" fg:w="1"/><text x="16.5368%" y="959.50"></text></g><g><title>&lt;nu_protocol::ty::Type as core::cmp::PartialEq&gt;::ne (1 samples, 0.04%)</title><rect x="16.2868%" y="933" width="0.0414%" height="15" fill="rgb(239,54,39)" fg:x="393" fg:w="1"/><text x="16.5368%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="16.2868%" y="1013" width="0.1243%" height="15" fill="rgb(230,99,41)" fg:x="393" fg:w="3"/><text x="16.5368%" y="1023.50"></text></g><g><title>&lt;nu_command::viewers::table::PagingTableCreator as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="16.2868%" y="997" width="0.1243%" height="15" fill="rgb(253,106,12)" fg:x="393" fg:w="3"/><text x="16.5368%" y="1007.50"></text></g><g><title>nu_command::viewers::table::print_table (2 samples, 0.08%)</title><rect x="16.3282%" y="981" width="0.0829%" height="15" fill="rgb(213,46,41)" fg:x="394" fg:w="2"/><text x="16.5782%" y="991.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2 samples, 0.08%)</title><rect x="16.3282%" y="965" width="0.0829%" height="15" fill="rgb(215,133,35)" fg:x="394" fg:w="2"/><text x="16.5782%" y="975.50"></text></g><g><title>&lt;tabled::table::Table as core::fmt::Display&gt;::fmt (2 samples, 0.08%)</title><rect x="16.3282%" y="949" width="0.0829%" height="15" fill="rgb(213,28,5)" fg:x="394" fg:w="2"/><text x="16.5782%" y="959.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.08%)</title><rect x="16.3282%" y="933" width="0.0829%" height="15" fill="rgb(215,77,49)" fg:x="394" fg:w="2"/><text x="16.5782%" y="943.50"></text></g><g><title>core::fmt::write (2 samples, 0.08%)</title><rect x="16.3282%" y="917" width="0.0829%" height="15" fill="rgb(248,100,22)" fg:x="394" fg:w="2"/><text x="16.5782%" y="927.50"></text></g><g><title>&lt;papergrid::Grid as core::fmt::Display&gt;::fmt (2 samples, 0.08%)</title><rect x="16.3282%" y="901" width="0.0829%" height="15" fill="rgb(208,67,9)" fg:x="394" fg:w="2"/><text x="16.5782%" y="911.50"></text></g><g><title>papergrid::print_grid (2 samples, 0.08%)</title><rect x="16.3282%" y="885" width="0.0829%" height="15" fill="rgb(219,133,21)" fg:x="394" fg:w="2"/><text x="16.5782%" y="895.50"></text></g><g><title>papergrid::Grid::style (2 samples, 0.08%)</title><rect x="16.3282%" y="869" width="0.0829%" height="15" fill="rgb(246,46,29)" fg:x="394" fg:w="2"/><text x="16.5782%" y="879.50"></text></g><g><title>papergrid::lookup_entity_value (2 samples, 0.08%)</title><rect x="16.3282%" y="853" width="0.0829%" height="15" fill="rgb(246,185,52)" fg:x="394" fg:w="2"/><text x="16.5782%" y="863.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.08%)</title><rect x="16.3282%" y="837" width="0.0829%" height="15" fill="rgb(252,136,11)" fg:x="394" fg:w="2"/><text x="16.5782%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.08%)</title><rect x="16.3282%" y="821" width="0.0829%" height="15" fill="rgb(219,138,53)" fg:x="394" fg:w="2"/><text x="16.5782%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.08%)</title><rect x="16.3282%" y="805" width="0.0829%" height="15" fill="rgb(211,51,23)" fg:x="394" fg:w="2"/><text x="16.5782%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.08%)</title><rect x="16.3282%" y="789" width="0.0829%" height="15" fill="rgb(247,221,28)" fg:x="394" fg:w="2"/><text x="16.5782%" y="799.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.08%)</title><rect x="16.3282%" y="773" width="0.0829%" height="15" fill="rgb(251,222,45)" fg:x="394" fg:w="2"/><text x="16.5782%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.08%)</title><rect x="16.3282%" y="757" width="0.0829%" height="15" fill="rgb(217,162,53)" fg:x="394" fg:w="2"/><text x="16.5782%" y="767.50"></text></g><g><title>&lt;papergrid::Entity as core::hash::Hash&gt;::hash (2 samples, 0.08%)</title><rect x="16.3282%" y="741" width="0.0829%" height="15" fill="rgb(229,93,14)" fg:x="394" fg:w="2"/><text x="16.5782%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (2 samples, 0.08%)</title><rect x="16.3282%" y="725" width="0.0829%" height="15" fill="rgb(209,67,49)" fg:x="394" fg:w="2"/><text x="16.5782%" y="735.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.08%)</title><rect x="16.3282%" y="709" width="0.0829%" height="15" fill="rgb(213,87,29)" fg:x="394" fg:w="2"/><text x="16.5782%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.08%)</title><rect x="16.3282%" y="693" width="0.0829%" height="15" fill="rgb(205,151,52)" fg:x="394" fg:w="2"/><text x="16.5782%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.08%)</title><rect x="16.3282%" y="677" width="0.0829%" height="15" fill="rgb(253,215,39)" fg:x="394" fg:w="2"/><text x="16.5782%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.08%)</title><rect x="16.3282%" y="661" width="0.0829%" height="15" fill="rgb(221,220,41)" fg:x="394" fg:w="2"/><text x="16.5782%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (1 samples, 0.04%)</title><rect x="16.3697%" y="645" width="0.0414%" height="15" fill="rgb(218,133,21)" fg:x="395" fg:w="1"/><text x="16.6197%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="16.4111%" y="1013" width="0.0414%" height="15" fill="rgb(221,193,43)" fg:x="396" fg:w="1"/><text x="16.6611%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="16.4111%" y="997" width="0.0414%" height="15" fill="rgb(240,128,52)" fg:x="396" fg:w="1"/><text x="16.6611%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="16.4525%" y="1013" width="0.0414%" height="15" fill="rgb(253,114,12)" fg:x="397" fg:w="1"/><text x="16.7025%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.04%)</title><rect x="16.4940%" y="1013" width="0.0414%" height="15" fill="rgb(215,223,47)" fg:x="398" fg:w="1"/><text x="16.7440%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (2 samples, 0.08%)</title><rect x="16.5354%" y="1013" width="0.0829%" height="15" fill="rgb(248,225,23)" fg:x="399" fg:w="2"/><text x="16.7854%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="16.6183%" y="1013" width="0.0414%" height="15" fill="rgb(250,108,0)" fg:x="401" fg:w="1"/><text x="16.8683%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="16.6598%" y="1013" width="0.0414%" height="15" fill="rgb(228,208,7)" fg:x="402" fg:w="1"/><text x="16.9098%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="16.7012%" y="1013" width="0.0414%" height="15" fill="rgb(244,45,10)" fg:x="403" fg:w="1"/><text x="16.9512%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.08%)</title><rect x="16.7426%" y="1013" width="0.0829%" height="15" fill="rgb(207,125,25)" fg:x="404" fg:w="2"/><text x="16.9926%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="16.8255%" y="1013" width="0.0414%" height="15" fill="rgb(210,195,18)" fg:x="406" fg:w="1"/><text x="17.0755%" y="1023.50"></text></g><g><title>&lt;char as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="16.8670%" y="1013" width="0.0414%" height="15" fill="rgb(249,80,12)" fg:x="407" fg:w="1"/><text x="17.1170%" y="1023.50"></text></g><g><title>&lt;char as nom::traits::AsChar&gt;::is_dec_digit (15 samples, 0.62%)</title><rect x="16.9084%" y="1013" width="0.6216%" height="15" fill="rgb(221,65,9)" fg:x="408" fg:w="15"/><text x="17.1584%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.04%)</title><rect x="17.5300%" y="1013" width="0.0414%" height="15" fill="rgb(235,49,36)" fg:x="423" fg:w="1"/><text x="17.7800%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.08%)</title><rect x="17.5715%" y="1013" width="0.0829%" height="15" fill="rgb(225,32,20)" fg:x="424" fg:w="2"/><text x="17.8215%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.12%)</title><rect x="17.6544%" y="1013" width="0.1243%" height="15" fill="rgb(215,141,46)" fg:x="426" fg:w="3"/><text x="17.9044%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="17.7787%" y="1013" width="0.0414%" height="15" fill="rgb(250,160,47)" fg:x="429" fg:w="1"/><text x="18.0287%" y="1023.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.08%)</title><rect x="17.8201%" y="1013" width="0.0829%" height="15" fill="rgb(216,222,40)" fg:x="430" fg:w="2"/><text x="18.0701%" y="1023.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.04%)</title><rect x="17.9030%" y="1013" width="0.0414%" height="15" fill="rgb(234,217,39)" fg:x="432" fg:w="1"/><text x="18.1530%" y="1023.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.08%)</title><rect x="17.9445%" y="1013" width="0.0829%" height="15" fill="rgb(207,178,40)" fg:x="433" fg:w="2"/><text x="18.1945%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (1 samples, 0.04%)</title><rect x="18.0274%" y="1013" width="0.0414%" height="15" fill="rgb(221,136,13)" fg:x="435" fg:w="1"/><text x="18.2774%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.08%)</title><rect x="18.0688%" y="1013" width="0.0829%" height="15" fill="rgb(249,199,10)" fg:x="436" fg:w="2"/><text x="18.3188%" y="1023.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="18.1517%" y="1013" width="0.0414%" height="15" fill="rgb(249,222,13)" fg:x="438" fg:w="1"/><text x="18.4017%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.79%)</title><rect x="18.1931%" y="1013" width="0.7874%" height="15" fill="rgb(244,185,38)" fg:x="439" fg:w="19"/><text x="18.4431%" y="1023.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (8 samples, 0.33%)</title><rect x="18.6490%" y="997" width="0.3315%" height="15" fill="rgb(236,202,9)" fg:x="450" fg:w="8"/><text x="18.8990%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.04%)</title><rect x="18.9805%" y="1013" width="0.0414%" height="15" fill="rgb(250,229,37)" fg:x="458" fg:w="1"/><text x="19.2305%" y="1023.50"></text></g><g><title>&lt;core::str::LinesAnyMap as core::ops::function::Fn&lt;(&amp;str,)&gt;&gt;::call (1 samples, 0.04%)</title><rect x="19.0220%" y="1013" width="0.0414%" height="15" fill="rgb(206,174,23)" fg:x="459" fg:w="1"/><text x="19.2720%" y="1023.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="19.0634%" y="1013" width="0.0829%" height="15" fill="rgb(211,33,43)" fg:x="460" fg:w="2"/><text x="19.3134%" y="1023.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (9 samples, 0.37%)</title><rect x="19.1463%" y="1013" width="0.3730%" height="15" fill="rgb(245,58,50)" fg:x="462" fg:w="9"/><text x="19.3963%" y="1023.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (1 samples, 0.04%)</title><rect x="19.5193%" y="949" width="0.0414%" height="15" fill="rgb(244,68,36)" fg:x="471" fg:w="1"/><text x="19.7693%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (1 samples, 0.04%)</title><rect x="19.5193%" y="933" width="0.0414%" height="15" fill="rgb(232,229,15)" fg:x="471" fg:w="1"/><text x="19.7693%" y="943.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.04%)</title><rect x="19.5193%" y="917" width="0.0414%" height="15" fill="rgb(254,30,23)" fg:x="471" fg:w="1"/><text x="19.7693%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="19.5193%" y="901" width="0.0414%" height="15" fill="rgb(235,160,14)" fg:x="471" fg:w="1"/><text x="19.7693%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="19.5193%" y="885" width="0.0414%" height="15" fill="rgb(212,155,44)" fg:x="471" fg:w="1"/><text x="19.7693%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.04%)</title><rect x="19.5193%" y="869" width="0.0414%" height="15" fill="rgb(226,2,50)" fg:x="471" fg:w="1"/><text x="19.7693%" y="879.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (1 samples, 0.04%)</title><rect x="19.5193%" y="853" width="0.0414%" height="15" fill="rgb(234,177,6)" fg:x="471" fg:w="1"/><text x="19.7693%" y="863.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.04%)</title><rect x="19.5607%" y="949" width="0.0414%" height="15" fill="rgb(217,24,9)" fg:x="472" fg:w="1"/><text x="19.8107%" y="959.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="19.5607%" y="933" width="0.0414%" height="15" fill="rgb(220,13,46)" fg:x="472" fg:w="1"/><text x="19.8107%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="19.5607%" y="917" width="0.0414%" height="15" fill="rgb(239,221,27)" fg:x="472" fg:w="1"/><text x="19.8107%" y="927.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="19.5607%" y="901" width="0.0414%" height="15" fill="rgb(222,198,25)" fg:x="472" fg:w="1"/><text x="19.8107%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="19.5607%" y="885" width="0.0414%" height="15" fill="rgb(211,99,13)" fg:x="472" fg:w="1"/><text x="19.8107%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="19.5607%" y="869" width="0.0414%" height="15" fill="rgb(232,111,31)" fg:x="472" fg:w="1"/><text x="19.8107%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="19.5607%" y="853" width="0.0414%" height="15" fill="rgb(245,82,37)" fg:x="472" fg:w="1"/><text x="19.8107%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="19.5607%" y="837" width="0.0414%" height="15" fill="rgb(227,149,46)" fg:x="472" fg:w="1"/><text x="19.8107%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="19.5607%" y="821" width="0.0414%" height="15" fill="rgb(218,36,50)" fg:x="472" fg:w="1"/><text x="19.8107%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="19.5607%" y="805" width="0.0414%" height="15" fill="rgb(226,80,48)" fg:x="472" fg:w="1"/><text x="19.8107%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="19.5607%" y="789" width="0.0414%" height="15" fill="rgb(238,224,15)" fg:x="472" fg:w="1"/><text x="19.8107%" y="799.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (3 samples, 0.12%)</title><rect x="19.5193%" y="981" width="0.1243%" height="15" fill="rgb(241,136,10)" fg:x="471" fg:w="3"/><text x="19.7693%" y="991.50"></text></g><g><title>&lt;nu_protocol::ty::Type as core::fmt::Display&gt;::fmt (3 samples, 0.12%)</title><rect x="19.5193%" y="965" width="0.1243%" height="15" fill="rgb(208,32,45)" fg:x="471" fg:w="3"/><text x="19.7693%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="19.6022%" y="949" width="0.0414%" height="15" fill="rgb(207,135,9)" fg:x="473" fg:w="1"/><text x="19.8522%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="19.6022%" y="933" width="0.0414%" height="15" fill="rgb(206,86,44)" fg:x="473" fg:w="1"/><text x="19.8522%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="19.6022%" y="917" width="0.0414%" height="15" fill="rgb(245,177,15)" fg:x="473" fg:w="1"/><text x="19.8522%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="19.6022%" y="901" width="0.0414%" height="15" fill="rgb(206,64,50)" fg:x="473" fg:w="1"/><text x="19.8522%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="19.6022%" y="885" width="0.0414%" height="15" fill="rgb(234,36,40)" fg:x="473" fg:w="1"/><text x="19.8522%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.04%)</title><rect x="19.6022%" y="869" width="0.0414%" height="15" fill="rgb(213,64,8)" fg:x="473" fg:w="1"/><text x="19.8522%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="19.6022%" y="853" width="0.0414%" height="15" fill="rgb(210,75,36)" fg:x="473" fg:w="1"/><text x="19.8522%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="19.6022%" y="837" width="0.0414%" height="15" fill="rgb(229,88,21)" fg:x="473" fg:w="1"/><text x="19.8522%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="19.6022%" y="821" width="0.0414%" height="15" fill="rgb(252,204,47)" fg:x="473" fg:w="1"/><text x="19.8522%" y="831.50"></text></g><g><title>&lt;nu_protocol::ty::Type as core::fmt::Display&gt;::fmt::{{closure}} (1 samples, 0.04%)</title><rect x="19.6022%" y="805" width="0.0414%" height="15" fill="rgb(208,77,27)" fg:x="473" fg:w="1"/><text x="19.8522%" y="815.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.04%)</title><rect x="19.6022%" y="789" width="0.0414%" height="15" fill="rgb(221,76,26)" fg:x="473" fg:w="1"/><text x="19.8522%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.04%)</title><rect x="19.6022%" y="773" width="0.0414%" height="15" fill="rgb(225,139,18)" fg:x="473" fg:w="1"/><text x="19.8522%" y="783.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="19.6022%" y="757" width="0.0414%" height="15" fill="rgb(230,137,11)" fg:x="473" fg:w="1"/><text x="19.8522%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="19.6022%" y="741" width="0.0414%" height="15" fill="rgb(212,28,1)" fg:x="473" fg:w="1"/><text x="19.8522%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="19.6022%" y="725" width="0.0414%" height="15" fill="rgb(248,164,17)" fg:x="473" fg:w="1"/><text x="19.8522%" y="735.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="19.6022%" y="709" width="0.0414%" height="15" fill="rgb(222,171,42)" fg:x="473" fg:w="1"/><text x="19.8522%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="19.6022%" y="693" width="0.0414%" height="15" fill="rgb(243,84,45)" fg:x="473" fg:w="1"/><text x="19.8522%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="19.6022%" y="677" width="0.0414%" height="15" fill="rgb(252,49,23)" fg:x="473" fg:w="1"/><text x="19.8522%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="19.6022%" y="661" width="0.0414%" height="15" fill="rgb(215,19,7)" fg:x="473" fg:w="1"/><text x="19.8522%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="19.6022%" y="645" width="0.0414%" height="15" fill="rgb(238,81,41)" fg:x="473" fg:w="1"/><text x="19.8522%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="19.6022%" y="629" width="0.0414%" height="15" fill="rgb(210,199,37)" fg:x="473" fg:w="1"/><text x="19.8522%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="19.6436%" y="901" width="0.0414%" height="15" fill="rgb(244,192,49)" fg:x="474" fg:w="1"/><text x="19.8936%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="19.6436%" y="885" width="0.0414%" height="15" fill="rgb(226,211,11)" fg:x="474" fg:w="1"/><text x="19.8936%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="19.6436%" y="869" width="0.0414%" height="15" fill="rgb(236,162,54)" fg:x="474" fg:w="1"/><text x="19.8936%" y="879.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="19.6436%" y="853" width="0.0414%" height="15" fill="rgb(220,229,9)" fg:x="474" fg:w="1"/><text x="19.8936%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="19.7265%" y="821" width="0.0414%" height="15" fill="rgb(250,87,22)" fg:x="476" fg:w="1"/><text x="19.9765%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="19.7265%" y="805" width="0.0414%" height="15" fill="rgb(239,43,17)" fg:x="476" fg:w="1"/><text x="19.9765%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="19.7265%" y="789" width="0.0414%" height="15" fill="rgb(231,177,25)" fg:x="476" fg:w="1"/><text x="19.9765%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="19.7265%" y="773" width="0.0414%" height="15" fill="rgb(219,179,1)" fg:x="476" fg:w="1"/><text x="19.9765%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="19.7265%" y="757" width="0.0414%" height="15" fill="rgb(238,219,53)" fg:x="476" fg:w="1"/><text x="19.9765%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="19.7265%" y="741" width="0.0414%" height="15" fill="rgb(232,167,36)" fg:x="476" fg:w="1"/><text x="19.9765%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="19.7265%" y="725" width="0.0414%" height="15" fill="rgb(244,19,51)" fg:x="476" fg:w="1"/><text x="19.9765%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="19.7265%" y="709" width="0.0414%" height="15" fill="rgb(224,6,22)" fg:x="476" fg:w="1"/><text x="19.9765%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="19.7265%" y="693" width="0.0414%" height="15" fill="rgb(224,145,5)" fg:x="476" fg:w="1"/><text x="19.9765%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="19.7265%" y="677" width="0.0414%" height="15" fill="rgb(234,130,49)" fg:x="476" fg:w="1"/><text x="19.9765%" y="687.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="19.7265%" y="661" width="0.0414%" height="15" fill="rgb(254,6,2)" fg:x="476" fg:w="1"/><text x="19.9765%" y="671.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="19.7265%" y="645" width="0.0414%" height="15" fill="rgb(208,96,46)" fg:x="476" fg:w="1"/><text x="19.9765%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="19.7679%" y="821" width="0.0414%" height="15" fill="rgb(239,3,39)" fg:x="477" fg:w="1"/><text x="20.0179%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="19.7679%" y="805" width="0.0414%" height="15" fill="rgb(233,210,1)" fg:x="477" fg:w="1"/><text x="20.0179%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="19.7679%" y="789" width="0.0414%" height="15" fill="rgb(244,137,37)" fg:x="477" fg:w="1"/><text x="20.0179%" y="799.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="19.7679%" y="773" width="0.0414%" height="15" fill="rgb(240,136,2)" fg:x="477" fg:w="1"/><text x="20.0179%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::take (1 samples, 0.04%)</title><rect x="19.8094%" y="821" width="0.0414%" height="15" fill="rgb(239,18,37)" fg:x="478" fg:w="1"/><text x="20.0594%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="19.8508%" y="805" width="0.0414%" height="15" fill="rgb(218,185,22)" fg:x="479" fg:w="1"/><text x="20.1008%" y="815.50"></text></g><g><title>_init (1 samples, 0.04%)</title><rect x="19.8923%" y="805" width="0.0414%" height="15" fill="rgb(225,218,4)" fg:x="480" fg:w="1"/><text x="20.1423%" y="815.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (7 samples, 0.29%)</title><rect x="19.6850%" y="901" width="0.2901%" height="15" fill="rgb(230,182,32)" fg:x="475" fg:w="7"/><text x="19.9350%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.29%)</title><rect x="19.6850%" y="885" width="0.2901%" height="15" fill="rgb(242,56,43)" fg:x="475" fg:w="7"/><text x="19.9350%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.25%)</title><rect x="19.7265%" y="869" width="0.2487%" height="15" fill="rgb(233,99,24)" fg:x="476" fg:w="6"/><text x="19.9765%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.25%)</title><rect x="19.7265%" y="853" width="0.2487%" height="15" fill="rgb(234,209,42)" fg:x="476" fg:w="6"/><text x="19.9765%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.25%)</title><rect x="19.7265%" y="837" width="0.2487%" height="15" fill="rgb(227,7,12)" fg:x="476" fg:w="6"/><text x="19.9765%" y="847.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (3 samples, 0.12%)</title><rect x="19.8508%" y="821" width="0.1243%" height="15" fill="rgb(245,203,43)" fg:x="479" fg:w="3"/><text x="20.1008%" y="831.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="19.9337%" y="805" width="0.0414%" height="15" fill="rgb(238,205,33)" fg:x="481" fg:w="1"/><text x="20.1837%" y="815.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="19.9337%" y="789" width="0.0414%" height="15" fill="rgb(231,56,7)" fg:x="481" fg:w="1"/><text x="20.1837%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="19.9337%" y="773" width="0.0414%" height="15" fill="rgb(244,186,29)" fg:x="481" fg:w="1"/><text x="20.1837%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.33%)</title><rect x="19.9751%" y="901" width="0.3315%" height="15" fill="rgb(234,111,31)" fg:x="482" fg:w="8"/><text x="20.2251%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.29%)</title><rect x="20.0166%" y="885" width="0.2901%" height="15" fill="rgb(241,149,10)" fg:x="483" fg:w="7"/><text x="20.2666%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.29%)</title><rect x="20.0166%" y="869" width="0.2901%" height="15" fill="rgb(249,206,44)" fg:x="483" fg:w="7"/><text x="20.2666%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.29%)</title><rect x="20.0166%" y="853" width="0.2901%" height="15" fill="rgb(251,153,30)" fg:x="483" fg:w="7"/><text x="20.2666%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.29%)</title><rect x="20.0166%" y="837" width="0.2901%" height="15" fill="rgb(239,152,38)" fg:x="483" fg:w="7"/><text x="20.2666%" y="847.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.29%)</title><rect x="20.0166%" y="821" width="0.2901%" height="15" fill="rgb(249,139,47)" fg:x="483" fg:w="7"/><text x="20.2666%" y="831.50"></text></g><g><title>malloc (7 samples, 0.29%)</title><rect x="20.0166%" y="805" width="0.2901%" height="15" fill="rgb(244,64,35)" fg:x="483" fg:w="7"/><text x="20.2666%" y="815.50"></text></g><g><title>[libc.so.6] (7 samples, 0.29%)</title><rect x="20.0166%" y="789" width="0.2901%" height="15" fill="rgb(216,46,15)" fg:x="483" fg:w="7"/><text x="20.2666%" y="799.50"></text></g><g><title>[libc.so.6] (6 samples, 0.25%)</title><rect x="20.0580%" y="773" width="0.2487%" height="15" fill="rgb(250,74,19)" fg:x="484" fg:w="6"/><text x="20.3080%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="20.2652%" y="757" width="0.0414%" height="15" fill="rgb(249,42,33)" fg:x="489" fg:w="1"/><text x="20.5152%" y="767.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (17 samples, 0.70%)</title><rect x="19.6436%" y="981" width="0.7045%" height="15" fill="rgb(242,149,17)" fg:x="474" fg:w="17"/><text x="19.8936%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.70%)</title><rect x="19.6436%" y="965" width="0.7045%" height="15" fill="rgb(244,29,21)" fg:x="474" fg:w="17"/><text x="19.8936%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.70%)</title><rect x="19.6436%" y="949" width="0.7045%" height="15" fill="rgb(220,130,37)" fg:x="474" fg:w="17"/><text x="19.8936%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.70%)</title><rect x="19.6436%" y="933" width="0.7045%" height="15" fill="rgb(211,67,2)" fg:x="474" fg:w="17"/><text x="19.8936%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.70%)</title><rect x="19.6436%" y="917" width="0.7045%" height="15" fill="rgb(235,68,52)" fg:x="474" fg:w="17"/><text x="19.8936%" y="927.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.04%)</title><rect x="20.3067%" y="901" width="0.0414%" height="15" fill="rgb(246,142,3)" fg:x="490" fg:w="1"/><text x="20.5567%" y="911.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="20.3067%" y="885" width="0.0414%" height="15" fill="rgb(241,25,7)" fg:x="490" fg:w="1"/><text x="20.5567%" y="895.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="20.3067%" y="869" width="0.0414%" height="15" fill="rgb(242,119,39)" fg:x="490" fg:w="1"/><text x="20.5567%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="20.3067%" y="853" width="0.0414%" height="15" fill="rgb(241,98,45)" fg:x="490" fg:w="1"/><text x="20.5567%" y="863.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Prefix as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="20.3481%" y="853" width="0.0414%" height="15" fill="rgb(254,28,30)" fg:x="491" fg:w="1"/><text x="20.5981%" y="863.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (1 samples, 0.04%)</title><rect x="20.3481%" y="837" width="0.0414%" height="15" fill="rgb(241,142,54)" fg:x="491" fg:w="1"/><text x="20.5981%" y="847.50"></text></g><g><title>nu_ansi_term::style::Style::is_plain (1 samples, 0.04%)</title><rect x="20.3481%" y="821" width="0.0414%" height="15" fill="rgb(222,85,15)" fg:x="491" fg:w="1"/><text x="20.5981%" y="831.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2 samples, 0.08%)</title><rect x="20.3481%" y="949" width="0.0829%" height="15" fill="rgb(210,85,47)" fg:x="491" fg:w="2"/><text x="20.5981%" y="959.50"></text></g><g><title>&lt;nu_ansi_term::display::AnsiGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (2 samples, 0.08%)</title><rect x="20.3481%" y="933" width="0.0829%" height="15" fill="rgb(224,206,25)" fg:x="491" fg:w="2"/><text x="20.5981%" y="943.50"></text></g><g><title>nu_ansi_term::display::AnsiGenericString&lt;S&gt;::write_to_any (2 samples, 0.08%)</title><rect x="20.3481%" y="917" width="0.0829%" height="15" fill="rgb(243,201,19)" fg:x="491" fg:w="2"/><text x="20.5981%" y="927.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_fmt (2 samples, 0.08%)</title><rect x="20.3481%" y="901" width="0.0829%" height="15" fill="rgb(236,59,4)" fg:x="491" fg:w="2"/><text x="20.5981%" y="911.50"></text></g><g><title>core::fmt::Formatter::write_fmt (2 samples, 0.08%)</title><rect x="20.3481%" y="885" width="0.0829%" height="15" fill="rgb(254,179,45)" fg:x="491" fg:w="2"/><text x="20.5981%" y="895.50"></text></g><g><title>core::fmt::write (2 samples, 0.08%)</title><rect x="20.3481%" y="869" width="0.0829%" height="15" fill="rgb(226,14,10)" fg:x="491" fg:w="2"/><text x="20.5981%" y="879.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="20.3896%" y="853" width="0.0414%" height="15" fill="rgb(244,27,41)" fg:x="492" fg:w="1"/><text x="20.6396%" y="863.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_suffix (1 samples, 0.04%)</title><rect x="20.3896%" y="837" width="0.0414%" height="15" fill="rgb(235,35,32)" fg:x="492" fg:w="1"/><text x="20.6396%" y="847.50"></text></g><g><title>&lt;dyn core::fmt::Write as nu_ansi_term::write::AnyWrite&gt;::write_fmt (1 samples, 0.04%)</title><rect x="20.3896%" y="821" width="0.0414%" height="15" fill="rgb(218,68,31)" fg:x="492" fg:w="1"/><text x="20.6396%" y="831.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.04%)</title><rect x="20.3896%" y="805" width="0.0414%" height="15" fill="rgb(207,120,37)" fg:x="492" fg:w="1"/><text x="20.6396%" y="815.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="20.3896%" y="789" width="0.0414%" height="15" fill="rgb(227,98,0)" fg:x="492" fg:w="1"/><text x="20.6396%" y="799.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="20.3896%" y="773" width="0.0414%" height="15" fill="rgb(207,7,3)" fg:x="492" fg:w="1"/><text x="20.6396%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="20.3896%" y="757" width="0.0414%" height="15" fill="rgb(206,98,19)" fg:x="492" fg:w="1"/><text x="20.6396%" y="767.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="20.3896%" y="741" width="0.0414%" height="15" fill="rgb(217,5,26)" fg:x="492" fg:w="1"/><text x="20.6396%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="20.3896%" y="725" width="0.0414%" height="15" fill="rgb(235,190,38)" fg:x="492" fg:w="1"/><text x="20.6396%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="20.3896%" y="709" width="0.0414%" height="15" fill="rgb(247,86,24)" fg:x="492" fg:w="1"/><text x="20.6396%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="20.3896%" y="693" width="0.0414%" height="15" fill="rgb(205,101,16)" fg:x="492" fg:w="1"/><text x="20.6396%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="20.3896%" y="677" width="0.0414%" height="15" fill="rgb(246,168,33)" fg:x="492" fg:w="1"/><text x="20.6396%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="20.3896%" y="661" width="0.0414%" height="15" fill="rgb(231,114,1)" fg:x="492" fg:w="1"/><text x="20.6396%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="20.3896%" y="645" width="0.0414%" height="15" fill="rgb(207,184,53)" fg:x="492" fg:w="1"/><text x="20.6396%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="20.3896%" y="629" width="0.0414%" height="15" fill="rgb(224,95,51)" fg:x="492" fg:w="1"/><text x="20.6396%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="20.3896%" y="613" width="0.0414%" height="15" fill="rgb(212,188,45)" fg:x="492" fg:w="1"/><text x="20.6396%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="20.3896%" y="597" width="0.0414%" height="15" fill="rgb(223,154,38)" fg:x="492" fg:w="1"/><text x="20.6396%" y="607.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="20.3896%" y="581" width="0.0414%" height="15" fill="rgb(251,22,52)" fg:x="492" fg:w="1"/><text x="20.6396%" y="591.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="20.3896%" y="565" width="0.0414%" height="15" fill="rgb(229,209,22)" fg:x="492" fg:w="1"/><text x="20.6396%" y="575.50"></text></g><g><title>realloc (1 samples, 0.04%)</title><rect x="20.3896%" y="549" width="0.0414%" height="15" fill="rgb(234,138,34)" fg:x="492" fg:w="1"/><text x="20.6396%" y="559.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="20.3896%" y="533" width="0.0414%" height="15" fill="rgb(212,95,11)" fg:x="492" fg:w="1"/><text x="20.6396%" y="543.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="20.3896%" y="517" width="0.0414%" height="15" fill="rgb(240,179,47)" fg:x="492" fg:w="1"/><text x="20.6396%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.04%)</title><rect x="20.4310%" y="933" width="0.0414%" height="15" fill="rgb(240,163,11)" fg:x="493" fg:w="1"/><text x="20.6810%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="20.4310%" y="917" width="0.0414%" height="15" fill="rgb(236,37,12)" fg:x="493" fg:w="1"/><text x="20.6810%" y="927.50"></text></g><g><title>nu_command::viewers::table::colorize_value (4 samples, 0.17%)</title><rect x="20.3481%" y="981" width="0.1658%" height="15" fill="rgb(232,164,16)" fg:x="491" fg:w="4"/><text x="20.5981%" y="991.50"></text></g><g><title>nu_command::viewers::table::use_primitive_style (4 samples, 0.17%)</title><rect x="20.3481%" y="965" width="0.1658%" height="15" fill="rgb(244,205,15)" fg:x="491" fg:w="4"/><text x="20.5981%" y="975.50"></text></g><g><title>nu_color_config::color_config::style_primitive (2 samples, 0.08%)</title><rect x="20.4310%" y="949" width="0.0829%" height="15" fill="rgb(223,117,47)" fg:x="493" fg:w="2"/><text x="20.6810%" y="959.50"></text></g><g><title>nu_table::textstyle::TextStyle::with_style (1 samples, 0.04%)</title><rect x="20.4724%" y="933" width="0.0414%" height="15" fill="rgb(244,107,35)" fg:x="494" fg:w="1"/><text x="20.7224%" y="943.50"></text></g><g><title>nu_table::textstyle::TextStyle::style (1 samples, 0.04%)</title><rect x="20.4724%" y="917" width="0.0414%" height="15" fill="rgb(205,140,8)" fg:x="494" fg:w="1"/><text x="20.7224%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="20.5139%" y="821" width="0.0414%" height="15" fill="rgb(228,84,46)" fg:x="495" fg:w="1"/><text x="20.7639%" y="831.50"></text></g><g><title>nu_command::viewers::table::convert_data (26 samples, 1.08%)</title><rect x="19.5193%" y="997" width="1.0775%" height="15" fill="rgb(254,188,9)" fg:x="471" fg:w="26"/><text x="19.7693%" y="1007.50"></text></g><g><title>nu_protocol::value::Value::get_type (2 samples, 0.08%)</title><rect x="20.5139%" y="981" width="0.0829%" height="15" fill="rgb(206,112,54)" fg:x="495" fg:w="2"/><text x="20.7639%" y="991.50"></text></g><g><title>nu_protocol::value::Value::get_type (2 samples, 0.08%)</title><rect x="20.5139%" y="965" width="0.0829%" height="15" fill="rgb(216,84,49)" fg:x="495" fg:w="2"/><text x="20.7639%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.08%)</title><rect x="20.5139%" y="949" width="0.0829%" height="15" fill="rgb(214,194,35)" fg:x="495" fg:w="2"/><text x="20.7639%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.08%)</title><rect x="20.5139%" y="933" width="0.0829%" height="15" fill="rgb(249,28,3)" fg:x="495" fg:w="2"/><text x="20.7639%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.08%)</title><rect x="20.5139%" y="917" width="0.0829%" height="15" fill="rgb(222,56,52)" fg:x="495" fg:w="2"/><text x="20.7639%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.08%)</title><rect x="20.5139%" y="901" width="0.0829%" height="15" fill="rgb(245,217,50)" fg:x="495" fg:w="2"/><text x="20.7639%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.08%)</title><rect x="20.5139%" y="885" width="0.0829%" height="15" fill="rgb(213,201,24)" fg:x="495" fg:w="2"/><text x="20.7639%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.08%)</title><rect x="20.5139%" y="869" width="0.0829%" height="15" fill="rgb(248,116,28)" fg:x="495" fg:w="2"/><text x="20.7639%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.08%)</title><rect x="20.5139%" y="853" width="0.0829%" height="15" fill="rgb(219,72,43)" fg:x="495" fg:w="2"/><text x="20.7639%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.08%)</title><rect x="20.5139%" y="837" width="0.0829%" height="15" fill="rgb(209,138,14)" fg:x="495" fg:w="2"/><text x="20.7639%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="20.5553%" y="821" width="0.0414%" height="15" fill="rgb(222,18,33)" fg:x="496" fg:w="1"/><text x="20.8053%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.04%)</title><rect x="20.5553%" y="805" width="0.0414%" height="15" fill="rgb(213,199,7)" fg:x="496" fg:w="1"/><text x="20.8053%" y="815.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="20.5553%" y="789" width="0.0414%" height="15" fill="rgb(250,110,10)" fg:x="496" fg:w="1"/><text x="20.8053%" y="799.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="20.7625%" y="741" width="0.0414%" height="15" fill="rgb(248,123,6)" fg:x="501" fg:w="1"/><text x="21.0125%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="20.8040%" y="725" width="0.0414%" height="15" fill="rgb(206,91,31)" fg:x="502" fg:w="1"/><text x="21.0540%" y="735.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="20.8869%" y="709" width="0.0414%" height="15" fill="rgb(211,154,13)" fg:x="504" fg:w="1"/><text x="21.1369%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="20.9283%" y="693" width="0.0829%" height="15" fill="rgb(225,148,7)" fg:x="505" fg:w="2"/><text x="21.1783%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="20.9697%" y="677" width="0.0414%" height="15" fill="rgb(220,160,43)" fg:x="506" fg:w="1"/><text x="21.2197%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.33%)</title><rect x="20.7625%" y="773" width="0.3315%" height="15" fill="rgb(213,52,39)" fg:x="501" fg:w="8"/><text x="21.0125%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (8 samples, 0.33%)</title><rect x="20.7625%" y="757" width="0.3315%" height="15" fill="rgb(243,137,7)" fg:x="501" fg:w="8"/><text x="21.0125%" y="767.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.29%)</title><rect x="20.8040%" y="741" width="0.2901%" height="15" fill="rgb(230,79,13)" fg:x="502" fg:w="7"/><text x="21.0540%" y="751.50"></text></g><g><title>core::str::validations::next_code_point (6 samples, 0.25%)</title><rect x="20.8454%" y="725" width="0.2487%" height="15" fill="rgb(247,105,23)" fg:x="503" fg:w="6"/><text x="21.0954%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="20.9283%" y="709" width="0.1658%" height="15" fill="rgb(223,179,41)" fg:x="505" fg:w="4"/><text x="21.1783%" y="719.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.08%)</title><rect x="21.0112%" y="693" width="0.0829%" height="15" fill="rgb(218,9,34)" fg:x="507" fg:w="2"/><text x="21.2612%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="21.0526%" y="677" width="0.0414%" height="15" fill="rgb(222,106,8)" fg:x="508" fg:w="1"/><text x="21.3026%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (12 samples, 0.50%)</title><rect x="20.6797%" y="805" width="0.4973%" height="15" fill="rgb(211,220,0)" fg:x="499" fg:w="12"/><text x="20.9297%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.46%)</title><rect x="20.7211%" y="789" width="0.4559%" height="15" fill="rgb(229,52,16)" fg:x="500" fg:w="11"/><text x="20.9711%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::{{closure}} (2 samples, 0.08%)</title><rect x="21.0941%" y="773" width="0.0829%" height="15" fill="rgb(212,155,18)" fg:x="509" fg:w="2"/><text x="21.3441%" y="783.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (13 samples, 0.54%)</title><rect x="20.6797%" y="821" width="0.5387%" height="15" fill="rgb(242,21,14)" fg:x="499" fg:w="13"/><text x="20.9297%" y="831.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (1 samples, 0.04%)</title><rect x="21.1770%" y="805" width="0.0414%" height="15" fill="rgb(222,19,48)" fg:x="511" fg:w="1"/><text x="21.4270%" y="815.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputLength&gt;::input_len (1 samples, 0.04%)</title><rect x="21.2184%" y="821" width="0.0414%" height="15" fill="rgb(232,45,27)" fg:x="512" fg:w="1"/><text x="21.4684%" y="831.50"></text></g><g><title>core::str::&lt;impl str&gt;::len (1 samples, 0.04%)</title><rect x="21.2184%" y="805" width="0.0414%" height="15" fill="rgb(249,103,42)" fg:x="512" fg:w="1"/><text x="21.4684%" y="815.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (2 samples, 0.08%)</title><rect x="21.2598%" y="757" width="0.0829%" height="15" fill="rgb(246,81,33)" fg:x="513" fg:w="2"/><text x="21.5098%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="21.3013%" y="741" width="0.0414%" height="15" fill="rgb(252,33,42)" fg:x="514" fg:w="1"/><text x="21.5513%" y="751.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="21.3013%" y="725" width="0.0414%" height="15" fill="rgb(209,212,41)" fg:x="514" fg:w="1"/><text x="21.5513%" y="735.50"></text></g><g><title>ansi_parser::parsers::parse_escape (20 samples, 0.83%)</title><rect x="20.5968%" y="837" width="0.8288%" height="15" fill="rgb(207,154,6)" fg:x="497" fg:w="20"/><text x="20.8468%" y="847.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTake&gt;::take_split (4 samples, 0.17%)</title><rect x="21.2598%" y="821" width="0.1658%" height="15" fill="rgb(223,64,47)" fg:x="513" fg:w="4"/><text x="21.5098%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (4 samples, 0.17%)</title><rect x="21.2598%" y="805" width="0.1658%" height="15" fill="rgb(211,161,38)" fg:x="513" fg:w="4"/><text x="21.5098%" y="815.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (4 samples, 0.17%)</title><rect x="21.2598%" y="789" width="0.1658%" height="15" fill="rgb(219,138,40)" fg:x="513" fg:w="4"/><text x="21.5098%" y="799.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (4 samples, 0.17%)</title><rect x="21.2598%" y="773" width="0.1658%" height="15" fill="rgb(241,228,46)" fg:x="513" fg:w="4"/><text x="21.5098%" y="783.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="21.3427%" y="757" width="0.0829%" height="15" fill="rgb(223,209,38)" fg:x="515" fg:w="2"/><text x="21.5927%" y="767.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.08%)</title><rect x="21.3427%" y="741" width="0.0829%" height="15" fill="rgb(236,164,45)" fg:x="515" fg:w="2"/><text x="21.5927%" y="751.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.08%)</title><rect x="21.3427%" y="725" width="0.0829%" height="15" fill="rgb(231,15,5)" fg:x="515" fg:w="2"/><text x="21.5927%" y="735.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::into_searcher (4 samples, 0.17%)</title><rect x="21.4256%" y="821" width="0.1658%" height="15" fill="rgb(252,35,15)" fg:x="517" fg:w="4"/><text x="21.6756%" y="831.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (3 samples, 0.12%)</title><rect x="21.4671%" y="805" width="0.1243%" height="15" fill="rgb(248,181,18)" fg:x="518" fg:w="3"/><text x="21.7171%" y="815.50"></text></g><g><title>core::char::methods::encode_utf8_raw (2 samples, 0.08%)</title><rect x="21.5085%" y="789" width="0.0829%" height="15" fill="rgb(233,39,42)" fg:x="519" fg:w="2"/><text x="21.7585%" y="799.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (2 samples, 0.08%)</title><rect x="21.5085%" y="773" width="0.0829%" height="15" fill="rgb(238,110,33)" fg:x="519" fg:w="2"/><text x="21.7585%" y="783.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.08%)</title><rect x="21.5085%" y="757" width="0.0829%" height="15" fill="rgb(233,195,10)" fg:x="519" fg:w="2"/><text x="21.7585%" y="767.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (2 samples, 0.08%)</title><rect x="21.5085%" y="741" width="0.0829%" height="15" fill="rgb(254,105,3)" fg:x="519" fg:w="2"/><text x="21.7585%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (2 samples, 0.08%)</title><rect x="21.5085%" y="725" width="0.0829%" height="15" fill="rgb(221,225,9)" fg:x="519" fg:w="2"/><text x="21.7585%" y="735.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (2 samples, 0.08%)</title><rect x="21.5085%" y="709" width="0.0829%" height="15" fill="rgb(224,227,45)" fg:x="519" fg:w="2"/><text x="21.7585%" y="719.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.08%)</title><rect x="21.5085%" y="693" width="0.0829%" height="15" fill="rgb(229,198,43)" fg:x="519" fg:w="2"/><text x="21.7585%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="21.6743%" y="757" width="0.0414%" height="15" fill="rgb(206,209,35)" fg:x="523" fg:w="1"/><text x="21.9243%" y="767.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="21.6743%" y="741" width="0.0414%" height="15" fill="rgb(245,195,53)" fg:x="523" fg:w="1"/><text x="21.9243%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (3 samples, 0.12%)</title><rect x="21.6328%" y="805" width="0.1243%" height="15" fill="rgb(240,92,26)" fg:x="522" fg:w="3"/><text x="21.8828%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2 samples, 0.08%)</title><rect x="21.6743%" y="789" width="0.0829%" height="15" fill="rgb(207,40,23)" fg:x="523" fg:w="2"/><text x="21.9243%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="21.6743%" y="773" width="0.0829%" height="15" fill="rgb(223,111,35)" fg:x="523" fg:w="2"/><text x="21.9243%" y="783.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="21.7157%" y="757" width="0.0414%" height="15" fill="rgb(229,147,28)" fg:x="524" fg:w="1"/><text x="21.9657%" y="767.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="21.7157%" y="741" width="0.0414%" height="15" fill="rgb(211,29,28)" fg:x="524" fg:w="1"/><text x="21.9657%" y="751.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (10 samples, 0.41%)</title><rect x="21.4256%" y="837" width="0.4144%" height="15" fill="rgb(228,72,33)" fg:x="517" fg:w="10"/><text x="21.6756%" y="847.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (6 samples, 0.25%)</title><rect x="21.5914%" y="821" width="0.2487%" height="15" fill="rgb(205,214,31)" fg:x="521" fg:w="6"/><text x="21.8414%" y="831.50"></text></g><g><title>core::slice::memchr::memchr (2 samples, 0.08%)</title><rect x="21.7571%" y="805" width="0.0829%" height="15" fill="rgb(224,111,15)" fg:x="525" fg:w="2"/><text x="22.0071%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (2 samples, 0.08%)</title><rect x="21.7571%" y="789" width="0.0829%" height="15" fill="rgb(253,21,26)" fg:x="525" fg:w="2"/><text x="22.0071%" y="799.50"></text></g><g><title>core::slice::memchr::memchr::{{closure}} (1 samples, 0.04%)</title><rect x="21.7986%" y="773" width="0.0414%" height="15" fill="rgb(245,139,43)" fg:x="526" fg:w="1"/><text x="22.0486%" y="783.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 1.28%)</title><rect x="20.5968%" y="853" width="1.2847%" height="15" fill="rgb(252,170,7)" fg:x="497" fg:w="31"/><text x="20.8468%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.04%)</title><rect x="21.8400%" y="837" width="0.0414%" height="15" fill="rgb(231,118,14)" fg:x="527" fg:w="1"/><text x="22.0900%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.04%)</title><rect x="21.8400%" y="821" width="0.0414%" height="15" fill="rgb(238,83,0)" fg:x="527" fg:w="1"/><text x="22.0900%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.04%)</title><rect x="21.8400%" y="805" width="0.0414%" height="15" fill="rgb(221,39,39)" fg:x="527" fg:w="1"/><text x="22.0900%" y="815.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="21.8400%" y="789" width="0.0414%" height="15" fill="rgb(222,119,46)" fg:x="527" fg:w="1"/><text x="22.0900%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="21.8400%" y="773" width="0.0414%" height="15" fill="rgb(222,165,49)" fg:x="527" fg:w="1"/><text x="22.0900%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="21.8400%" y="757" width="0.0414%" height="15" fill="rgb(219,113,52)" fg:x="527" fg:w="1"/><text x="22.0900%" y="767.50"></text></g><g><title>core::cmp::max (1 samples, 0.04%)</title><rect x="21.9229%" y="789" width="0.0414%" height="15" fill="rgb(214,7,15)" fg:x="529" fg:w="1"/><text x="22.1729%" y="799.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="21.9229%" y="773" width="0.0414%" height="15" fill="rgb(235,32,4)" fg:x="529" fg:w="1"/><text x="22.1729%" y="783.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.04%)</title><rect x="21.9229%" y="757" width="0.0414%" height="15" fill="rgb(238,90,54)" fg:x="529" fg:w="1"/><text x="22.1729%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="21.9229%" y="741" width="0.0414%" height="15" fill="rgb(213,208,19)" fg:x="529" fg:w="1"/><text x="22.1729%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.04%)</title><rect x="21.9229%" y="725" width="0.0414%" height="15" fill="rgb(233,156,4)" fg:x="529" fg:w="1"/><text x="22.1729%" y="735.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="21.8815%" y="853" width="0.1243%" height="15" fill="rgb(207,194,5)" fg:x="528" fg:w="3"/><text x="22.1315%" y="863.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (3 samples, 0.12%)</title><rect x="21.8815%" y="837" width="0.1243%" height="15" fill="rgb(206,111,30)" fg:x="528" fg:w="3"/><text x="22.1315%" y="847.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (3 samples, 0.12%)</title><rect x="21.8815%" y="821" width="0.1243%" height="15" fill="rgb(243,70,54)" fg:x="528" fg:w="3"/><text x="22.1315%" y="831.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (3 samples, 0.12%)</title><rect x="21.8815%" y="805" width="0.1243%" height="15" fill="rgb(242,28,8)" fg:x="528" fg:w="3"/><text x="22.1315%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="21.9644%" y="789" width="0.0414%" height="15" fill="rgb(219,106,18)" fg:x="530" fg:w="1"/><text x="22.2144%" y="799.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="21.9644%" y="773" width="0.0414%" height="15" fill="rgb(244,222,10)" fg:x="530" fg:w="1"/><text x="22.2144%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 1.45%)</title><rect x="20.5968%" y="885" width="1.4505%" height="15" fill="rgb(236,179,52)" fg:x="497" fg:w="35"/><text x="20.8468%" y="895.50"></text></g><g><title>&lt;ansi_str::AnsiSplit as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 1.45%)</title><rect x="20.5968%" y="869" width="1.4505%" height="15" fill="rgb(213,23,39)" fg:x="497" fg:w="35"/><text x="20.8468%" y="879.50"></text></g><g><title>ansi_str::update_ansi_state (1 samples, 0.04%)</title><rect x="22.0058%" y="853" width="0.0414%" height="15" fill="rgb(238,48,10)" fg:x="531" fg:w="1"/><text x="22.2558%" y="863.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.04%)</title><rect x="22.0472%" y="885" width="0.0414%" height="15" fill="rgb(251,196,23)" fg:x="532" fg:w="1"/><text x="22.2972%" y="895.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.04%)</title><rect x="22.0472%" y="869" width="0.0414%" height="15" fill="rgb(250,152,24)" fg:x="532" fg:w="1"/><text x="22.2972%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.04%)</title><rect x="22.0472%" y="853" width="0.0414%" height="15" fill="rgb(209,150,17)" fg:x="532" fg:w="1"/><text x="22.2972%" y="863.50"></text></g><g><title>&lt;alloc::vec::ExtendElement&lt;T&gt; as alloc::vec::ExtendWith&lt;T&gt;&gt;::next (1 samples, 0.04%)</title><rect x="22.0472%" y="837" width="0.0414%" height="15" fill="rgb(234,202,34)" fg:x="532" fg:w="1"/><text x="22.2972%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="22.0472%" y="821" width="0.0414%" height="15" fill="rgb(253,148,53)" fg:x="532" fg:w="1"/><text x="22.2972%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="22.0472%" y="805" width="0.0414%" height="15" fill="rgb(218,129,16)" fg:x="532" fg:w="1"/><text x="22.2972%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="22.0472%" y="789" width="0.0414%" height="15" fill="rgb(216,85,19)" fg:x="532" fg:w="1"/><text x="22.2972%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="22.0472%" y="773" width="0.0414%" height="15" fill="rgb(235,228,7)" fg:x="532" fg:w="1"/><text x="22.2972%" y="783.50"></text></g><g><title>&lt;papergrid::CellContent as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="22.0472%" y="757" width="0.0414%" height="15" fill="rgb(245,175,0)" fg:x="532" fg:w="1"/><text x="22.2972%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="22.0472%" y="741" width="0.0414%" height="15" fill="rgb(208,168,36)" fg:x="532" fg:w="1"/><text x="22.2972%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="22.0472%" y="725" width="0.0414%" height="15" fill="rgb(246,171,24)" fg:x="532" fg:w="1"/><text x="22.2972%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="22.0472%" y="709" width="0.0414%" height="15" fill="rgb(215,142,24)" fg:x="532" fg:w="1"/><text x="22.2972%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="22.0472%" y="693" width="0.0414%" height="15" fill="rgb(250,187,7)" fg:x="532" fg:w="1"/><text x="22.2972%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="22.0472%" y="677" width="0.0414%" height="15" fill="rgb(228,66,33)" fg:x="532" fg:w="1"/><text x="22.2972%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="22.0472%" y="661" width="0.0414%" height="15" fill="rgb(234,215,21)" fg:x="532" fg:w="1"/><text x="22.2972%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="22.0472%" y="645" width="0.0414%" height="15" fill="rgb(222,191,20)" fg:x="532" fg:w="1"/><text x="22.2972%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="22.0472%" y="629" width="0.0414%" height="15" fill="rgb(245,79,54)" fg:x="532" fg:w="1"/><text x="22.2972%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="22.0472%" y="613" width="0.0414%" height="15" fill="rgb(240,10,37)" fg:x="532" fg:w="1"/><text x="22.2972%" y="623.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="22.0472%" y="597" width="0.0414%" height="15" fill="rgb(214,192,32)" fg:x="532" fg:w="1"/><text x="22.2972%" y="607.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.04%)</title><rect x="22.0472%" y="581" width="0.0414%" height="15" fill="rgb(209,36,54)" fg:x="532" fg:w="1"/><text x="22.2972%" y="591.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="22.1301%" y="805" width="0.0414%" height="15" fill="rgb(220,10,11)" fg:x="534" fg:w="1"/><text x="22.3801%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="22.1301%" y="789" width="0.0414%" height="15" fill="rgb(221,106,17)" fg:x="534" fg:w="1"/><text x="22.3801%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="22.1301%" y="773" width="0.0414%" height="15" fill="rgb(251,142,44)" fg:x="534" fg:w="1"/><text x="22.3801%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.04%)</title><rect x="22.1716%" y="805" width="0.0414%" height="15" fill="rgb(238,13,15)" fg:x="535" fg:w="1"/><text x="22.4216%" y="815.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="22.1716%" y="789" width="0.0414%" height="15" fill="rgb(208,107,27)" fg:x="535" fg:w="1"/><text x="22.4216%" y="799.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (10 samples, 0.41%)</title><rect x="22.0887%" y="821" width="0.4144%" height="15" fill="rgb(205,136,37)" fg:x="533" fg:w="10"/><text x="22.3387%" y="831.50"></text></g><g><title>vte::Parser::advance (7 samples, 0.29%)</title><rect x="22.2130%" y="805" width="0.2901%" height="15" fill="rgb(250,205,27)" fg:x="536" fg:w="7"/><text x="22.4630%" y="815.50"></text></g><g><title>vte::Parser::perform_state_change (4 samples, 0.17%)</title><rect x="22.3373%" y="789" width="0.1658%" height="15" fill="rgb(210,80,43)" fg:x="539" fg:w="4"/><text x="22.5873%" y="799.50"></text></g><g><title>vte::Parser::perform_action (4 samples, 0.17%)</title><rect x="22.3373%" y="773" width="0.1658%" height="15" fill="rgb(247,160,36)" fg:x="539" fg:w="4"/><text x="22.5873%" y="783.50"></text></g><g><title>vte::Parser::intermediates (1 samples, 0.04%)</title><rect x="22.4617%" y="757" width="0.0414%" height="15" fill="rgb(234,13,49)" fg:x="542" fg:w="1"/><text x="22.7117%" y="767.50"></text></g><g><title>std::io::Write::write_all (12 samples, 0.50%)</title><rect x="22.0887%" y="837" width="0.4973%" height="15" fill="rgb(234,122,0)" fg:x="533" fg:w="12"/><text x="22.3387%" y="847.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.08%)</title><rect x="22.5031%" y="821" width="0.0829%" height="15" fill="rgb(207,146,38)" fg:x="543" fg:w="2"/><text x="22.7531%" y="831.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="22.5446%" y="805" width="0.0414%" height="15" fill="rgb(207,177,25)" fg:x="544" fg:w="1"/><text x="22.7946%" y="815.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="22.5446%" y="789" width="0.0414%" height="15" fill="rgb(211,178,42)" fg:x="544" fg:w="1"/><text x="22.7946%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="22.5446%" y="773" width="0.0414%" height="15" fill="rgb(230,69,54)" fg:x="544" fg:w="1"/><text x="22.7946%" y="783.50"></text></g><g><title>std::io::cursor::Cursor&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="22.5860%" y="837" width="0.0414%" height="15" fill="rgb(214,135,41)" fg:x="545" fg:w="1"/><text x="22.8360%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="22.7103%" y="741" width="0.0414%" height="15" fill="rgb(237,67,25)" fg:x="548" fg:w="1"/><text x="22.9603%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="22.7103%" y="725" width="0.0414%" height="15" fill="rgb(222,189,50)" fg:x="548" fg:w="1"/><text x="22.9603%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="22.7103%" y="709" width="0.0414%" height="15" fill="rgb(245,148,34)" fg:x="548" fg:w="1"/><text x="22.9603%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;alloc::vec::Vec&lt;u8&gt;,std::io::buffered::bufwriter::WriterPanicked&gt;&gt; (2 samples, 0.08%)</title><rect x="22.7103%" y="773" width="0.0829%" height="15" fill="rgb(222,29,6)" fg:x="548" fg:w="2"/><text x="22.9603%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.08%)</title><rect x="22.7103%" y="757" width="0.0829%" height="15" fill="rgb(221,189,43)" fg:x="548" fg:w="2"/><text x="22.9603%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="22.7518%" y="741" width="0.0414%" height="15" fill="rgb(207,36,27)" fg:x="549" fg:w="1"/><text x="23.0018%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="22.7518%" y="725" width="0.0414%" height="15" fill="rgb(217,90,24)" fg:x="549" fg:w="1"/><text x="23.0018%" y="735.50"></text></g><g><title>papergrid::cells_content (54 samples, 2.24%)</title><rect x="20.5968%" y="901" width="2.2379%" height="15" fill="rgb(224,66,35)" fg:x="497" fg:w="54"/><text x="20.8468%" y="911.50">p..</text></g><g><title>papergrid::string_width_tab (18 samples, 0.75%)</title><rect x="22.0887%" y="885" width="0.7460%" height="15" fill="rgb(221,13,50)" fg:x="533" fg:w="18"/><text x="22.3387%" y="895.50"></text></g><g><title>papergrid::string_width (18 samples, 0.75%)</title><rect x="22.0887%" y="869" width="0.7460%" height="15" fill="rgb(236,68,49)" fg:x="533" fg:w="18"/><text x="22.3387%" y="879.50"></text></g><g><title>strip_ansi_escapes::strip (18 samples, 0.75%)</title><rect x="22.0887%" y="853" width="0.7460%" height="15" fill="rgb(229,146,28)" fg:x="533" fg:w="18"/><text x="22.3387%" y="863.50"></text></g><g><title>strip_ansi_escapes::Writer&lt;W&gt;::into_inner (5 samples, 0.21%)</title><rect x="22.6274%" y="837" width="0.2072%" height="15" fill="rgb(225,31,38)" fg:x="546" fg:w="5"/><text x="22.8774%" y="847.50"></text></g><g><title>strip_ansi_escapes::Performer&lt;W&gt;::into_inner (5 samples, 0.21%)</title><rect x="22.6274%" y="821" width="0.2072%" height="15" fill="rgb(250,208,3)" fg:x="546" fg:w="5"/><text x="22.8774%" y="831.50"></text></g><g><title>std::io::buffered::linewriter::LineWriter&lt;W&gt;::into_inner (5 samples, 0.21%)</title><rect x="22.6274%" y="805" width="0.2072%" height="15" fill="rgb(246,54,23)" fg:x="546" fg:w="5"/><text x="22.8774%" y="815.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::into_inner (5 samples, 0.21%)</title><rect x="22.6274%" y="789" width="0.2072%" height="15" fill="rgb(243,76,11)" fg:x="546" fg:w="5"/><text x="22.8774%" y="799.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::into_parts (1 samples, 0.04%)</title><rect x="22.7932%" y="773" width="0.0414%" height="15" fill="rgb(245,21,50)" fg:x="550" fg:w="1"/><text x="23.0432%" y="783.50"></text></g><g><title>core::ptr::read (1 samples, 0.04%)</title><rect x="22.7932%" y="757" width="0.0414%" height="15" fill="rgb(228,9,43)" fg:x="550" fg:w="1"/><text x="23.0432%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (7 samples, 0.29%)</title><rect x="22.8346%" y="773" width="0.2901%" height="15" fill="rgb(208,100,47)" fg:x="551" fg:w="7"/><text x="23.0846%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (7 samples, 0.29%)</title><rect x="22.8346%" y="757" width="0.2901%" height="15" fill="rgb(232,26,8)" fg:x="551" fg:w="7"/><text x="23.0846%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (7 samples, 0.29%)</title><rect x="22.8346%" y="741" width="0.2901%" height="15" fill="rgb(216,166,38)" fg:x="551" fg:w="7"/><text x="23.0846%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (7 samples, 0.29%)</title><rect x="22.8346%" y="725" width="0.2901%" height="15" fill="rgb(251,202,51)" fg:x="551" fg:w="7"/><text x="23.0846%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="23.0833%" y="709" width="0.0414%" height="15" fill="rgb(254,216,34)" fg:x="557" fg:w="1"/><text x="23.3333%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.25%)</title><rect x="23.2076%" y="645" width="0.2487%" height="15" fill="rgb(251,32,27)" fg:x="560" fg:w="6"/><text x="23.4576%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="23.4148%" y="629" width="0.0414%" height="15" fill="rgb(208,127,28)" fg:x="565" fg:w="1"/><text x="23.6648%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (10 samples, 0.41%)</title><rect x="23.1247%" y="741" width="0.4144%" height="15" fill="rgb(224,137,22)" fg:x="558" fg:w="10"/><text x="23.3747%" y="751.50"></text></g><g><title>core::hash::Hasher::write_isize (10 samples, 0.41%)</title><rect x="23.1247%" y="725" width="0.4144%" height="15" fill="rgb(254,70,32)" fg:x="558" fg:w="10"/><text x="23.3747%" y="735.50"></text></g><g><title>core::hash::Hasher::write_usize (10 samples, 0.41%)</title><rect x="23.1247%" y="709" width="0.4144%" height="15" fill="rgb(229,75,37)" fg:x="558" fg:w="10"/><text x="23.3747%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.41%)</title><rect x="23.1247%" y="693" width="0.4144%" height="15" fill="rgb(252,64,23)" fg:x="558" fg:w="10"/><text x="23.3747%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.41%)</title><rect x="23.1247%" y="677" width="0.4144%" height="15" fill="rgb(232,162,48)" fg:x="558" fg:w="10"/><text x="23.3747%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.41%)</title><rect x="23.1247%" y="661" width="0.4144%" height="15" fill="rgb(246,160,12)" fg:x="558" fg:w="10"/><text x="23.3747%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.08%)</title><rect x="23.4563%" y="645" width="0.0829%" height="15" fill="rgb(247,166,0)" fg:x="566" fg:w="2"/><text x="23.7063%" y="655.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="23.4563%" y="629" width="0.0829%" height="15" fill="rgb(249,219,21)" fg:x="566" fg:w="2"/><text x="23.7063%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (24 samples, 0.99%)</title><rect x="22.8346%" y="805" width="0.9946%" height="15" fill="rgb(205,209,3)" fg:x="551" fg:w="24"/><text x="23.0846%" y="815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (24 samples, 0.99%)</title><rect x="22.8346%" y="789" width="0.9946%" height="15" fill="rgb(243,44,1)" fg:x="551" fg:w="24"/><text x="23.0846%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (17 samples, 0.70%)</title><rect x="23.1247%" y="773" width="0.7045%" height="15" fill="rgb(206,159,16)" fg:x="558" fg:w="17"/><text x="23.3747%" y="783.50"></text></g><g><title>&lt;papergrid::Entity as core::hash::Hash&gt;::hash (17 samples, 0.70%)</title><rect x="23.1247%" y="757" width="0.7045%" height="15" fill="rgb(244,77,30)" fg:x="558" fg:w="17"/><text x="23.3747%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (7 samples, 0.29%)</title><rect x="23.5392%" y="741" width="0.2901%" height="15" fill="rgb(218,69,12)" fg:x="568" fg:w="7"/><text x="23.7892%" y="751.50"></text></g><g><title>core::hash::Hasher::write_usize (7 samples, 0.29%)</title><rect x="23.5392%" y="725" width="0.2901%" height="15" fill="rgb(212,87,7)" fg:x="568" fg:w="7"/><text x="23.7892%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.29%)</title><rect x="23.5392%" y="709" width="0.2901%" height="15" fill="rgb(245,114,25)" fg:x="568" fg:w="7"/><text x="23.7892%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.29%)</title><rect x="23.5392%" y="693" width="0.2901%" height="15" fill="rgb(210,61,42)" fg:x="568" fg:w="7"/><text x="23.7892%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.29%)</title><rect x="23.5392%" y="677" width="0.2901%" height="15" fill="rgb(211,52,33)" fg:x="568" fg:w="7"/><text x="23.7892%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.29%)</title><rect x="23.5392%" y="661" width="0.2901%" height="15" fill="rgb(234,58,33)" fg:x="568" fg:w="7"/><text x="23.7892%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.04%)</title><rect x="23.7878%" y="645" width="0.0414%" height="15" fill="rgb(220,115,36)" fg:x="574" fg:w="1"/><text x="24.0378%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.08%)</title><rect x="23.8293%" y="757" width="0.0829%" height="15" fill="rgb(243,153,54)" fg:x="575" fg:w="2"/><text x="24.0793%" y="767.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.08%)</title><rect x="23.8293%" y="741" width="0.0829%" height="15" fill="rgb(251,47,18)" fg:x="575" fg:w="2"/><text x="24.0793%" y="751.50"></text></g><g><title>&lt;papergrid::Entity as core::cmp::PartialEq&gt;::eq (2 samples, 0.08%)</title><rect x="23.8293%" y="725" width="0.0829%" height="15" fill="rgb(242,102,42)" fg:x="575" fg:w="2"/><text x="24.0793%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (4 samples, 0.17%)</title><rect x="23.9121%" y="741" width="0.1658%" height="15" fill="rgb(234,31,38)" fg:x="577" fg:w="4"/><text x="24.1621%" y="751.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.04%)</title><rect x="24.0365%" y="725" width="0.0414%" height="15" fill="rgb(221,117,51)" fg:x="580" fg:w="1"/><text x="24.2865%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.04%)</title><rect x="24.0779%" y="741" width="0.0414%" height="15" fill="rgb(212,20,18)" fg:x="581" fg:w="1"/><text x="24.3279%" y="751.50"></text></g><g><title>papergrid::Grid::style (36 samples, 1.49%)</title><rect x="22.8346%" y="885" width="1.4919%" height="15" fill="rgb(245,133,36)" fg:x="551" fg:w="36"/><text x="23.0846%" y="895.50"></text></g><g><title>papergrid::lookup_entity_value (36 samples, 1.49%)</title><rect x="22.8346%" y="869" width="1.4919%" height="15" fill="rgb(212,6,19)" fg:x="551" fg:w="36"/><text x="23.0846%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (36 samples, 1.49%)</title><rect x="22.8346%" y="853" width="1.4919%" height="15" fill="rgb(218,1,36)" fg:x="551" fg:w="36"/><text x="23.0846%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (36 samples, 1.49%)</title><rect x="22.8346%" y="837" width="1.4919%" height="15" fill="rgb(246,84,54)" fg:x="551" fg:w="36"/><text x="23.0846%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (36 samples, 1.49%)</title><rect x="22.8346%" y="821" width="1.4919%" height="15" fill="rgb(242,110,6)" fg:x="551" fg:w="36"/><text x="23.0846%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.50%)</title><rect x="23.8293%" y="805" width="0.4973%" height="15" fill="rgb(214,47,5)" fg:x="575" fg:w="12"/><text x="24.0793%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.50%)</title><rect x="23.8293%" y="789" width="0.4973%" height="15" fill="rgb(218,159,25)" fg:x="575" fg:w="12"/><text x="24.0793%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (12 samples, 0.50%)</title><rect x="23.8293%" y="773" width="0.4973%" height="15" fill="rgb(215,211,28)" fg:x="575" fg:w="12"/><text x="24.0793%" y="783.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (10 samples, 0.41%)</title><rect x="23.9121%" y="757" width="0.4144%" height="15" fill="rgb(238,59,32)" fg:x="577" fg:w="10"/><text x="24.1621%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.21%)</title><rect x="24.1194%" y="741" width="0.2072%" height="15" fill="rgb(226,82,3)" fg:x="582" fg:w="5"/><text x="24.3694%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.17%)</title><rect x="24.1608%" y="725" width="0.1658%" height="15" fill="rgb(240,164,32)" fg:x="583" fg:w="4"/><text x="24.4108%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (4 samples, 0.17%)</title><rect x="24.3266%" y="821" width="0.1658%" height="15" fill="rgb(232,46,7)" fg:x="587" fg:w="4"/><text x="24.5766%" y="831.50"></text></g><g><title>alloc::string::String::push (4 samples, 0.17%)</title><rect x="24.3266%" y="805" width="0.1658%" height="15" fill="rgb(229,129,53)" fg:x="587" fg:w="4"/><text x="24.5766%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.12%)</title><rect x="24.3680%" y="789" width="0.1243%" height="15" fill="rgb(234,188,29)" fg:x="588" fg:w="3"/><text x="24.6180%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.04%)</title><rect x="24.4509%" y="773" width="0.0414%" height="15" fill="rgb(246,141,4)" fg:x="590" fg:w="1"/><text x="24.7009%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="24.4923%" y="789" width="0.0414%" height="15" fill="rgb(229,23,39)" fg:x="591" fg:w="1"/><text x="24.7423%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="24.5338%" y="773" width="0.0414%" height="15" fill="rgb(206,12,3)" fg:x="592" fg:w="1"/><text x="24.7838%" y="783.50"></text></g><g><title>&lt;nu_command::viewers::table::PagingTableCreator as core::iter::traits::iterator::Iterator&gt;::next (123 samples, 5.10%)</title><rect x="19.5193%" y="1013" width="5.0974%" height="15" fill="rgb(252,226,20)" fg:x="471" fg:w="123"/><text x="19.7693%" y="1023.50">&lt;nu_co..</text></g><g><title>nu_command::viewers::table::print_table (97 samples, 4.02%)</title><rect x="20.5968%" y="997" width="4.0199%" height="15" fill="rgb(216,123,35)" fg:x="497" fg:w="97"/><text x="20.8468%" y="1007.50">nu_c..</text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (97 samples, 4.02%)</title><rect x="20.5968%" y="981" width="4.0199%" height="15" fill="rgb(212,68,40)" fg:x="497" fg:w="97"/><text x="20.8468%" y="991.50">&lt;T a..</text></g><g><title>&lt;tabled::table::Table as core::fmt::Display&gt;::fmt (97 samples, 4.02%)</title><rect x="20.5968%" y="965" width="4.0199%" height="15" fill="rgb(254,125,32)" fg:x="497" fg:w="97"/><text x="20.8468%" y="975.50">&lt;tab..</text></g><g><title>core::fmt::Formatter::write_fmt (97 samples, 4.02%)</title><rect x="20.5968%" y="949" width="4.0199%" height="15" fill="rgb(253,97,22)" fg:x="497" fg:w="97"/><text x="20.8468%" y="959.50">core..</text></g><g><title>core::fmt::write (97 samples, 4.02%)</title><rect x="20.5968%" y="933" width="4.0199%" height="15" fill="rgb(241,101,14)" fg:x="497" fg:w="97"/><text x="20.8468%" y="943.50">core..</text></g><g><title>&lt;papergrid::Grid as core::fmt::Display&gt;::fmt (97 samples, 4.02%)</title><rect x="20.5968%" y="917" width="4.0199%" height="15" fill="rgb(238,103,29)" fg:x="497" fg:w="97"/><text x="20.8468%" y="927.50">&lt;pap..</text></g><g><title>papergrid::print_grid (43 samples, 1.78%)</title><rect x="22.8346%" y="901" width="1.7820%" height="15" fill="rgb(233,195,47)" fg:x="551" fg:w="43"/><text x="23.0846%" y="911.50">p..</text></g><g><title>papergrid::build_cell_line (7 samples, 0.29%)</title><rect x="24.3266%" y="885" width="0.2901%" height="15" fill="rgb(246,218,30)" fg:x="587" fg:w="7"/><text x="24.5766%" y="895.50"></text></g><g><title>papergrid::build_format_line (7 samples, 0.29%)</title><rect x="24.3266%" y="869" width="0.2901%" height="15" fill="rgb(219,145,47)" fg:x="587" fg:w="7"/><text x="24.5766%" y="879.50"></text></g><g><title>papergrid::print_text_formated (7 samples, 0.29%)</title><rect x="24.3266%" y="853" width="0.2901%" height="15" fill="rgb(243,12,26)" fg:x="587" fg:w="7"/><text x="24.5766%" y="863.50"></text></g><g><title>papergrid::print_text (7 samples, 0.29%)</title><rect x="24.3266%" y="837" width="0.2901%" height="15" fill="rgb(214,87,16)" fg:x="587" fg:w="7"/><text x="24.5766%" y="847.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="24.4923%" y="821" width="0.1243%" height="15" fill="rgb(208,99,42)" fg:x="591" fg:w="3"/><text x="24.7423%" y="831.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.12%)</title><rect x="24.4923%" y="805" width="0.1243%" height="15" fill="rgb(253,99,2)" fg:x="591" fg:w="3"/><text x="24.7423%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="24.5338%" y="789" width="0.0829%" height="15" fill="rgb(220,168,23)" fg:x="592" fg:w="2"/><text x="24.7838%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="24.5752%" y="773" width="0.0414%" height="15" fill="rgb(242,38,24)" fg:x="593" fg:w="1"/><text x="24.8252%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.17%)</title><rect x="24.6995%" y="693" width="0.1658%" height="15" fill="rgb(225,182,9)" fg:x="596" fg:w="4"/><text x="24.9495%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.17%)</title><rect x="24.6995%" y="677" width="0.1658%" height="15" fill="rgb(243,178,37)" fg:x="596" fg:w="4"/><text x="24.9495%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.17%)</title><rect x="24.6995%" y="661" width="0.1658%" height="15" fill="rgb(232,139,19)" fg:x="596" fg:w="4"/><text x="24.9495%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.17%)</title><rect x="24.6995%" y="645" width="0.1658%" height="15" fill="rgb(225,201,24)" fg:x="596" fg:w="4"/><text x="24.9495%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.17%)</title><rect x="24.6995%" y="629" width="0.1658%" height="15" fill="rgb(221,47,46)" fg:x="596" fg:w="4"/><text x="24.9495%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.17%)</title><rect x="24.6995%" y="613" width="0.1658%" height="15" fill="rgb(249,23,13)" fg:x="596" fg:w="4"/><text x="24.9495%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.17%)</title><rect x="24.6995%" y="597" width="0.1658%" height="15" fill="rgb(219,9,5)" fg:x="596" fg:w="4"/><text x="24.9495%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.17%)</title><rect x="24.6995%" y="581" width="0.1658%" height="15" fill="rgb(254,171,16)" fg:x="596" fg:w="4"/><text x="24.9495%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.17%)</title><rect x="24.6995%" y="565" width="0.1658%" height="15" fill="rgb(230,171,20)" fg:x="596" fg:w="4"/><text x="24.9495%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.17%)</title><rect x="24.6995%" y="549" width="0.1658%" height="15" fill="rgb(210,71,41)" fg:x="596" fg:w="4"/><text x="24.9495%" y="559.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.17%)</title><rect x="24.6995%" y="533" width="0.1658%" height="15" fill="rgb(206,173,20)" fg:x="596" fg:w="4"/><text x="24.9495%" y="543.50"></text></g><g><title>malloc (4 samples, 0.17%)</title><rect x="24.6995%" y="517" width="0.1658%" height="15" fill="rgb(233,88,34)" fg:x="596" fg:w="4"/><text x="24.9495%" y="527.50"></text></g><g><title>[libc.so.6] (4 samples, 0.17%)</title><rect x="24.6995%" y="501" width="0.1658%" height="15" fill="rgb(223,209,46)" fg:x="596" fg:w="4"/><text x="24.9495%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="24.8653%" y="693" width="0.0829%" height="15" fill="rgb(250,43,18)" fg:x="600" fg:w="2"/><text x="25.1153%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="24.8653%" y="677" width="0.0829%" height="15" fill="rgb(208,13,10)" fg:x="600" fg:w="2"/><text x="25.1153%" y="687.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="24.9068%" y="661" width="0.0414%" height="15" fill="rgb(212,200,36)" fg:x="601" fg:w="1"/><text x="25.1568%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="24.9482%" y="693" width="0.0414%" height="15" fill="rgb(225,90,30)" fg:x="602" fg:w="1"/><text x="25.1982%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="24.9482%" y="677" width="0.0414%" height="15" fill="rgb(236,182,39)" fg:x="602" fg:w="1"/><text x="25.1982%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="24.9482%" y="661" width="0.0414%" height="15" fill="rgb(212,144,35)" fg:x="602" fg:w="1"/><text x="25.1982%" y="671.50"></text></g><g><title>_init (1 samples, 0.04%)</title><rect x="24.9896%" y="677" width="0.0414%" height="15" fill="rgb(228,63,44)" fg:x="603" fg:w="1"/><text x="25.2396%" y="687.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (11 samples, 0.46%)</title><rect x="24.6167%" y="1013" width="0.4559%" height="15" fill="rgb(228,109,6)" fg:x="594" fg:w="11"/><text x="24.8667%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.46%)</title><rect x="24.6167%" y="997" width="0.4559%" height="15" fill="rgb(238,117,24)" fg:x="594" fg:w="11"/><text x="24.8667%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.46%)</title><rect x="24.6167%" y="981" width="0.4559%" height="15" fill="rgb(242,26,26)" fg:x="594" fg:w="11"/><text x="24.8667%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.46%)</title><rect x="24.6167%" y="965" width="0.4559%" height="15" fill="rgb(221,92,48)" fg:x="594" fg:w="11"/><text x="24.8667%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.46%)</title><rect x="24.6167%" y="949" width="0.4559%" height="15" fill="rgb(209,209,32)" fg:x="594" fg:w="11"/><text x="24.8667%" y="959.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (11 samples, 0.46%)</title><rect x="24.6167%" y="933" width="0.4559%" height="15" fill="rgb(221,70,22)" fg:x="594" fg:w="11"/><text x="24.8667%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.46%)</title><rect x="24.6167%" y="917" width="0.4559%" height="15" fill="rgb(248,145,5)" fg:x="594" fg:w="11"/><text x="24.8667%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.46%)</title><rect x="24.6167%" y="901" width="0.4559%" height="15" fill="rgb(226,116,26)" fg:x="594" fg:w="11"/><text x="24.8667%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.46%)</title><rect x="24.6167%" y="885" width="0.4559%" height="15" fill="rgb(244,5,17)" fg:x="594" fg:w="11"/><text x="24.8667%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.46%)</title><rect x="24.6167%" y="869" width="0.4559%" height="15" fill="rgb(252,159,33)" fg:x="594" fg:w="11"/><text x="24.8667%" y="879.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (11 samples, 0.46%)</title><rect x="24.6167%" y="853" width="0.4559%" height="15" fill="rgb(206,71,0)" fg:x="594" fg:w="11"/><text x="24.8667%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.46%)</title><rect x="24.6167%" y="837" width="0.4559%" height="15" fill="rgb(233,118,54)" fg:x="594" fg:w="11"/><text x="24.8667%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.46%)</title><rect x="24.6167%" y="821" width="0.4559%" height="15" fill="rgb(234,83,48)" fg:x="594" fg:w="11"/><text x="24.8667%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.46%)</title><rect x="24.6167%" y="805" width="0.4559%" height="15" fill="rgb(228,3,54)" fg:x="594" fg:w="11"/><text x="24.8667%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.46%)</title><rect x="24.6167%" y="789" width="0.4559%" height="15" fill="rgb(226,155,13)" fg:x="594" fg:w="11"/><text x="24.8667%" y="799.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (11 samples, 0.46%)</title><rect x="24.6167%" y="773" width="0.4559%" height="15" fill="rgb(241,28,37)" fg:x="594" fg:w="11"/><text x="24.8667%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.46%)</title><rect x="24.6167%" y="757" width="0.4559%" height="15" fill="rgb(233,93,10)" fg:x="594" fg:w="11"/><text x="24.8667%" y="767.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.46%)</title><rect x="24.6167%" y="741" width="0.4559%" height="15" fill="rgb(225,113,19)" fg:x="594" fg:w="11"/><text x="24.8667%" y="751.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.46%)</title><rect x="24.6167%" y="725" width="0.4559%" height="15" fill="rgb(241,2,18)" fg:x="594" fg:w="11"/><text x="24.8667%" y="735.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.46%)</title><rect x="24.6167%" y="709" width="0.4559%" height="15" fill="rgb(228,207,21)" fg:x="594" fg:w="11"/><text x="24.8667%" y="719.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.08%)</title><rect x="24.9896%" y="693" width="0.0829%" height="15" fill="rgb(213,211,35)" fg:x="603" fg:w="2"/><text x="25.2396%" y="703.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="25.0311%" y="677" width="0.0414%" height="15" fill="rgb(209,83,10)" fg:x="604" fg:w="1"/><text x="25.2811%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="25.0311%" y="661" width="0.0414%" height="15" fill="rgb(209,164,1)" fg:x="604" fg:w="1"/><text x="25.2811%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="25.0725%" y="837" width="0.0414%" height="15" fill="rgb(213,184,43)" fg:x="605" fg:w="1"/><text x="25.3225%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="25.0725%" y="821" width="0.0414%" height="15" fill="rgb(231,61,34)" fg:x="605" fg:w="1"/><text x="25.3225%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="25.0725%" y="805" width="0.0414%" height="15" fill="rgb(235,75,3)" fg:x="605" fg:w="1"/><text x="25.3225%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="25.0725%" y="789" width="0.0414%" height="15" fill="rgb(220,106,47)" fg:x="605" fg:w="1"/><text x="25.3225%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="25.0725%" y="773" width="0.0414%" height="15" fill="rgb(210,196,33)" fg:x="605" fg:w="1"/><text x="25.3225%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="25.0725%" y="757" width="0.0414%" height="15" fill="rgb(229,154,42)" fg:x="605" fg:w="1"/><text x="25.3225%" y="767.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="25.0725%" y="741" width="0.0414%" height="15" fill="rgb(228,114,26)" fg:x="605" fg:w="1"/><text x="25.3225%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="25.0725%" y="725" width="0.0414%" height="15" fill="rgb(208,144,1)" fg:x="605" fg:w="1"/><text x="25.3225%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (2 samples, 0.08%)</title><rect x="25.0725%" y="965" width="0.0829%" height="15" fill="rgb(239,112,37)" fg:x="605" fg:w="2"/><text x="25.3225%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="25.0725%" y="949" width="0.0829%" height="15" fill="rgb(210,96,50)" fg:x="605" fg:w="2"/><text x="25.3225%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::value::Value]&gt; (2 samples, 0.08%)</title><rect x="25.0725%" y="933" width="0.0829%" height="15" fill="rgb(222,178,2)" fg:x="605" fg:w="2"/><text x="25.3225%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::value::Value&gt; (2 samples, 0.08%)</title><rect x="25.0725%" y="917" width="0.0829%" height="15" fill="rgb(226,74,18)" fg:x="605" fg:w="2"/><text x="25.3225%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (2 samples, 0.08%)</title><rect x="25.0725%" y="901" width="0.0829%" height="15" fill="rgb(225,67,54)" fg:x="605" fg:w="2"/><text x="25.3225%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="25.0725%" y="885" width="0.0829%" height="15" fill="rgb(251,92,32)" fg:x="605" fg:w="2"/><text x="25.3225%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::value::Value]&gt; (2 samples, 0.08%)</title><rect x="25.0725%" y="869" width="0.0829%" height="15" fill="rgb(228,149,22)" fg:x="605" fg:w="2"/><text x="25.3225%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::value::Value&gt; (2 samples, 0.08%)</title><rect x="25.0725%" y="853" width="0.0829%" height="15" fill="rgb(243,54,13)" fg:x="605" fg:w="2"/><text x="25.3225%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.04%)</title><rect x="25.1140%" y="837" width="0.0414%" height="15" fill="rgb(243,180,28)" fg:x="606" fg:w="1"/><text x="25.3640%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="25.1140%" y="821" width="0.0414%" height="15" fill="rgb(208,167,24)" fg:x="606" fg:w="1"/><text x="25.3640%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1 samples, 0.04%)</title><rect x="25.1140%" y="805" width="0.0414%" height="15" fill="rgb(245,73,45)" fg:x="606" fg:w="1"/><text x="25.3640%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="25.1140%" y="789" width="0.0414%" height="15" fill="rgb(237,203,48)" fg:x="606" fg:w="1"/><text x="25.3640%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="25.1140%" y="773" width="0.0414%" height="15" fill="rgb(211,197,16)" fg:x="606" fg:w="1"/><text x="25.3640%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="25.1140%" y="757" width="0.0414%" height="15" fill="rgb(243,99,51)" fg:x="606" fg:w="1"/><text x="25.3640%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="25.1140%" y="741" width="0.0414%" height="15" fill="rgb(215,123,29)" fg:x="606" fg:w="1"/><text x="25.3640%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="25.1140%" y="725" width="0.0414%" height="15" fill="rgb(239,186,37)" fg:x="606" fg:w="1"/><text x="25.3640%" y="735.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.04%)</title><rect x="25.1554%" y="949" width="0.0414%" height="15" fill="rgb(252,136,39)" fg:x="607" fg:w="1"/><text x="25.4054%" y="959.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.04%)</title><rect x="25.1554%" y="933" width="0.0414%" height="15" fill="rgb(223,213,32)" fg:x="607" fg:w="1"/><text x="25.4054%" y="943.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.04%)</title><rect x="25.1554%" y="917" width="0.0414%" height="15" fill="rgb(233,115,5)" fg:x="607" fg:w="1"/><text x="25.4054%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="25.1969%" y="933" width="0.0414%" height="15" fill="rgb(207,226,44)" fg:x="608" fg:w="1"/><text x="25.4469%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="25.1969%" y="917" width="0.0414%" height="15" fill="rgb(208,126,0)" fg:x="608" fg:w="1"/><text x="25.4469%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.04%)</title><rect x="25.1969%" y="901" width="0.0414%" height="15" fill="rgb(244,66,21)" fg:x="608" fg:w="1"/><text x="25.4469%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.04%)</title><rect x="25.1969%" y="885" width="0.0414%" height="15" fill="rgb(222,97,12)" fg:x="608" fg:w="1"/><text x="25.4469%" y="895.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="25.1969%" y="869" width="0.0414%" height="15" fill="rgb(219,213,19)" fg:x="608" fg:w="1"/><text x="25.4469%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.08%)</title><rect x="25.1969%" y="949" width="0.0829%" height="15" fill="rgb(252,169,30)" fg:x="608" fg:w="2"/><text x="25.4469%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="25.2383%" y="933" width="0.0414%" height="15" fill="rgb(206,32,51)" fg:x="609" fg:w="1"/><text x="25.4883%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="25.2383%" y="917" width="0.0414%" height="15" fill="rgb(250,172,42)" fg:x="609" fg:w="1"/><text x="25.4883%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="25.2383%" y="901" width="0.0414%" height="15" fill="rgb(209,34,43)" fg:x="609" fg:w="1"/><text x="25.4883%" y="911.50"></text></g><g><title>nu_command::viewers::table::convert_data (4 samples, 0.17%)</title><rect x="25.1554%" y="965" width="0.1658%" height="15" fill="rgb(223,11,35)" fg:x="607" fg:w="4"/><text x="25.4054%" y="975.50"></text></g><g><title>nu_engine::column::get_columns (1 samples, 0.04%)</title><rect x="25.2797%" y="949" width="0.0414%" height="15" fill="rgb(251,219,26)" fg:x="610" fg:w="1"/><text x="25.5297%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.04%)</title><rect x="25.2797%" y="933" width="0.0414%" height="15" fill="rgb(231,119,3)" fg:x="610" fg:w="1"/><text x="25.5297%" y="943.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.04%)</title><rect x="25.2797%" y="917" width="0.0414%" height="15" fill="rgb(216,97,11)" fg:x="610" fg:w="1"/><text x="25.5297%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.04%)</title><rect x="25.2797%" y="901" width="0.0414%" height="15" fill="rgb(223,59,9)" fg:x="610" fg:w="1"/><text x="25.5297%" y="911.50"></text></g><g><title>&lt;T as core::slice::cmp::SliceContains&gt;::slice_contains::{{closure}} (1 samples, 0.04%)</title><rect x="25.2797%" y="885" width="0.0414%" height="15" fill="rgb(233,93,31)" fg:x="610" fg:w="1"/><text x="25.5297%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="25.3212%" y="853" width="0.0414%" height="15" fill="rgb(239,81,33)" fg:x="611" fg:w="1"/><text x="25.5712%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="25.3212%" y="837" width="0.0414%" height="15" fill="rgb(213,120,34)" fg:x="611" fg:w="1"/><text x="25.5712%" y="847.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="25.4455%" y="821" width="0.0414%" height="15" fill="rgb(243,49,53)" fg:x="614" fg:w="1"/><text x="25.6955%" y="831.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.04%)</title><rect x="25.4455%" y="805" width="0.0414%" height="15" fill="rgb(247,216,33)" fg:x="614" fg:w="1"/><text x="25.6955%" y="815.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="25.4455%" y="789" width="0.0414%" height="15" fill="rgb(226,26,14)" fg:x="614" fg:w="1"/><text x="25.6955%" y="799.50"></text></g><g><title>&lt;ansi_str::AnsiSplit as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="25.4455%" y="837" width="0.0829%" height="15" fill="rgb(215,49,53)" fg:x="614" fg:w="2"/><text x="25.6955%" y="847.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_empty (1 samples, 0.04%)</title><rect x="25.4869%" y="821" width="0.0414%" height="15" fill="rgb(245,162,40)" fg:x="615" fg:w="1"/><text x="25.7369%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.21%)</title><rect x="25.3626%" y="853" width="0.2072%" height="15" fill="rgb(229,68,17)" fg:x="612" fg:w="5"/><text x="25.6126%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="25.5284%" y="837" width="0.0414%" height="15" fill="rgb(213,182,10)" fg:x="616" fg:w="1"/><text x="25.7784%" y="847.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.04%)</title><rect x="25.5698%" y="853" width="0.0414%" height="15" fill="rgb(245,125,30)" fg:x="617" fg:w="1"/><text x="25.8198%" y="863.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.04%)</title><rect x="25.5698%" y="837" width="0.0414%" height="15" fill="rgb(232,202,2)" fg:x="617" fg:w="1"/><text x="25.8198%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.04%)</title><rect x="25.5698%" y="821" width="0.0414%" height="15" fill="rgb(237,140,51)" fg:x="617" fg:w="1"/><text x="25.8198%" y="831.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="25.5698%" y="805" width="0.0414%" height="15" fill="rgb(236,157,25)" fg:x="617" fg:w="1"/><text x="25.8198%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="25.5698%" y="789" width="0.0414%" height="15" fill="rgb(219,209,0)" fg:x="617" fg:w="1"/><text x="25.8198%" y="799.50"></text></g><g><title>papergrid::get_lines (1 samples, 0.04%)</title><rect x="25.6113%" y="853" width="0.0414%" height="15" fill="rgb(240,116,54)" fg:x="618" fg:w="1"/><text x="25.8613%" y="863.50"></text></g><g><title>&lt;str as ansi_str::AnsiStr&gt;::ansi_split (1 samples, 0.04%)</title><rect x="25.6113%" y="837" width="0.0414%" height="15" fill="rgb(216,10,36)" fg:x="618" fg:w="1"/><text x="25.8613%" y="847.50"></text></g><g><title>ansi_str::AnsiSplit::new (1 samples, 0.04%)</title><rect x="25.6113%" y="821" width="0.0414%" height="15" fill="rgb(222,72,44)" fg:x="618" fg:w="1"/><text x="25.8613%" y="831.50"></text></g><g><title>core::str::&lt;impl str&gt;::split (1 samples, 0.04%)</title><rect x="25.6113%" y="805" width="0.0414%" height="15" fill="rgb(232,159,9)" fg:x="618" fg:w="1"/><text x="25.8613%" y="815.50"></text></g><g><title>_init (1 samples, 0.04%)</title><rect x="25.6113%" y="789" width="0.0414%" height="15" fill="rgb(210,39,32)" fg:x="618" fg:w="1"/><text x="25.8613%" y="799.50"></text></g><g><title>papergrid::count_tabs (2 samples, 0.08%)</title><rect x="25.6527%" y="837" width="0.0829%" height="15" fill="rgb(216,194,45)" fg:x="619" fg:w="2"/><text x="25.9027%" y="847.50"></text></g><g><title>bytecount::count (2 samples, 0.08%)</title><rect x="25.6527%" y="821" width="0.0829%" height="15" fill="rgb(218,18,35)" fg:x="619" fg:w="2"/><text x="25.9027%" y="831.50"></text></g><g><title>bytecount::integer_simd::chunk_count (2 samples, 0.08%)</title><rect x="25.6527%" y="805" width="0.0829%" height="15" fill="rgb(207,83,51)" fg:x="619" fg:w="2"/><text x="25.9027%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="25.8185%" y="757" width="0.0414%" height="15" fill="rgb(225,63,43)" fg:x="623" fg:w="1"/><text x="26.0685%" y="767.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="25.8185%" y="773" width="0.1243%" height="15" fill="rgb(207,57,36)" fg:x="623" fg:w="3"/><text x="26.0685%" y="783.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.08%)</title><rect x="25.8599%" y="757" width="0.0829%" height="15" fill="rgb(216,99,33)" fg:x="624" fg:w="2"/><text x="26.1099%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="25.8599%" y="741" width="0.0829%" height="15" fill="rgb(225,42,16)" fg:x="624" fg:w="2"/><text x="26.1099%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.21%)</title><rect x="25.7770%" y="805" width="0.2072%" height="15" fill="rgb(220,201,45)" fg:x="622" fg:w="5"/><text x="26.0270%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.17%)</title><rect x="25.8185%" y="789" width="0.1658%" height="15" fill="rgb(225,33,4)" fg:x="623" fg:w="4"/><text x="26.0685%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="25.9428%" y="773" width="0.0414%" height="15" fill="rgb(224,33,50)" fg:x="626" fg:w="1"/><text x="26.1928%" y="783.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width::{{closure}} (1 samples, 0.04%)</title><rect x="25.9428%" y="757" width="0.0414%" height="15" fill="rgb(246,198,51)" fg:x="626" fg:w="1"/><text x="26.1928%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.04%)</title><rect x="25.9428%" y="741" width="0.0414%" height="15" fill="rgb(205,22,4)" fg:x="626" fg:w="1"/><text x="26.1928%" y="751.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width (6 samples, 0.25%)</title><rect x="25.7770%" y="821" width="0.2487%" height="15" fill="rgb(206,3,8)" fg:x="622" fg:w="6"/><text x="26.0270%" y="831.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (1 samples, 0.04%)</title><rect x="25.9843%" y="805" width="0.0414%" height="15" fill="rgb(251,23,15)" fg:x="627" fg:w="1"/><text x="26.2343%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="25.9843%" y="789" width="0.0414%" height="15" fill="rgb(252,88,28)" fg:x="627" fg:w="1"/><text x="26.2343%" y="799.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="25.9843%" y="773" width="0.0414%" height="15" fill="rgb(212,127,14)" fg:x="627" fg:w="1"/><text x="26.2343%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="25.9843%" y="757" width="0.0414%" height="15" fill="rgb(247,145,37)" fg:x="627" fg:w="1"/><text x="26.2343%" y="767.50"></text></g><g><title>papergrid::cells_content (18 samples, 0.75%)</title><rect x="25.3212%" y="869" width="0.7460%" height="15" fill="rgb(209,117,53)" fg:x="611" fg:w="18"/><text x="25.5712%" y="879.50"></text></g><g><title>papergrid::string_width_tab (10 samples, 0.41%)</title><rect x="25.6527%" y="853" width="0.4144%" height="15" fill="rgb(212,90,42)" fg:x="619" fg:w="10"/><text x="25.9027%" y="863.50"></text></g><g><title>papergrid::string_width (8 samples, 0.33%)</title><rect x="25.7356%" y="837" width="0.3315%" height="15" fill="rgb(218,164,37)" fg:x="621" fg:w="8"/><text x="25.9856%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="26.0257%" y="821" width="0.0414%" height="15" fill="rgb(246,65,34)" fg:x="628" fg:w="1"/><text x="26.2757%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="26.0257%" y="805" width="0.0414%" height="15" fill="rgb(231,100,33)" fg:x="628" fg:w="1"/><text x="26.2757%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="26.0257%" y="789" width="0.0414%" height="15" fill="rgb(228,126,14)" fg:x="628" fg:w="1"/><text x="26.2757%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="26.0257%" y="773" width="0.0414%" height="15" fill="rgb(215,173,21)" fg:x="628" fg:w="1"/><text x="26.2757%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="26.0257%" y="757" width="0.0414%" height="15" fill="rgb(210,6,40)" fg:x="628" fg:w="1"/><text x="26.2757%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="26.3572%" y="837" width="0.0414%" height="15" fill="rgb(212,48,18)" fg:x="636" fg:w="1"/><text x="26.6072%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="26.3572%" y="821" width="0.0414%" height="15" fill="rgb(230,214,11)" fg:x="636" fg:w="1"/><text x="26.6072%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.12%)</title><rect x="26.3572%" y="853" width="0.1243%" height="15" fill="rgb(254,105,39)" fg:x="636" fg:w="3"/><text x="26.6072%" y="863.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.08%)</title><rect x="26.3987%" y="837" width="0.0829%" height="15" fill="rgb(245,158,5)" fg:x="637" fg:w="2"/><text x="26.6487%" y="847.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="26.4401%" y="821" width="0.0414%" height="15" fill="rgb(249,208,11)" fg:x="638" fg:w="1"/><text x="26.6901%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.04%)</title><rect x="26.4401%" y="805" width="0.0414%" height="15" fill="rgb(210,39,28)" fg:x="638" fg:w="1"/><text x="26.6901%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.08%)</title><rect x="26.4816%" y="821" width="0.0829%" height="15" fill="rgb(211,56,53)" fg:x="639" fg:w="2"/><text x="26.7316%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (2 samples, 0.08%)</title><rect x="26.4816%" y="805" width="0.0829%" height="15" fill="rgb(226,201,30)" fg:x="639" fg:w="2"/><text x="26.7316%" y="815.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="26.5230%" y="789" width="0.0414%" height="15" fill="rgb(239,101,34)" fg:x="640" fg:w="1"/><text x="26.7730%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.12%)</title><rect x="26.4816%" y="837" width="0.1243%" height="15" fill="rgb(226,209,5)" fg:x="639" fg:w="3"/><text x="26.7316%" y="847.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="26.5644%" y="821" width="0.0414%" height="15" fill="rgb(250,105,47)" fg:x="641" fg:w="1"/><text x="26.8144%" y="831.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="26.5644%" y="805" width="0.0414%" height="15" fill="rgb(230,72,3)" fg:x="641" fg:w="1"/><text x="26.8144%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (5 samples, 0.21%)</title><rect x="26.4816%" y="853" width="0.2072%" height="15" fill="rgb(232,218,39)" fg:x="639" fg:w="5"/><text x="26.7316%" y="863.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.08%)</title><rect x="26.6059%" y="837" width="0.0829%" height="15" fill="rgb(248,166,6)" fg:x="642" fg:w="2"/><text x="26.8559%" y="847.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.08%)</title><rect x="26.6059%" y="821" width="0.0829%" height="15" fill="rgb(247,89,20)" fg:x="642" fg:w="2"/><text x="26.8559%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="26.7302%" y="741" width="0.0414%" height="15" fill="rgb(248,130,54)" fg:x="645" fg:w="1"/><text x="26.9802%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.08%)</title><rect x="26.7302%" y="757" width="0.0829%" height="15" fill="rgb(234,196,4)" fg:x="645" fg:w="2"/><text x="26.9802%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="26.7717%" y="741" width="0.0414%" height="15" fill="rgb(250,143,31)" fg:x="646" fg:w="1"/><text x="27.0217%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="26.7717%" y="725" width="0.0414%" height="15" fill="rgb(211,110,34)" fg:x="646" fg:w="1"/><text x="27.0217%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.17%)</title><rect x="26.7302%" y="773" width="0.1658%" height="15" fill="rgb(215,124,48)" fg:x="645" fg:w="4"/><text x="26.9802%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="26.8131%" y="757" width="0.0829%" height="15" fill="rgb(216,46,13)" fg:x="647" fg:w="2"/><text x="27.0631%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="26.8131%" y="741" width="0.0829%" height="15" fill="rgb(205,184,25)" fg:x="647" fg:w="2"/><text x="27.0631%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.08%)</title><rect x="26.8131%" y="725" width="0.0829%" height="15" fill="rgb(228,1,10)" fg:x="647" fg:w="2"/><text x="27.0631%" y="735.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="26.8960%" y="741" width="0.0414%" height="15" fill="rgb(213,116,27)" fg:x="649" fg:w="1"/><text x="27.1460%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.29%)</title><rect x="26.7302%" y="789" width="0.2901%" height="15" fill="rgb(241,95,50)" fg:x="645" fg:w="7"/><text x="26.9802%" y="799.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (3 samples, 0.12%)</title><rect x="26.8960%" y="773" width="0.1243%" height="15" fill="rgb(238,48,32)" fg:x="649" fg:w="3"/><text x="27.1460%" y="783.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (3 samples, 0.12%)</title><rect x="26.8960%" y="757" width="0.1243%" height="15" fill="rgb(235,113,49)" fg:x="649" fg:w="3"/><text x="27.1460%" y="767.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.08%)</title><rect x="26.9374%" y="741" width="0.0829%" height="15" fill="rgb(205,127,43)" fg:x="650" fg:w="2"/><text x="27.1874%" y="751.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.08%)</title><rect x="26.9374%" y="725" width="0.0829%" height="15" fill="rgb(250,162,2)" fg:x="650" fg:w="2"/><text x="27.1874%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.33%)</title><rect x="26.7302%" y="837" width="0.3315%" height="15" fill="rgb(220,13,41)" fg:x="645" fg:w="8"/><text x="26.9802%" y="847.50"></text></g><g><title>alloc::string::String::push_str (8 samples, 0.33%)</title><rect x="26.7302%" y="821" width="0.3315%" height="15" fill="rgb(249,221,25)" fg:x="645" fg:w="8"/><text x="26.9802%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.33%)</title><rect x="26.7302%" y="805" width="0.3315%" height="15" fill="rgb(215,208,19)" fg:x="645" fg:w="8"/><text x="26.9802%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="27.0203%" y="789" width="0.0414%" height="15" fill="rgb(236,175,2)" fg:x="652" fg:w="1"/><text x="27.2703%" y="799.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="27.0203%" y="773" width="0.0414%" height="15" fill="rgb(241,52,2)" fg:x="652" fg:w="1"/><text x="27.2703%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (3 samples, 0.12%)</title><rect x="27.1032%" y="805" width="0.1243%" height="15" fill="rgb(248,140,14)" fg:x="654" fg:w="3"/><text x="27.3532%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.12%)</title><rect x="27.1032%" y="789" width="0.1243%" height="15" fill="rgb(253,22,42)" fg:x="654" fg:w="3"/><text x="27.3532%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.08%)</title><rect x="27.1446%" y="773" width="0.0829%" height="15" fill="rgb(234,61,47)" fg:x="655" fg:w="2"/><text x="27.3946%" y="783.50"></text></g><g><title>&lt;papergrid::Symbol as core::fmt::Display&gt;::fmt (14 samples, 0.58%)</title><rect x="26.6888%" y="853" width="0.5802%" height="15" fill="rgb(208,226,15)" fg:x="644" fg:w="14"/><text x="26.9388%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (5 samples, 0.21%)</title><rect x="27.0617%" y="837" width="0.2072%" height="15" fill="rgb(217,221,4)" fg:x="653" fg:w="5"/><text x="27.3117%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.17%)</title><rect x="27.1032%" y="821" width="0.1658%" height="15" fill="rgb(212,174,34)" fg:x="654" fg:w="4"/><text x="27.3532%" y="831.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="27.2275%" y="805" width="0.0414%" height="15" fill="rgb(253,83,4)" fg:x="657" fg:w="1"/><text x="27.4775%" y="815.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="27.2275%" y="789" width="0.0414%" height="15" fill="rgb(250,195,49)" fg:x="657" fg:w="1"/><text x="27.4775%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="27.3104%" y="837" width="0.0414%" height="15" fill="rgb(241,192,25)" fg:x="659" fg:w="1"/><text x="27.5604%" y="847.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (2 samples, 0.08%)</title><rect x="27.4762%" y="821" width="0.0829%" height="15" fill="rgb(208,124,10)" fg:x="663" fg:w="2"/><text x="27.7262%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (7 samples, 0.29%)</title><rect x="27.5591%" y="821" width="0.2901%" height="15" fill="rgb(222,33,0)" fg:x="665" fg:w="7"/><text x="27.8091%" y="831.50"></text></g><g><title>papergrid::lookup_entity_value::{{closure}} (3 samples, 0.12%)</title><rect x="27.7248%" y="805" width="0.1243%" height="15" fill="rgb(234,209,28)" fg:x="669" fg:w="3"/><text x="27.9748%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.12%)</title><rect x="27.7248%" y="789" width="0.1243%" height="15" fill="rgb(224,11,23)" fg:x="669" fg:w="3"/><text x="27.9748%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.12%)</title><rect x="27.7248%" y="773" width="0.1243%" height="15" fill="rgb(232,99,1)" fg:x="669" fg:w="3"/><text x="27.9748%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.04%)</title><rect x="27.8492%" y="821" width="0.0414%" height="15" fill="rgb(237,95,45)" fg:x="672" fg:w="1"/><text x="28.0992%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.08%)</title><rect x="27.9735%" y="741" width="0.0829%" height="15" fill="rgb(208,109,11)" fg:x="675" fg:w="2"/><text x="28.2235%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="28.0149%" y="725" width="0.0414%" height="15" fill="rgb(216,190,48)" fg:x="676" fg:w="1"/><text x="28.2649%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="28.0149%" y="709" width="0.0414%" height="15" fill="rgb(251,171,36)" fg:x="676" fg:w="1"/><text x="28.2649%" y="719.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="28.0564%" y="725" width="0.0414%" height="15" fill="rgb(230,62,22)" fg:x="677" fg:w="1"/><text x="28.3064%" y="735.50"></text></g><g><title>_init (1 samples, 0.04%)</title><rect x="28.0978%" y="709" width="0.0414%" height="15" fill="rgb(225,114,35)" fg:x="678" fg:w="1"/><text x="28.3478%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.12%)</title><rect x="28.0564%" y="741" width="0.1243%" height="15" fill="rgb(215,118,42)" fg:x="677" fg:w="3"/><text x="28.3064%" y="751.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.08%)</title><rect x="28.0978%" y="725" width="0.0829%" height="15" fill="rgb(243,119,21)" fg:x="678" fg:w="2"/><text x="28.3478%" y="735.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.04%)</title><rect x="28.1392%" y="709" width="0.0414%" height="15" fill="rgb(252,177,53)" fg:x="679" fg:w="1"/><text x="28.3892%" y="719.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.04%)</title><rect x="28.1392%" y="693" width="0.0414%" height="15" fill="rgb(237,209,29)" fg:x="679" fg:w="1"/><text x="28.3892%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.04%)</title><rect x="28.2221%" y="709" width="0.0414%" height="15" fill="rgb(212,65,23)" fg:x="681" fg:w="1"/><text x="28.4721%" y="719.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.04%)</title><rect x="28.2221%" y="693" width="0.0414%" height="15" fill="rgb(230,222,46)" fg:x="681" fg:w="1"/><text x="28.4721%" y="703.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.04%)</title><rect x="28.2221%" y="677" width="0.0414%" height="15" fill="rgb(215,135,32)" fg:x="681" fg:w="1"/><text x="28.4721%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.41%)</title><rect x="27.9735%" y="773" width="0.4144%" height="15" fill="rgb(246,101,22)" fg:x="675" fg:w="10"/><text x="28.2235%" y="783.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.41%)</title><rect x="27.9735%" y="757" width="0.4144%" height="15" fill="rgb(206,107,13)" fg:x="675" fg:w="10"/><text x="28.2235%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.21%)</title><rect x="28.1807%" y="741" width="0.2072%" height="15" fill="rgb(250,100,44)" fg:x="680" fg:w="5"/><text x="28.4307%" y="751.50"></text></g><g><title>&lt;papergrid::Entity as core::hash::Hash&gt;::hash (5 samples, 0.21%)</title><rect x="28.1807%" y="725" width="0.2072%" height="15" fill="rgb(231,147,38)" fg:x="680" fg:w="5"/><text x="28.4307%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (3 samples, 0.12%)</title><rect x="28.2636%" y="709" width="0.1243%" height="15" fill="rgb(229,8,40)" fg:x="682" fg:w="3"/><text x="28.5136%" y="719.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 0.12%)</title><rect x="28.2636%" y="693" width="0.1243%" height="15" fill="rgb(221,135,30)" fg:x="682" fg:w="3"/><text x="28.5136%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (1 samples, 0.04%)</title><rect x="28.3465%" y="677" width="0.0414%" height="15" fill="rgb(249,193,18)" fg:x="684" fg:w="1"/><text x="28.5965%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="28.3879%" y="757" width="0.0414%" height="15" fill="rgb(209,133,39)" fg:x="685" fg:w="1"/><text x="28.6379%" y="767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="28.3879%" y="741" width="0.0414%" height="15" fill="rgb(232,100,14)" fg:x="685" fg:w="1"/><text x="28.6379%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (2 samples, 0.08%)</title><rect x="28.4708%" y="741" width="0.0829%" height="15" fill="rgb(224,185,1)" fg:x="687" fg:w="2"/><text x="28.7208%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (1 samples, 0.04%)</title><rect x="28.5122%" y="725" width="0.0414%" height="15" fill="rgb(223,139,8)" fg:x="688" fg:w="1"/><text x="28.7622%" y="735.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="28.5122%" y="709" width="0.0414%" height="15" fill="rgb(232,213,38)" fg:x="688" fg:w="1"/><text x="28.7622%" y="719.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="28.7609%" y="709" width="0.0414%" height="15" fill="rgb(207,94,22)" fg:x="694" fg:w="1"/><text x="29.0109%" y="719.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.17%)</title><rect x="28.8023%" y="709" width="0.1658%" height="15" fill="rgb(219,183,54)" fg:x="695" fg:w="4"/><text x="29.0523%" y="719.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit_nonzero (3 samples, 0.12%)</title><rect x="28.8438%" y="693" width="0.1243%" height="15" fill="rgb(216,185,54)" fg:x="696" fg:w="3"/><text x="29.0938%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.33%)</title><rect x="28.7194%" y="725" width="0.3315%" height="15" fill="rgb(254,217,39)" fg:x="693" fg:w="8"/><text x="28.9694%" y="735.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (2 samples, 0.08%)</title><rect x="28.9681%" y="709" width="0.0829%" height="15" fill="rgb(240,178,23)" fg:x="699" fg:w="2"/><text x="29.2181%" y="719.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.08%)</title><rect x="29.0510%" y="709" width="0.0829%" height="15" fill="rgb(218,11,47)" fg:x="701" fg:w="2"/><text x="29.3010%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.04%)</title><rect x="29.1339%" y="709" width="0.0414%" height="15" fill="rgb(218,51,51)" fg:x="703" fg:w="1"/><text x="29.3839%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="29.1339%" y="693" width="0.0414%" height="15" fill="rgb(238,126,27)" fg:x="703" fg:w="1"/><text x="29.3839%" y="703.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="29.1339%" y="677" width="0.0414%" height="15" fill="rgb(249,202,22)" fg:x="703" fg:w="1"/><text x="29.3839%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.17%)</title><rect x="29.0510%" y="725" width="0.1658%" height="15" fill="rgb(254,195,49)" fg:x="701" fg:w="4"/><text x="29.3010%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::bucket (1 samples, 0.04%)</title><rect x="29.1753%" y="709" width="0.0414%" height="15" fill="rgb(208,123,14)" fg:x="704" fg:w="1"/><text x="29.4253%" y="719.50"></text></g><g><title>papergrid::Grid::style (48 samples, 1.99%)</title><rect x="27.2690%" y="853" width="1.9892%" height="15" fill="rgb(224,200,8)" fg:x="658" fg:w="48"/><text x="27.5190%" y="863.50">p..</text></g><g><title>papergrid::lookup_entity_value (46 samples, 1.91%)</title><rect x="27.3518%" y="837" width="1.9063%" height="15" fill="rgb(217,61,36)" fg:x="660" fg:w="46"/><text x="27.6018%" y="847.50">p..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (33 samples, 1.37%)</title><rect x="27.8906%" y="821" width="1.3676%" height="15" fill="rgb(206,35,45)" fg:x="673" fg:w="33"/><text x="28.1406%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (32 samples, 1.33%)</title><rect x="27.9320%" y="805" width="1.3262%" height="15" fill="rgb(217,65,33)" fg:x="674" fg:w="32"/><text x="28.1820%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (32 samples, 1.33%)</title><rect x="27.9320%" y="789" width="1.3262%" height="15" fill="rgb(222,158,48)" fg:x="674" fg:w="32"/><text x="28.1820%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (21 samples, 0.87%)</title><rect x="28.3879%" y="773" width="0.8703%" height="15" fill="rgb(254,2,54)" fg:x="685" fg:w="21"/><text x="28.6379%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.83%)</title><rect x="28.4293%" y="757" width="0.8288%" height="15" fill="rgb(250,143,38)" fg:x="686" fg:w="20"/><text x="28.6793%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (17 samples, 0.70%)</title><rect x="28.5537%" y="741" width="0.7045%" height="15" fill="rgb(248,25,0)" fg:x="689" fg:w="17"/><text x="28.8037%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.04%)</title><rect x="29.2167%" y="725" width="0.0414%" height="15" fill="rgb(206,152,27)" fg:x="705" fg:w="1"/><text x="29.4667%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="29.2582%" y="837" width="0.0414%" height="15" fill="rgb(240,77,30)" fg:x="706" fg:w="1"/><text x="29.5082%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="29.2582%" y="821" width="0.0414%" height="15" fill="rgb(231,5,3)" fg:x="706" fg:w="1"/><text x="29.5082%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="29.2582%" y="805" width="0.0414%" height="15" fill="rgb(207,226,32)" fg:x="706" fg:w="1"/><text x="29.5082%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="29.2996%" y="837" width="0.0414%" height="15" fill="rgb(222,207,47)" fg:x="707" fg:w="1"/><text x="29.5496%" y="847.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="29.2996%" y="821" width="0.0414%" height="15" fill="rgb(229,115,45)" fg:x="707" fg:w="1"/><text x="29.5496%" y="831.50"></text></g><g><title>papergrid::print_text_formated (2 samples, 0.08%)</title><rect x="29.3411%" y="821" width="0.0829%" height="15" fill="rgb(224,191,6)" fg:x="708" fg:w="2"/><text x="29.5911%" y="831.50"></text></g><g><title>papergrid::print_text (2 samples, 0.08%)</title><rect x="29.3411%" y="805" width="0.0829%" height="15" fill="rgb(230,227,24)" fg:x="708" fg:w="2"/><text x="29.5911%" y="815.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="29.3411%" y="789" width="0.0829%" height="15" fill="rgb(228,80,19)" fg:x="708" fg:w="2"/><text x="29.5911%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="29.3825%" y="773" width="0.0414%" height="15" fill="rgb(247,229,0)" fg:x="709" fg:w="1"/><text x="29.6325%" y="783.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.04%)</title><rect x="29.3825%" y="757" width="0.0414%" height="15" fill="rgb(237,194,15)" fg:x="709" fg:w="1"/><text x="29.6325%" y="767.50"></text></g><g><title>core::char::convert::from_u32_unchecked (1 samples, 0.04%)</title><rect x="29.3825%" y="741" width="0.0414%" height="15" fill="rgb(219,203,20)" fg:x="709" fg:w="1"/><text x="29.6325%" y="751.50"></text></g><g><title>papergrid::build_format_line (3 samples, 0.12%)</title><rect x="29.3411%" y="837" width="0.1243%" height="15" fill="rgb(234,128,8)" fg:x="708" fg:w="3"/><text x="29.5911%" y="847.50"></text></g><g><title>papergrid::repeat_char (1 samples, 0.04%)</title><rect x="29.4240%" y="821" width="0.0414%" height="15" fill="rgb(248,202,8)" fg:x="710" fg:w="1"/><text x="29.6740%" y="831.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.04%)</title><rect x="29.4240%" y="805" width="0.0414%" height="15" fill="rgb(206,104,37)" fg:x="710" fg:w="1"/><text x="29.6740%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.04%)</title><rect x="29.4240%" y="789" width="0.0414%" height="15" fill="rgb(223,8,27)" fg:x="710" fg:w="1"/><text x="29.6740%" y="799.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="29.4240%" y="773" width="0.0414%" height="15" fill="rgb(216,217,28)" fg:x="710" fg:w="1"/><text x="29.6740%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.04%)</title><rect x="29.8384%" y="773" width="0.0414%" height="15" fill="rgb(249,199,1)" fg:x="720" fg:w="1"/><text x="30.0884%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="29.8798%" y="773" width="0.0414%" height="15" fill="rgb(240,85,17)" fg:x="721" fg:w="1"/><text x="30.1298%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="29.8798%" y="757" width="0.0414%" height="15" fill="rgb(206,108,45)" fg:x="721" fg:w="1"/><text x="30.1298%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="29.8798%" y="741" width="0.0414%" height="15" fill="rgb(245,210,41)" fg:x="721" fg:w="1"/><text x="30.1298%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.33%)</title><rect x="29.6312%" y="789" width="0.3315%" height="15" fill="rgb(206,13,37)" fg:x="715" fg:w="8"/><text x="29.8812%" y="799.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="29.9213%" y="773" width="0.0414%" height="15" fill="rgb(250,61,18)" fg:x="722" fg:w="1"/><text x="30.1713%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (10 samples, 0.41%)</title><rect x="29.5897%" y="821" width="0.4144%" height="15" fill="rgb(235,172,48)" fg:x="714" fg:w="10"/><text x="29.8397%" y="831.50"></text></g><g><title>alloc::string::String::push (9 samples, 0.37%)</title><rect x="29.6312%" y="805" width="0.3730%" height="15" fill="rgb(249,201,17)" fg:x="715" fg:w="9"/><text x="29.8812%" y="815.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.04%)</title><rect x="29.9627%" y="789" width="0.0414%" height="15" fill="rgb(219,208,6)" fg:x="723" fg:w="1"/><text x="30.2127%" y="799.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.04%)</title><rect x="29.9627%" y="773" width="0.0414%" height="15" fill="rgb(248,31,23)" fg:x="723" fg:w="1"/><text x="30.2127%" y="783.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_char (1 samples, 0.04%)</title><rect x="30.0041%" y="821" width="0.0414%" height="15" fill="rgb(245,15,42)" fg:x="724" fg:w="1"/><text x="30.2541%" y="831.50"></text></g><g><title>&lt;usize as core::iter::range::Step&gt;::forward_unchecked (1 samples, 0.04%)</title><rect x="30.1285%" y="789" width="0.0414%" height="15" fill="rgb(222,217,39)" fg:x="727" fg:w="1"/><text x="30.3785%" y="799.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for usize&gt;::clone (1 samples, 0.04%)</title><rect x="30.1699%" y="789" width="0.0414%" height="15" fill="rgb(210,219,27)" fg:x="728" fg:w="1"/><text x="30.4199%" y="799.50"></text></g><g><title>core::ptr::read (2 samples, 0.08%)</title><rect x="30.2528%" y="773" width="0.0829%" height="15" fill="rgb(252,166,36)" fg:x="730" fg:w="2"/><text x="30.5028%" y="783.50"></text></g><g><title>papergrid::build_cell_line (27 samples, 1.12%)</title><rect x="29.2582%" y="853" width="1.1189%" height="15" fill="rgb(245,132,34)" fg:x="706" fg:w="27"/><text x="29.5082%" y="863.50"></text></g><g><title>papergrid::repeat_char (22 samples, 0.91%)</title><rect x="29.4654%" y="837" width="0.9117%" height="15" fill="rgb(236,54,3)" fg:x="711" fg:w="22"/><text x="29.7154%" y="847.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (8 samples, 0.33%)</title><rect x="30.0456%" y="821" width="0.3315%" height="15" fill="rgb(241,173,43)" fg:x="725" fg:w="8"/><text x="30.2956%" y="831.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.29%)</title><rect x="30.0870%" y="805" width="0.2901%" height="15" fill="rgb(215,190,9)" fg:x="726" fg:w="7"/><text x="30.3370%" y="815.50"></text></g><g><title>core::mem::replace (4 samples, 0.17%)</title><rect x="30.2114%" y="789" width="0.1658%" height="15" fill="rgb(242,101,16)" fg:x="729" fg:w="4"/><text x="30.4614%" y="799.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="30.3357%" y="773" width="0.0414%" height="15" fill="rgb(223,190,21)" fg:x="732" fg:w="1"/><text x="30.5857%" y="783.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (3 samples, 0.12%)</title><rect x="30.4600%" y="837" width="0.1243%" height="15" fill="rgb(215,228,25)" fg:x="735" fg:w="3"/><text x="30.7100%" y="847.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="30.5015%" y="821" width="0.0829%" height="15" fill="rgb(225,36,22)" fg:x="736" fg:w="2"/><text x="30.7515%" y="831.50"></text></g><g><title>papergrid::grid_cell_width (6 samples, 0.25%)</title><rect x="30.3771%" y="853" width="0.2487%" height="15" fill="rgb(251,106,46)" fg:x="733" fg:w="6"/><text x="30.6271%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="30.5843%" y="837" width="0.0414%" height="15" fill="rgb(208,90,1)" fg:x="738" fg:w="1"/><text x="30.8343%" y="847.50"></text></g><g><title>&lt;nu_protocol::value::stream::RawStream as core::iter::traits::iterator::Iterator&gt;::next (135 samples, 5.59%)</title><rect x="25.0725%" y="1013" width="5.5947%" height="15" fill="rgb(243,10,4)" fg:x="605" fg:w="135"/><text x="25.3225%" y="1023.50">&lt;nu_pro..</text></g><g><title>&lt;alloc::boxed::Box&lt;I,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (135 samples, 5.59%)</title><rect x="25.0725%" y="997" width="5.5947%" height="15" fill="rgb(212,137,27)" fg:x="605" fg:w="135"/><text x="25.3225%" y="1007.50">&lt;alloc:..</text></g><g><title>&lt;nu_command::viewers::table::PagingTableCreator as core::iter::traits::iterator::Iterator&gt;::next (135 samples, 5.59%)</title><rect x="25.0725%" y="981" width="5.5947%" height="15" fill="rgb(231,220,49)" fg:x="605" fg:w="135"/><text x="25.3225%" y="991.50">&lt;nu_com..</text></g><g><title>nu_command::viewers::table::print_table (129 samples, 5.35%)</title><rect x="25.3212%" y="965" width="5.3460%" height="15" fill="rgb(237,96,20)" fg:x="611" fg:w="129"/><text x="25.5712%" y="975.50">nu_comm..</text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (129 samples, 5.35%)</title><rect x="25.3212%" y="949" width="5.3460%" height="15" fill="rgb(239,229,30)" fg:x="611" fg:w="129"/><text x="25.5712%" y="959.50">&lt;T as a..</text></g><g><title>&lt;tabled::table::Table as core::fmt::Display&gt;::fmt (129 samples, 5.35%)</title><rect x="25.3212%" y="933" width="5.3460%" height="15" fill="rgb(219,65,33)" fg:x="611" fg:w="129"/><text x="25.5712%" y="943.50">&lt;tabled..</text></g><g><title>core::fmt::Formatter::write_fmt (129 samples, 5.35%)</title><rect x="25.3212%" y="917" width="5.3460%" height="15" fill="rgb(243,134,7)" fg:x="611" fg:w="129"/><text x="25.5712%" y="927.50">core::f..</text></g><g><title>core::fmt::write (129 samples, 5.35%)</title><rect x="25.3212%" y="901" width="5.3460%" height="15" fill="rgb(216,177,54)" fg:x="611" fg:w="129"/><text x="25.5712%" y="911.50">core::f..</text></g><g><title>&lt;papergrid::Grid as core::fmt::Display&gt;::fmt (129 samples, 5.35%)</title><rect x="25.3212%" y="885" width="5.3460%" height="15" fill="rgb(211,160,20)" fg:x="611" fg:w="129"/><text x="25.5712%" y="895.50">&lt;paperg..</text></g><g><title>papergrid::print_grid (111 samples, 4.60%)</title><rect x="26.0671%" y="869" width="4.6001%" height="15" fill="rgb(239,85,39)" fg:x="629" fg:w="111"/><text x="26.3171%" y="879.50">paper..</text></g><g><title>papergrid::is_cell_visible (1 samples, 0.04%)</title><rect x="30.6258%" y="853" width="0.0414%" height="15" fill="rgb(232,125,22)" fg:x="739" fg:w="1"/><text x="30.8758%" y="863.50"></text></g><g><title>papergrid::is_cell_overriden (1 samples, 0.04%)</title><rect x="30.6258%" y="837" width="0.0414%" height="15" fill="rgb(244,57,34)" fg:x="739" fg:w="1"/><text x="30.8758%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::iter (1 samples, 0.04%)</title><rect x="30.6258%" y="821" width="0.0414%" height="15" fill="rgb(214,203,32)" fg:x="739" fg:w="1"/><text x="30.8758%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="30.6258%" y="805" width="0.0414%" height="15" fill="rgb(207,58,43)" fg:x="739" fg:w="1"/><text x="30.8758%" y="815.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.04%)</title><rect x="30.6672%" y="933" width="0.0414%" height="15" fill="rgb(215,193,15)" fg:x="740" fg:w="1"/><text x="30.9172%" y="943.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="30.6672%" y="917" width="0.0414%" height="15" fill="rgb(232,15,44)" fg:x="740" fg:w="1"/><text x="30.9172%" y="927.50"></text></g><g><title>vte::Parser::advance (1 samples, 0.04%)</title><rect x="30.6672%" y="901" width="0.0414%" height="15" fill="rgb(212,3,48)" fg:x="740" fg:w="1"/><text x="30.9172%" y="911.50"></text></g><g><title>vte::Parser::perform_state_change (1 samples, 0.04%)</title><rect x="30.6672%" y="885" width="0.0414%" height="15" fill="rgb(218,128,7)" fg:x="740" fg:w="1"/><text x="30.9172%" y="895.50"></text></g><g><title>vte::Parser::perform_action (1 samples, 0.04%)</title><rect x="30.6672%" y="869" width="0.0414%" height="15" fill="rgb(226,216,39)" fg:x="740" fg:w="1"/><text x="30.9172%" y="879.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::print (1 samples, 0.04%)</title><rect x="30.6672%" y="853" width="0.0414%" height="15" fill="rgb(243,47,51)" fg:x="740" fg:w="1"/><text x="30.9172%" y="863.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_fmt (1 samples, 0.04%)</title><rect x="30.6672%" y="837" width="0.0414%" height="15" fill="rgb(241,183,40)" fg:x="740" fg:w="1"/><text x="30.9172%" y="847.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.04%)</title><rect x="30.6672%" y="821" width="0.0414%" height="15" fill="rgb(231,217,32)" fg:x="740" fg:w="1"/><text x="30.9172%" y="831.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="30.6672%" y="805" width="0.0414%" height="15" fill="rgb(229,61,38)" fg:x="740" fg:w="1"/><text x="30.9172%" y="815.50"></text></g><g><title>core::fmt::Write::write_char (1 samples, 0.04%)</title><rect x="30.6672%" y="789" width="0.0414%" height="15" fill="rgb(225,210,5)" fg:x="740" fg:w="1"/><text x="30.9172%" y="799.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="30.6672%" y="773" width="0.0414%" height="15" fill="rgb(231,79,45)" fg:x="740" fg:w="1"/><text x="30.9172%" y="783.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="30.6672%" y="757" width="0.0414%" height="15" fill="rgb(224,100,7)" fg:x="740" fg:w="1"/><text x="30.9172%" y="767.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="30.6672%" y="741" width="0.0414%" height="15" fill="rgb(241,198,18)" fg:x="740" fg:w="1"/><text x="30.9172%" y="751.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (1 samples, 0.04%)</title><rect x="30.6672%" y="725" width="0.0414%" height="15" fill="rgb(252,97,53)" fg:x="740" fg:w="1"/><text x="30.9172%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.04%)</title><rect x="30.6672%" y="709" width="0.0414%" height="15" fill="rgb(220,88,7)" fg:x="740" fg:w="1"/><text x="30.9172%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="30.6672%" y="693" width="0.0414%" height="15" fill="rgb(213,176,14)" fg:x="740" fg:w="1"/><text x="30.9172%" y="703.50"></text></g><g><title>&lt;papergrid::Grid as core::fmt::Display&gt;::fmt (2 samples, 0.08%)</title><rect x="30.6672%" y="1013" width="0.0829%" height="15" fill="rgb(246,73,7)" fg:x="740" fg:w="2"/><text x="30.9172%" y="1023.50"></text></g><g><title>papergrid::cells_content (2 samples, 0.08%)</title><rect x="30.6672%" y="997" width="0.0829%" height="15" fill="rgb(245,64,36)" fg:x="740" fg:w="2"/><text x="30.9172%" y="1007.50"></text></g><g><title>papergrid::string_width_tab (2 samples, 0.08%)</title><rect x="30.6672%" y="981" width="0.0829%" height="15" fill="rgb(245,80,10)" fg:x="740" fg:w="2"/><text x="30.9172%" y="991.50"></text></g><g><title>papergrid::string_width (2 samples, 0.08%)</title><rect x="30.6672%" y="965" width="0.0829%" height="15" fill="rgb(232,107,50)" fg:x="740" fg:w="2"/><text x="30.9172%" y="975.50"></text></g><g><title>strip_ansi_escapes::strip (2 samples, 0.08%)</title><rect x="30.6672%" y="949" width="0.0829%" height="15" fill="rgb(253,3,0)" fg:x="740" fg:w="2"/><text x="30.9172%" y="959.50"></text></g><g><title>strip_ansi_escapes::Writer&lt;W&gt;::new (1 samples, 0.04%)</title><rect x="30.7087%" y="933" width="0.0414%" height="15" fill="rgb(212,99,53)" fg:x="741" fg:w="1"/><text x="30.9587%" y="943.50"></text></g><g><title>std::io::buffered::linewriter::LineWriter&lt;W&gt;::new (1 samples, 0.04%)</title><rect x="30.7087%" y="917" width="0.0414%" height="15" fill="rgb(249,111,54)" fg:x="741" fg:w="1"/><text x="30.9587%" y="927.50"></text></g><g><title>std::io::buffered::linewriter::LineWriter&lt;W&gt;::with_capacity (1 samples, 0.04%)</title><rect x="30.7087%" y="901" width="0.0414%" height="15" fill="rgb(249,55,30)" fg:x="741" fg:w="1"/><text x="30.9587%" y="911.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::with_capacity (1 samples, 0.04%)</title><rect x="30.7087%" y="885" width="0.0414%" height="15" fill="rgb(237,47,42)" fg:x="741" fg:w="1"/><text x="30.9587%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.04%)</title><rect x="30.7087%" y="869" width="0.0414%" height="15" fill="rgb(211,20,18)" fg:x="741" fg:w="1"/><text x="30.9587%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="30.7087%" y="853" width="0.0414%" height="15" fill="rgb(231,203,46)" fg:x="741" fg:w="1"/><text x="30.9587%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="30.7087%" y="837" width="0.0414%" height="15" fill="rgb(237,142,3)" fg:x="741" fg:w="1"/><text x="30.9587%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="30.7087%" y="821" width="0.0414%" height="15" fill="rgb(241,107,1)" fg:x="741" fg:w="1"/><text x="30.9587%" y="831.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_fmt (1 samples, 0.04%)</title><rect x="30.7501%" y="1013" width="0.0414%" height="15" fill="rgb(229,83,13)" fg:x="742" fg:w="1"/><text x="31.0001%" y="1023.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.08%)</title><rect x="30.7915%" y="1013" width="0.0829%" height="15" fill="rgb(241,91,40)" fg:x="743" fg:w="2"/><text x="31.0415%" y="1023.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width::{{closure}} (1 samples, 0.04%)</title><rect x="30.8744%" y="1013" width="0.0414%" height="15" fill="rgb(225,3,45)" fg:x="745" fg:w="1"/><text x="31.1244%" y="1023.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.08%)</title><rect x="30.9159%" y="1013" width="0.0829%" height="15" fill="rgb(244,223,14)" fg:x="746" fg:w="2"/><text x="31.1659%" y="1023.50"></text></g><g><title>&lt;tabled::table::Table as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="30.9988%" y="1013" width="0.0414%" height="15" fill="rgb(224,124,37)" fg:x="748" fg:w="1"/><text x="31.2488%" y="1023.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.04%)</title><rect x="30.9988%" y="997" width="0.0414%" height="15" fill="rgb(251,171,30)" fg:x="748" fg:w="1"/><text x="31.2488%" y="1007.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="30.9988%" y="981" width="0.0414%" height="15" fill="rgb(236,46,54)" fg:x="748" fg:w="1"/><text x="31.2488%" y="991.50"></text></g><g><title>&lt;papergrid::Grid as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="30.9988%" y="965" width="0.0414%" height="15" fill="rgb(245,213,5)" fg:x="748" fg:w="1"/><text x="31.2488%" y="975.50"></text></g><g><title>papergrid::cells_content (1 samples, 0.04%)</title><rect x="30.9988%" y="949" width="0.0414%" height="15" fill="rgb(230,144,27)" fg:x="748" fg:w="1"/><text x="31.2488%" y="959.50"></text></g><g><title>papergrid::string_width_tab (1 samples, 0.04%)</title><rect x="30.9988%" y="933" width="0.0414%" height="15" fill="rgb(220,86,6)" fg:x="748" fg:w="1"/><text x="31.2488%" y="943.50"></text></g><g><title>papergrid::string_width (1 samples, 0.04%)</title><rect x="30.9988%" y="917" width="0.0414%" height="15" fill="rgb(240,20,13)" fg:x="748" fg:w="1"/><text x="31.2488%" y="927.50"></text></g><g><title>strip_ansi_escapes::strip (1 samples, 0.04%)</title><rect x="30.9988%" y="901" width="0.0414%" height="15" fill="rgb(217,89,34)" fg:x="748" fg:w="1"/><text x="31.2488%" y="911.50"></text></g><g><title>strip_ansi_escapes::Writer&lt;W&gt;::new (1 samples, 0.04%)</title><rect x="30.9988%" y="885" width="0.0414%" height="15" fill="rgb(229,13,5)" fg:x="748" fg:w="1"/><text x="31.2488%" y="895.50"></text></g><g><title>std::io::buffered::linewriter::LineWriter&lt;W&gt;::new (1 samples, 0.04%)</title><rect x="30.9988%" y="869" width="0.0414%" height="15" fill="rgb(244,67,35)" fg:x="748" fg:w="1"/><text x="31.2488%" y="879.50"></text></g><g><title>std::io::buffered::linewriter::LineWriter&lt;W&gt;::with_capacity (1 samples, 0.04%)</title><rect x="30.9988%" y="853" width="0.0414%" height="15" fill="rgb(221,40,2)" fg:x="748" fg:w="1"/><text x="31.2488%" y="863.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::with_capacity (1 samples, 0.04%)</title><rect x="30.9988%" y="837" width="0.0414%" height="15" fill="rgb(237,157,21)" fg:x="748" fg:w="1"/><text x="31.2488%" y="847.50"></text></g><g><title>&lt;tabled::width::Wrap&lt;W,P&gt; as tabled::table::TableOption&gt;::change (1 samples, 0.04%)</title><rect x="31.0402%" y="1013" width="0.0414%" height="15" fill="rgb(222,94,11)" fg:x="749" fg:w="1"/><text x="31.2902%" y="1023.50"></text></g><g><title>papergrid::Grid::total_width (1 samples, 0.04%)</title><rect x="31.0402%" y="997" width="0.0414%" height="15" fill="rgb(249,113,6)" fg:x="749" fg:w="1"/><text x="31.2902%" y="1007.50"></text></g><g><title>papergrid::cells_content (1 samples, 0.04%)</title><rect x="31.0402%" y="981" width="0.0414%" height="15" fill="rgb(238,137,36)" fg:x="749" fg:w="1"/><text x="31.2902%" y="991.50"></text></g><g><title>papergrid::string_width_tab (1 samples, 0.04%)</title><rect x="31.0402%" y="965" width="0.0414%" height="15" fill="rgb(210,102,26)" fg:x="749" fg:w="1"/><text x="31.2902%" y="975.50"></text></g><g><title>papergrid::string_width (1 samples, 0.04%)</title><rect x="31.0402%" y="949" width="0.0414%" height="15" fill="rgb(218,30,30)" fg:x="749" fg:w="1"/><text x="31.2902%" y="959.50"></text></g><g><title>strip_ansi_escapes::strip (1 samples, 0.04%)</title><rect x="31.0402%" y="933" width="0.0414%" height="15" fill="rgb(214,67,26)" fg:x="749" fg:w="1"/><text x="31.2902%" y="943.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.04%)</title><rect x="31.0402%" y="917" width="0.0414%" height="15" fill="rgb(251,9,53)" fg:x="749" fg:w="1"/><text x="31.2902%" y="927.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="31.0402%" y="901" width="0.0414%" height="15" fill="rgb(228,204,25)" fg:x="749" fg:w="1"/><text x="31.2902%" y="911.50"></text></g><g><title>vte::Parser::advance (1 samples, 0.04%)</title><rect x="31.0402%" y="885" width="0.0414%" height="15" fill="rgb(207,153,8)" fg:x="749" fg:w="1"/><text x="31.2902%" y="895.50"></text></g><g><title>vte::Parser::perform_state_change (1 samples, 0.04%)</title><rect x="31.0402%" y="869" width="0.0414%" height="15" fill="rgb(242,9,16)" fg:x="749" fg:w="1"/><text x="31.2902%" y="879.50"></text></g><g><title>vte::Parser::perform_action (1 samples, 0.04%)</title><rect x="31.0402%" y="853" width="0.0414%" height="15" fill="rgb(217,211,10)" fg:x="749" fg:w="1"/><text x="31.2902%" y="863.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::print (1 samples, 0.04%)</title><rect x="31.0402%" y="837" width="0.0414%" height="15" fill="rgb(219,228,52)" fg:x="749" fg:w="1"/><text x="31.2902%" y="847.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_fmt (1 samples, 0.04%)</title><rect x="31.0402%" y="821" width="0.0414%" height="15" fill="rgb(231,92,29)" fg:x="749" fg:w="1"/><text x="31.2902%" y="831.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.04%)</title><rect x="31.0402%" y="805" width="0.0414%" height="15" fill="rgb(232,8,23)" fg:x="749" fg:w="1"/><text x="31.2902%" y="815.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="31.0402%" y="789" width="0.0414%" height="15" fill="rgb(216,211,34)" fg:x="749" fg:w="1"/><text x="31.2902%" y="799.50"></text></g><g><title>core::fmt::Write::write_char (1 samples, 0.04%)</title><rect x="31.0402%" y="773" width="0.0414%" height="15" fill="rgb(236,151,0)" fg:x="749" fg:w="1"/><text x="31.2902%" y="783.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="31.0402%" y="757" width="0.0414%" height="15" fill="rgb(209,168,3)" fg:x="749" fg:w="1"/><text x="31.2902%" y="767.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="31.0402%" y="741" width="0.0414%" height="15" fill="rgb(208,129,28)" fg:x="749" fg:w="1"/><text x="31.2902%" y="751.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="31.0402%" y="725" width="0.0414%" height="15" fill="rgb(229,78,22)" fg:x="749" fg:w="1"/><text x="31.2902%" y="735.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::spare_capacity (1 samples, 0.04%)</title><rect x="31.0402%" y="709" width="0.0414%" height="15" fill="rgb(228,187,13)" fg:x="749" fg:w="1"/><text x="31.2902%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (1 samples, 0.04%)</title><rect x="31.0402%" y="693" width="0.0414%" height="15" fill="rgb(240,119,24)" fg:x="749" fg:w="1"/><text x="31.2902%" y="703.50"></text></g><g><title>&lt;tabled::width::Wrap&lt;W&gt; as tabled::table::CellOption&gt;::change_cell (1 samples, 0.04%)</title><rect x="31.0816%" y="1013" width="0.0414%" height="15" fill="rgb(209,194,42)" fg:x="750" fg:w="1"/><text x="31.3316%" y="1023.50"></text></g><g><title>papergrid::string_width_multiline (1 samples, 0.04%)</title><rect x="31.0816%" y="997" width="0.0414%" height="15" fill="rgb(247,200,46)" fg:x="750" fg:w="1"/><text x="31.3316%" y="1007.50"></text></g><g><title>strip_ansi_escapes::strip (1 samples, 0.04%)</title><rect x="31.0816%" y="981" width="0.0414%" height="15" fill="rgb(218,76,16)" fg:x="750" fg:w="1"/><text x="31.3316%" y="991.50"></text></g><g><title>strip_ansi_escapes::Writer&lt;W&gt;::new (1 samples, 0.04%)</title><rect x="31.0816%" y="965" width="0.0414%" height="15" fill="rgb(225,21,48)" fg:x="750" fg:w="1"/><text x="31.3316%" y="975.50"></text></g><g><title>vte::Parser::new (1 samples, 0.04%)</title><rect x="31.0816%" y="949" width="0.0414%" height="15" fill="rgb(239,223,50)" fg:x="750" fg:w="1"/><text x="31.3316%" y="959.50"></text></g><g><title>&lt;vte::Parser as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="31.0816%" y="933" width="0.0414%" height="15" fill="rgb(244,45,21)" fg:x="750" fg:w="1"/><text x="31.3316%" y="943.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: _]&gt;::default (1 samples, 0.04%)</title><rect x="31.0816%" y="917" width="0.0414%" height="15" fill="rgb(232,33,43)" fg:x="750" fg:w="1"/><text x="31.3316%" y="927.50"></text></g><g><title>core::tuple::&lt;impl core::default::Default for (A,B)&gt;::default (1 samples, 0.04%)</title><rect x="31.0816%" y="901" width="0.0414%" height="15" fill="rgb(209,8,3)" fg:x="750" fg:w="1"/><text x="31.3316%" y="911.50"></text></g><g><title>&lt;u8 as core::default::Default&gt;::default (2 samples, 0.08%)</title><rect x="31.1231%" y="1013" width="0.0829%" height="15" fill="rgb(214,25,53)" fg:x="751" fg:w="2"/><text x="31.3731%" y="1023.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (12 samples, 0.50%)</title><rect x="31.2060%" y="1013" width="0.4973%" height="15" fill="rgb(254,186,54)" fg:x="753" fg:w="12"/><text x="31.4560%" y="1023.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4 samples, 0.17%)</title><rect x="31.7033%" y="1013" width="0.1658%" height="15" fill="rgb(208,174,49)" fg:x="765" fg:w="4"/><text x="31.9533%" y="1023.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="31.8690%" y="1013" width="0.0414%" height="15" fill="rgb(233,191,51)" fg:x="769" fg:w="1"/><text x="32.1190%" y="1023.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="31.9105%" y="1013" width="0.0829%" height="15" fill="rgb(222,134,10)" fg:x="770" fg:w="2"/><text x="32.1605%" y="1023.50"></text></g><g><title>__rust_probestack (2 samples, 0.08%)</title><rect x="31.9934%" y="1013" width="0.0829%" height="15" fill="rgb(230,226,20)" fg:x="772" fg:w="2"/><text x="32.2434%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="32.0763%" y="1013" width="0.0414%" height="15" fill="rgb(251,111,25)" fg:x="774" fg:w="1"/><text x="32.3263%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.08%)</title><rect x="32.1177%" y="1013" width="0.0829%" height="15" fill="rgb(224,40,46)" fg:x="775" fg:w="2"/><text x="32.3677%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.12%)</title><rect x="32.2006%" y="1013" width="0.1243%" height="15" fill="rgb(236,108,47)" fg:x="777" fg:w="3"/><text x="32.4506%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="32.3249%" y="1013" width="0.0414%" height="15" fill="rgb(234,93,0)" fg:x="780" fg:w="1"/><text x="32.5749%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="32.3663%" y="1013" width="0.0414%" height="15" fill="rgb(224,213,32)" fg:x="781" fg:w="1"/><text x="32.6163%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (2 samples, 0.08%)</title><rect x="32.4078%" y="1013" width="0.0829%" height="15" fill="rgb(251,11,48)" fg:x="782" fg:w="2"/><text x="32.6578%" y="1023.50"></text></g><g><title>alloc::raw_vec::alloc_guard (2 samples, 0.08%)</title><rect x="32.4907%" y="1013" width="0.0829%" height="15" fill="rgb(236,173,5)" fg:x="784" fg:w="2"/><text x="32.7407%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="32.5736%" y="1013" width="0.0414%" height="15" fill="rgb(230,95,12)" fg:x="786" fg:w="1"/><text x="32.8236%" y="1023.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.12%)</title><rect x="32.6150%" y="1013" width="0.1243%" height="15" fill="rgb(232,209,1)" fg:x="787" fg:w="3"/><text x="32.8650%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="32.6979%" y="997" width="0.0414%" height="15" fill="rgb(232,6,1)" fg:x="789" fg:w="1"/><text x="32.9479%" y="1007.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="32.6979%" y="981" width="0.0414%" height="15" fill="rgb(210,224,50)" fg:x="789" fg:w="1"/><text x="32.9479%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="32.6979%" y="965" width="0.0414%" height="15" fill="rgb(228,127,35)" fg:x="789" fg:w="1"/><text x="32.9479%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="32.6979%" y="949" width="0.0414%" height="15" fill="rgb(245,102,45)" fg:x="789" fg:w="1"/><text x="32.9479%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="32.6979%" y="933" width="0.0414%" height="15" fill="rgb(214,1,49)" fg:x="789" fg:w="1"/><text x="32.9479%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="32.6979%" y="917" width="0.0414%" height="15" fill="rgb(226,163,40)" fg:x="789" fg:w="1"/><text x="32.9479%" y="927.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="32.6979%" y="901" width="0.0414%" height="15" fill="rgb(239,212,28)" fg:x="789" fg:w="1"/><text x="32.9479%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="32.6979%" y="885" width="0.0414%" height="15" fill="rgb(220,20,13)" fg:x="789" fg:w="1"/><text x="32.9479%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="32.6979%" y="869" width="0.0414%" height="15" fill="rgb(210,164,35)" fg:x="789" fg:w="1"/><text x="32.9479%" y="879.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="32.6979%" y="853" width="0.0414%" height="15" fill="rgb(248,109,41)" fg:x="789" fg:w="1"/><text x="32.9479%" y="863.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="32.6979%" y="837" width="0.0414%" height="15" fill="rgb(238,23,50)" fg:x="789" fg:w="1"/><text x="32.9479%" y="847.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="32.6979%" y="821" width="0.0414%" height="15" fill="rgb(211,48,49)" fg:x="789" fg:w="1"/><text x="32.9479%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="32.6979%" y="805" width="0.0414%" height="15" fill="rgb(223,36,21)" fg:x="789" fg:w="1"/><text x="32.9479%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="32.6979%" y="789" width="0.0414%" height="15" fill="rgb(207,123,46)" fg:x="789" fg:w="1"/><text x="32.9479%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="32.6979%" y="773" width="0.0414%" height="15" fill="rgb(240,218,32)" fg:x="789" fg:w="1"/><text x="32.9479%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="32.6979%" y="757" width="0.0414%" height="15" fill="rgb(252,5,43)" fg:x="789" fg:w="1"/><text x="32.9479%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="32.6979%" y="741" width="0.0414%" height="15" fill="rgb(252,84,19)" fg:x="789" fg:w="1"/><text x="32.9479%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="32.6979%" y="725" width="0.0414%" height="15" fill="rgb(243,152,39)" fg:x="789" fg:w="1"/><text x="32.9479%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="32.6979%" y="709" width="0.0414%" height="15" fill="rgb(234,160,15)" fg:x="789" fg:w="1"/><text x="32.9479%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="32.6979%" y="693" width="0.0414%" height="15" fill="rgb(237,34,20)" fg:x="789" fg:w="1"/><text x="32.9479%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="32.6979%" y="677" width="0.0414%" height="15" fill="rgb(229,97,13)" fg:x="789" fg:w="1"/><text x="32.9479%" y="687.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.04%)</title><rect x="32.7393%" y="1013" width="0.0414%" height="15" fill="rgb(234,71,50)" fg:x="790" fg:w="1"/><text x="32.9893%" y="1023.50"></text></g><g><title>alloc::str::join_generic_copy::{{closure}} (2 samples, 0.08%)</title><rect x="32.7808%" y="1013" width="0.0829%" height="15" fill="rgb(253,155,4)" fg:x="791" fg:w="2"/><text x="33.0308%" y="1023.50"></text></g><g><title>alloc::string::String::new (1 samples, 0.04%)</title><rect x="32.8637%" y="1013" width="0.0414%" height="15" fill="rgb(222,185,37)" fg:x="793" fg:w="1"/><text x="33.1137%" y="1023.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.04%)</title><rect x="32.9051%" y="1013" width="0.0414%" height="15" fill="rgb(251,177,13)" fg:x="794" fg:w="1"/><text x="33.1551%" y="1023.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="32.9465%" y="1013" width="0.0414%" height="15" fill="rgb(250,179,40)" fg:x="795" fg:w="1"/><text x="33.1965%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.08%)</title><rect x="32.9880%" y="1013" width="0.0829%" height="15" fill="rgb(242,44,2)" fg:x="796" fg:w="2"/><text x="33.2380%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (3 samples, 0.12%)</title><rect x="33.0709%" y="1013" width="0.1243%" height="15" fill="rgb(216,177,13)" fg:x="798" fg:w="3"/><text x="33.3209%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="33.1952%" y="1013" width="0.0414%" height="15" fill="rgb(216,106,43)" fg:x="801" fg:w="1"/><text x="33.4452%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.08%)</title><rect x="33.2366%" y="1013" width="0.0829%" height="15" fill="rgb(216,183,2)" fg:x="802" fg:w="2"/><text x="33.4866%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.04%)</title><rect x="33.3195%" y="1013" width="0.0414%" height="15" fill="rgb(249,75,3)" fg:x="804" fg:w="1"/><text x="33.5695%" y="1023.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="33.6096%" y="997" width="0.0829%" height="15" fill="rgb(219,67,39)" fg:x="811" fg:w="2"/><text x="33.8596%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="34.1484%" y="901" width="0.0414%" height="15" fill="rgb(253,228,2)" fg:x="824" fg:w="1"/><text x="34.3984%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.08%)</title><rect x="34.2312%" y="885" width="0.0829%" height="15" fill="rgb(235,138,27)" fg:x="826" fg:w="2"/><text x="34.4812%" y="895.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.04%)</title><rect x="34.2727%" y="869" width="0.0414%" height="15" fill="rgb(236,97,51)" fg:x="827" fg:w="1"/><text x="34.5227%" y="879.50"></text></g><g><title>core::char::convert::from_u32_unchecked (1 samples, 0.04%)</title><rect x="34.2727%" y="853" width="0.0414%" height="15" fill="rgb(240,80,30)" fg:x="827" fg:w="1"/><text x="34.5227%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="34.3141%" y="869" width="0.0414%" height="15" fill="rgb(230,178,19)" fg:x="828" fg:w="1"/><text x="34.5641%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="34.3970%" y="853" width="0.0414%" height="15" fill="rgb(210,190,27)" fg:x="830" fg:w="1"/><text x="34.6470%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="34.3970%" y="837" width="0.0414%" height="15" fill="rgb(222,107,31)" fg:x="830" fg:w="1"/><text x="34.6470%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.50%)</title><rect x="34.0240%" y="933" width="0.4973%" height="15" fill="rgb(216,127,34)" fg:x="821" fg:w="12"/><text x="34.2740%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (12 samples, 0.50%)</title><rect x="34.0240%" y="917" width="0.4973%" height="15" fill="rgb(234,116,52)" fg:x="821" fg:w="12"/><text x="34.2740%" y="927.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.33%)</title><rect x="34.1898%" y="901" width="0.3315%" height="15" fill="rgb(222,124,15)" fg:x="825" fg:w="8"/><text x="34.4398%" y="911.50"></text></g><g><title>core::str::validations::next_code_point (5 samples, 0.21%)</title><rect x="34.3141%" y="885" width="0.2072%" height="15" fill="rgb(231,179,28)" fg:x="828" fg:w="5"/><text x="34.5641%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="34.3556%" y="869" width="0.1658%" height="15" fill="rgb(226,93,45)" fg:x="829" fg:w="4"/><text x="34.6056%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="34.4385%" y="853" width="0.0829%" height="15" fill="rgb(215,8,51)" fg:x="831" fg:w="2"/><text x="34.6885%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.08%)</title><rect x="34.4385%" y="837" width="0.0829%" height="15" fill="rgb(223,106,5)" fg:x="831" fg:w="2"/><text x="34.6885%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (13 samples, 0.54%)</title><rect x="34.0240%" y="965" width="0.5387%" height="15" fill="rgb(250,191,5)" fg:x="821" fg:w="13"/><text x="34.2740%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.54%)</title><rect x="34.0240%" y="949" width="0.5387%" height="15" fill="rgb(242,132,44)" fg:x="821" fg:w="13"/><text x="34.2740%" y="959.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="34.5213%" y="933" width="0.0414%" height="15" fill="rgb(251,152,29)" fg:x="833" fg:w="1"/><text x="34.7713%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (2 samples, 0.08%)</title><rect x="34.5628%" y="965" width="0.0829%" height="15" fill="rgb(218,179,5)" fg:x="834" fg:w="2"/><text x="34.8128%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.08%)</title><rect x="34.5628%" y="949" width="0.0829%" height="15" fill="rgb(227,67,19)" fg:x="834" fg:w="2"/><text x="34.8128%" y="959.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="34.6042%" y="933" width="0.0414%" height="15" fill="rgb(233,119,31)" fg:x="835" fg:w="1"/><text x="34.8542%" y="943.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (18 samples, 0.75%)</title><rect x="33.9826%" y="981" width="0.7460%" height="15" fill="rgb(241,120,22)" fg:x="820" fg:w="18"/><text x="34.2326%" y="991.50"></text></g><g><title>core::str::&lt;impl str&gt;::len (2 samples, 0.08%)</title><rect x="34.6457%" y="965" width="0.0829%" height="15" fill="rgb(224,102,30)" fg:x="836" fg:w="2"/><text x="34.8957%" y="975.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (1 samples, 0.04%)</title><rect x="34.6871%" y="949" width="0.0414%" height="15" fill="rgb(210,164,37)" fg:x="837" fg:w="1"/><text x="34.9371%" y="959.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputLength&gt;::input_len (2 samples, 0.08%)</title><rect x="34.7286%" y="981" width="0.0829%" height="15" fill="rgb(226,191,16)" fg:x="838" fg:w="2"/><text x="34.9786%" y="991.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.04%)</title><rect x="34.8114%" y="917" width="0.0414%" height="15" fill="rgb(214,40,45)" fg:x="840" fg:w="1"/><text x="35.0614%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="34.8114%" y="901" width="0.0414%" height="15" fill="rgb(244,29,26)" fg:x="840" fg:w="1"/><text x="35.0614%" y="911.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="34.8114%" y="885" width="0.0414%" height="15" fill="rgb(216,16,5)" fg:x="840" fg:w="1"/><text x="35.0614%" y="895.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (2 samples, 0.08%)</title><rect x="34.8114%" y="949" width="0.0829%" height="15" fill="rgb(249,76,35)" fg:x="840" fg:w="2"/><text x="35.0614%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (2 samples, 0.08%)</title><rect x="34.8114%" y="933" width="0.0829%" height="15" fill="rgb(207,11,44)" fg:x="840" fg:w="2"/><text x="35.0614%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="34.8529%" y="917" width="0.0414%" height="15" fill="rgb(228,190,49)" fg:x="841" fg:w="1"/><text x="35.1029%" y="927.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="34.8529%" y="901" width="0.0414%" height="15" fill="rgb(214,173,12)" fg:x="841" fg:w="1"/><text x="35.1029%" y="911.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTake&gt;::take_split (4 samples, 0.17%)</title><rect x="34.8114%" y="981" width="0.1658%" height="15" fill="rgb(218,26,35)" fg:x="840" fg:w="4"/><text x="35.0614%" y="991.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (4 samples, 0.17%)</title><rect x="34.8114%" y="965" width="0.1658%" height="15" fill="rgb(220,200,19)" fg:x="840" fg:w="4"/><text x="35.0614%" y="975.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (2 samples, 0.08%)</title><rect x="34.8943%" y="949" width="0.0829%" height="15" fill="rgb(239,95,49)" fg:x="842" fg:w="2"/><text x="35.1443%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (2 samples, 0.08%)</title><rect x="34.8943%" y="933" width="0.0829%" height="15" fill="rgb(235,85,53)" fg:x="842" fg:w="2"/><text x="35.1443%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (2 samples, 0.08%)</title><rect x="34.8943%" y="917" width="0.0829%" height="15" fill="rgb(233,133,31)" fg:x="842" fg:w="2"/><text x="35.1443%" y="927.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (2 samples, 0.08%)</title><rect x="35.1015%" y="901" width="0.0829%" height="15" fill="rgb(218,25,20)" fg:x="847" fg:w="2"/><text x="35.3515%" y="911.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (7 samples, 0.29%)</title><rect x="34.9772%" y="965" width="0.2901%" height="15" fill="rgb(252,210,38)" fg:x="844" fg:w="7"/><text x="35.2272%" y="975.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int::{{closure}} (6 samples, 0.25%)</title><rect x="35.0186%" y="949" width="0.2487%" height="15" fill="rgb(242,134,21)" fg:x="845" fg:w="6"/><text x="35.2686%" y="959.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int::_unify (5 samples, 0.21%)</title><rect x="35.0601%" y="933" width="0.2072%" height="15" fill="rgb(213,28,48)" fg:x="846" fg:w="5"/><text x="35.3101%" y="943.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int::{{closure}}::{{closure}} (4 samples, 0.17%)</title><rect x="35.1015%" y="917" width="0.1658%" height="15" fill="rgb(250,196,2)" fg:x="847" fg:w="4"/><text x="35.3515%" y="927.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (2 samples, 0.08%)</title><rect x="35.1844%" y="901" width="0.0829%" height="15" fill="rgb(227,5,17)" fg:x="849" fg:w="2"/><text x="35.4344%" y="911.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (1 samples, 0.04%)</title><rect x="35.2259%" y="885" width="0.0414%" height="15" fill="rgb(221,226,24)" fg:x="850" fg:w="1"/><text x="35.4759%" y="895.50"></text></g><g><title>core::num::from_str_radix (1 samples, 0.04%)</title><rect x="35.2259%" y="869" width="0.0414%" height="15" fill="rgb(211,5,48)" fg:x="850" fg:w="1"/><text x="35.4759%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (2 samples, 0.08%)</title><rect x="35.3916%" y="885" width="0.0829%" height="15" fill="rgb(219,150,6)" fg:x="854" fg:w="2"/><text x="35.6416%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="35.5988%" y="853" width="0.0414%" height="15" fill="rgb(251,46,16)" fg:x="859" fg:w="1"/><text x="35.8488%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="35.6403%" y="837" width="0.0414%" height="15" fill="rgb(220,204,40)" fg:x="860" fg:w="1"/><text x="35.8903%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="35.6403%" y="821" width="0.0414%" height="15" fill="rgb(211,85,2)" fg:x="860" fg:w="1"/><text x="35.8903%" y="831.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.37%)</title><rect x="35.3502%" y="901" width="0.3730%" height="15" fill="rgb(229,17,7)" fg:x="853" fg:w="9"/><text x="35.6002%" y="911.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.25%)</title><rect x="35.4745%" y="885" width="0.2487%" height="15" fill="rgb(239,72,28)" fg:x="856" fg:w="6"/><text x="35.7245%" y="895.50"></text></g><g><title>core::str::validations::next_code_point (5 samples, 0.21%)</title><rect x="35.5160%" y="869" width="0.2072%" height="15" fill="rgb(230,47,54)" fg:x="857" fg:w="5"/><text x="35.7660%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="35.6403%" y="853" width="0.0829%" height="15" fill="rgb(214,50,8)" fg:x="860" fg:w="2"/><text x="35.8903%" y="863.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="35.6817%" y="837" width="0.0414%" height="15" fill="rgb(216,198,43)" fg:x="861" fg:w="1"/><text x="35.9317%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (12 samples, 0.50%)</title><rect x="35.2673%" y="933" width="0.4973%" height="15" fill="rgb(234,20,35)" fg:x="851" fg:w="12"/><text x="35.5173%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.50%)</title><rect x="35.2673%" y="917" width="0.4973%" height="15" fill="rgb(254,45,19)" fg:x="851" fg:w="12"/><text x="35.5173%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.04%)</title><rect x="35.7232%" y="901" width="0.0414%" height="15" fill="rgb(219,14,44)" fg:x="862" fg:w="1"/><text x="35.9732%" y="911.50"></text></g><g><title>core::str::&lt;impl str&gt;::char_indices (1 samples, 0.04%)</title><rect x="35.7646%" y="933" width="0.0414%" height="15" fill="rgb(217,220,26)" fg:x="863" fg:w="1"/><text x="36.0146%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (1 samples, 0.04%)</title><rect x="35.7646%" y="917" width="0.0414%" height="15" fill="rgb(213,158,28)" fg:x="863" fg:w="1"/><text x="36.0146%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="35.7646%" y="901" width="0.0414%" height="15" fill="rgb(252,51,52)" fg:x="863" fg:w="1"/><text x="36.0146%" y="911.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="35.7646%" y="885" width="0.0414%" height="15" fill="rgb(246,89,16)" fg:x="863" fg:w="1"/><text x="36.0146%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="35.7646%" y="869" width="0.0414%" height="15" fill="rgb(216,158,49)" fg:x="863" fg:w="1"/><text x="36.0146%" y="879.50"></text></g><g><title>ansi_parser::parsers::cursor_backward (54 samples, 2.24%)</title><rect x="33.6925%" y="997" width="2.2379%" height="15" fill="rgb(236,107,19)" fg:x="813" fg:w="54"/><text x="33.9425%" y="1007.50">a..</text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (23 samples, 0.95%)</title><rect x="34.9772%" y="981" width="0.9532%" height="15" fill="rgb(228,185,30)" fg:x="844" fg:w="23"/><text x="35.2272%" y="991.50"></text></g><g><title>nom::nom::digit0 (16 samples, 0.66%)</title><rect x="35.2673%" y="965" width="0.6631%" height="15" fill="rgb(246,134,8)" fg:x="851" fg:w="16"/><text x="35.5173%" y="975.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position (16 samples, 0.66%)</title><rect x="35.2673%" y="949" width="0.6631%" height="15" fill="rgb(214,143,50)" fg:x="851" fg:w="16"/><text x="35.5173%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (3 samples, 0.12%)</title><rect x="35.8061%" y="933" width="0.1243%" height="15" fill="rgb(228,75,8)" fg:x="864" fg:w="3"/><text x="36.0561%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (3 samples, 0.12%)</title><rect x="35.8061%" y="917" width="0.1243%" height="15" fill="rgb(207,175,4)" fg:x="864" fg:w="3"/><text x="36.0561%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (3 samples, 0.12%)</title><rect x="35.8061%" y="901" width="0.1243%" height="15" fill="rgb(205,108,24)" fg:x="864" fg:w="3"/><text x="36.0561%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="35.8889%" y="885" width="0.0414%" height="15" fill="rgb(244,120,49)" fg:x="866" fg:w="1"/><text x="36.1389%" y="895.50"></text></g><g><title>core::ptr::metadata::metadata (1 samples, 0.04%)</title><rect x="35.8889%" y="869" width="0.0414%" height="15" fill="rgb(223,47,38)" fg:x="866" fg:w="1"/><text x="36.1389%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.12%)</title><rect x="36.3034%" y="901" width="0.1243%" height="15" fill="rgb(229,179,11)" fg:x="876" fg:w="3"/><text x="36.5534%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.08%)</title><rect x="36.4691%" y="885" width="0.0829%" height="15" fill="rgb(231,122,1)" fg:x="880" fg:w="2"/><text x="36.7191%" y="895.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="36.7178%" y="853" width="0.0414%" height="15" fill="rgb(245,119,9)" fg:x="886" fg:w="1"/><text x="36.9678%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (17 samples, 0.70%)</title><rect x="36.1790%" y="965" width="0.7045%" height="15" fill="rgb(241,163,25)" fg:x="873" fg:w="17"/><text x="36.4290%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (17 samples, 0.70%)</title><rect x="36.1790%" y="949" width="0.7045%" height="15" fill="rgb(217,214,3)" fg:x="873" fg:w="17"/><text x="36.4290%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.66%)</title><rect x="36.2205%" y="933" width="0.6631%" height="15" fill="rgb(240,86,28)" fg:x="874" fg:w="16"/><text x="36.4705%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (16 samples, 0.66%)</title><rect x="36.2205%" y="917" width="0.6631%" height="15" fill="rgb(215,47,9)" fg:x="874" fg:w="16"/><text x="36.4705%" y="927.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.46%)</title><rect x="36.4277%" y="901" width="0.4559%" height="15" fill="rgb(252,25,45)" fg:x="879" fg:w="11"/><text x="36.6777%" y="911.50"></text></g><g><title>core::str::validations::next_code_point (8 samples, 0.33%)</title><rect x="36.5520%" y="885" width="0.3315%" height="15" fill="rgb(251,164,9)" fg:x="882" fg:w="8"/><text x="36.8020%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.21%)</title><rect x="36.6763%" y="869" width="0.2072%" height="15" fill="rgb(233,194,0)" fg:x="885" fg:w="5"/><text x="36.9263%" y="879.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (3 samples, 0.12%)</title><rect x="36.7592%" y="853" width="0.1243%" height="15" fill="rgb(249,111,24)" fg:x="887" fg:w="3"/><text x="37.0092%" y="863.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.08%)</title><rect x="36.8007%" y="837" width="0.0829%" height="15" fill="rgb(250,223,3)" fg:x="888" fg:w="2"/><text x="37.0507%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.04%)</title><rect x="36.8835%" y="965" width="0.0414%" height="15" fill="rgb(236,178,37)" fg:x="890" fg:w="1"/><text x="37.1335%" y="975.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.04%)</title><rect x="36.8835%" y="949" width="0.0414%" height="15" fill="rgb(241,158,50)" fg:x="890" fg:w="1"/><text x="37.1335%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="36.9250%" y="949" width="0.0414%" height="15" fill="rgb(213,121,41)" fg:x="891" fg:w="1"/><text x="37.1750%" y="959.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="36.9250%" y="933" width="0.0414%" height="15" fill="rgb(240,92,3)" fg:x="891" fg:w="1"/><text x="37.1750%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (2 samples, 0.08%)</title><rect x="36.9250%" y="965" width="0.0829%" height="15" fill="rgb(205,123,3)" fg:x="891" fg:w="2"/><text x="37.1750%" y="975.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (1 samples, 0.04%)</title><rect x="36.9664%" y="949" width="0.0414%" height="15" fill="rgb(205,97,47)" fg:x="892" fg:w="1"/><text x="37.2164%" y="959.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (22 samples, 0.91%)</title><rect x="36.1376%" y="981" width="0.9117%" height="15" fill="rgb(247,152,14)" fg:x="872" fg:w="22"/><text x="36.3876%" y="991.50"></text></g><g><title>core::str::&lt;impl str&gt;::len (1 samples, 0.04%)</title><rect x="37.0079%" y="965" width="0.0414%" height="15" fill="rgb(248,195,53)" fg:x="893" fg:w="1"/><text x="37.2579%" y="975.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputLength&gt;::input_len (1 samples, 0.04%)</title><rect x="37.0493%" y="981" width="0.0414%" height="15" fill="rgb(226,201,16)" fg:x="894" fg:w="1"/><text x="37.2993%" y="991.50"></text></g><g><title>core::str::&lt;impl str&gt;::len (1 samples, 0.04%)</title><rect x="37.0493%" y="965" width="0.0414%" height="15" fill="rgb(205,98,0)" fg:x="894" fg:w="1"/><text x="37.2993%" y="975.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (2 samples, 0.08%)</title><rect x="37.1736%" y="949" width="0.0829%" height="15" fill="rgb(214,191,48)" fg:x="897" fg:w="2"/><text x="37.4236%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.04%)</title><rect x="37.2151%" y="933" width="0.0414%" height="15" fill="rgb(237,112,39)" fg:x="898" fg:w="1"/><text x="37.4651%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.04%)</title><rect x="37.2151%" y="917" width="0.0414%" height="15" fill="rgb(247,203,27)" fg:x="898" fg:w="1"/><text x="37.4651%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="37.2151%" y="901" width="0.0414%" height="15" fill="rgb(235,124,28)" fg:x="898" fg:w="1"/><text x="37.4651%" y="911.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="37.2151%" y="885" width="0.0414%" height="15" fill="rgb(208,207,46)" fg:x="898" fg:w="1"/><text x="37.4651%" y="895.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTake&gt;::take_split (6 samples, 0.25%)</title><rect x="37.0908%" y="981" width="0.2487%" height="15" fill="rgb(234,176,4)" fg:x="895" fg:w="6"/><text x="37.3408%" y="991.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (4 samples, 0.17%)</title><rect x="37.1736%" y="965" width="0.1658%" height="15" fill="rgb(230,133,28)" fg:x="897" fg:w="4"/><text x="37.4236%" y="975.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (2 samples, 0.08%)</title><rect x="37.2565%" y="949" width="0.0829%" height="15" fill="rgb(211,137,40)" fg:x="899" fg:w="2"/><text x="37.5065%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (2 samples, 0.08%)</title><rect x="37.2565%" y="933" width="0.0829%" height="15" fill="rgb(254,35,13)" fg:x="899" fg:w="2"/><text x="37.5065%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (2 samples, 0.08%)</title><rect x="37.2565%" y="917" width="0.0829%" height="15" fill="rgb(225,49,51)" fg:x="899" fg:w="2"/><text x="37.5065%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="37.2980%" y="901" width="0.0414%" height="15" fill="rgb(251,10,15)" fg:x="900" fg:w="1"/><text x="37.5480%" y="911.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="37.2980%" y="885" width="0.0414%" height="15" fill="rgb(228,207,15)" fg:x="900" fg:w="1"/><text x="37.5480%" y="895.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="37.2980%" y="869" width="0.0414%" height="15" fill="rgb(241,99,19)" fg:x="900" fg:w="1"/><text x="37.5480%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="37.2980%" y="853" width="0.0414%" height="15" fill="rgb(207,104,49)" fg:x="900" fg:w="1"/><text x="37.5480%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="37.2980%" y="837" width="0.0414%" height="15" fill="rgb(234,99,18)" fg:x="900" fg:w="1"/><text x="37.5480%" y="847.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.08%)</title><rect x="37.3394%" y="965" width="0.0829%" height="15" fill="rgb(213,191,49)" fg:x="901" fg:w="2"/><text x="37.5894%" y="975.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int::{{closure}} (2 samples, 0.08%)</title><rect x="37.3394%" y="949" width="0.0829%" height="15" fill="rgb(210,226,19)" fg:x="901" fg:w="2"/><text x="37.5894%" y="959.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int::_unify (2 samples, 0.08%)</title><rect x="37.3394%" y="933" width="0.0829%" height="15" fill="rgb(229,97,18)" fg:x="901" fg:w="2"/><text x="37.5894%" y="943.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int::{{closure}}::{{closure}} (2 samples, 0.08%)</title><rect x="37.3394%" y="917" width="0.0829%" height="15" fill="rgb(211,167,15)" fg:x="901" fg:w="2"/><text x="37.5894%" y="927.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (2 samples, 0.08%)</title><rect x="37.3394%" y="901" width="0.0829%" height="15" fill="rgb(210,169,34)" fg:x="901" fg:w="2"/><text x="37.5894%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check (1 samples, 0.04%)</title><rect x="37.4637%" y="917" width="0.0414%" height="15" fill="rgb(241,121,31)" fg:x="904" fg:w="1"/><text x="37.7137%" y="927.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.12%)</title><rect x="37.5052%" y="901" width="0.1243%" height="15" fill="rgb(232,40,11)" fg:x="905" fg:w="3"/><text x="37.7552%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.04%)</title><rect x="37.6709%" y="885" width="0.0414%" height="15" fill="rgb(205,86,26)" fg:x="909" fg:w="1"/><text x="37.9209%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="37.7953%" y="869" width="0.0414%" height="15" fill="rgb(231,126,28)" fg:x="912" fg:w="1"/><text x="38.0453%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.08%)</title><rect x="37.8782%" y="853" width="0.0829%" height="15" fill="rgb(219,221,18)" fg:x="914" fg:w="2"/><text x="38.1282%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="38.0025%" y="837" width="0.0414%" height="15" fill="rgb(211,40,0)" fg:x="917" fg:w="1"/><text x="38.2525%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="38.0025%" y="821" width="0.0414%" height="15" fill="rgb(239,85,43)" fg:x="917" fg:w="1"/><text x="38.2525%" y="831.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.46%)</title><rect x="37.6295%" y="901" width="0.4559%" height="15" fill="rgb(231,55,21)" fg:x="908" fg:w="11"/><text x="37.8795%" y="911.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.37%)</title><rect x="37.7124%" y="885" width="0.3730%" height="15" fill="rgb(225,184,43)" fg:x="910" fg:w="9"/><text x="37.9624%" y="895.50"></text></g><g><title>core::str::validations::next_code_point (6 samples, 0.25%)</title><rect x="37.8367%" y="869" width="0.2487%" height="15" fill="rgb(251,158,41)" fg:x="913" fg:w="6"/><text x="38.0867%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="37.9610%" y="853" width="0.1243%" height="15" fill="rgb(234,159,37)" fg:x="916" fg:w="3"/><text x="38.2110%" y="863.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="38.0439%" y="837" width="0.0414%" height="15" fill="rgb(216,204,22)" fg:x="918" fg:w="1"/><text x="38.2939%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="38.0439%" y="821" width="0.0414%" height="15" fill="rgb(214,17,3)" fg:x="918" fg:w="1"/><text x="38.2939%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (16 samples, 0.66%)</title><rect x="37.4637%" y="933" width="0.6631%" height="15" fill="rgb(212,111,17)" fg:x="904" fg:w="16"/><text x="37.7137%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (15 samples, 0.62%)</title><rect x="37.5052%" y="917" width="0.6216%" height="15" fill="rgb(221,157,24)" fg:x="905" fg:w="15"/><text x="37.7552%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (1 samples, 0.04%)</title><rect x="38.0854%" y="901" width="0.0414%" height="15" fill="rgb(252,16,13)" fg:x="919" fg:w="1"/><text x="38.3354%" y="911.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position::{{closure}} (1 samples, 0.04%)</title><rect x="38.0854%" y="885" width="0.0414%" height="15" fill="rgb(221,62,2)" fg:x="919" fg:w="1"/><text x="38.3354%" y="895.50"></text></g><g><title>nom::nom::digit0::{{closure}} (1 samples, 0.04%)</title><rect x="38.0854%" y="869" width="0.0414%" height="15" fill="rgb(247,87,22)" fg:x="919" fg:w="1"/><text x="38.3354%" y="879.50"></text></g><g><title>&lt;char as nom::traits::AsChar&gt;::is_dec_digit (1 samples, 0.04%)</title><rect x="38.0854%" y="853" width="0.0414%" height="15" fill="rgb(215,73,9)" fg:x="919" fg:w="1"/><text x="38.3354%" y="863.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_digit (1 samples, 0.04%)</title><rect x="38.0854%" y="837" width="0.0414%" height="15" fill="rgb(207,175,33)" fg:x="919" fg:w="1"/><text x="38.3354%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="38.1683%" y="901" width="0.0414%" height="15" fill="rgb(243,129,54)" fg:x="921" fg:w="1"/><text x="38.4183%" y="911.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="38.1683%" y="885" width="0.0414%" height="15" fill="rgb(227,119,45)" fg:x="921" fg:w="1"/><text x="38.4183%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (1 samples, 0.04%)</title><rect x="38.1683%" y="869" width="0.0414%" height="15" fill="rgb(205,109,36)" fg:x="921" fg:w="1"/><text x="38.4183%" y="879.50"></text></g><g><title>core::str::&lt;impl str&gt;::char_indices (4 samples, 0.17%)</title><rect x="38.1268%" y="933" width="0.1658%" height="15" fill="rgb(205,6,39)" fg:x="920" fg:w="4"/><text x="38.3768%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (4 samples, 0.17%)</title><rect x="38.1268%" y="917" width="0.1658%" height="15" fill="rgb(221,32,16)" fg:x="920" fg:w="4"/><text x="38.3768%" y="927.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (2 samples, 0.08%)</title><rect x="38.2097%" y="901" width="0.0829%" height="15" fill="rgb(228,144,50)" fg:x="922" fg:w="2"/><text x="38.4597%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.04%)</title><rect x="38.2926%" y="917" width="0.0414%" height="15" fill="rgb(229,201,53)" fg:x="924" fg:w="1"/><text x="38.5426%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.04%)</title><rect x="38.2926%" y="901" width="0.0414%" height="15" fill="rgb(249,153,27)" fg:x="924" fg:w="1"/><text x="38.5426%" y="911.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.04%)</title><rect x="38.2926%" y="885" width="0.0414%" height="15" fill="rgb(227,106,25)" fg:x="924" fg:w="1"/><text x="38.5426%" y="895.50"></text></g><g><title>ansi_parser::parsers::cursor_down (59 samples, 2.45%)</title><rect x="35.9304%" y="997" width="2.4451%" height="15" fill="rgb(230,65,29)" fg:x="867" fg:w="59"/><text x="36.1804%" y="1007.50">an..</text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (25 samples, 1.04%)</title><rect x="37.3394%" y="981" width="1.0361%" height="15" fill="rgb(221,57,46)" fg:x="901" fg:w="25"/><text x="37.5894%" y="991.50"></text></g><g><title>nom::nom::digit0 (23 samples, 0.95%)</title><rect x="37.4223%" y="965" width="0.9532%" height="15" fill="rgb(229,161,17)" fg:x="903" fg:w="23"/><text x="37.6723%" y="975.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position (23 samples, 0.95%)</title><rect x="37.4223%" y="949" width="0.9532%" height="15" fill="rgb(222,213,11)" fg:x="903" fg:w="23"/><text x="37.6723%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2 samples, 0.08%)</title><rect x="38.2926%" y="933" width="0.0829%" height="15" fill="rgb(235,35,13)" fg:x="924" fg:w="2"/><text x="38.5426%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (1 samples, 0.04%)</title><rect x="38.3340%" y="917" width="0.0414%" height="15" fill="rgb(233,158,34)" fg:x="925" fg:w="1"/><text x="38.5840%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (1 samples, 0.04%)</title><rect x="38.3340%" y="901" width="0.0414%" height="15" fill="rgb(215,151,48)" fg:x="925" fg:w="1"/><text x="38.5840%" y="911.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.04%)</title><rect x="38.3340%" y="885" width="0.0414%" height="15" fill="rgb(229,84,14)" fg:x="925" fg:w="1"/><text x="38.5840%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="38.3340%" y="869" width="0.0414%" height="15" fill="rgb(229,68,14)" fg:x="925" fg:w="1"/><text x="38.5840%" y="879.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="38.3340%" y="853" width="0.0414%" height="15" fill="rgb(243,106,26)" fg:x="925" fg:w="1"/><text x="38.5840%" y="863.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="38.3340%" y="837" width="0.0414%" height="15" fill="rgb(206,45,38)" fg:x="925" fg:w="1"/><text x="38.5840%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="38.8313%" y="885" width="0.0414%" height="15" fill="rgb(226,6,15)" fg:x="937" fg:w="1"/><text x="39.0813%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="39.0385%" y="869" width="0.0414%" height="15" fill="rgb(232,22,54)" fg:x="942" fg:w="1"/><text x="39.2885%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="39.1214%" y="853" width="0.0414%" height="15" fill="rgb(229,222,32)" fg:x="944" fg:w="1"/><text x="39.3714%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="39.1214%" y="837" width="0.0414%" height="15" fill="rgb(228,62,29)" fg:x="944" fg:w="1"/><text x="39.3714%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="39.1629%" y="853" width="0.0829%" height="15" fill="rgb(251,103,34)" fg:x="945" fg:w="2"/><text x="39.4129%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.08%)</title><rect x="39.1629%" y="837" width="0.0829%" height="15" fill="rgb(233,12,30)" fg:x="945" fg:w="2"/><text x="39.4129%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.54%)</title><rect x="38.7484%" y="933" width="0.5387%" height="15" fill="rgb(238,52,0)" fg:x="935" fg:w="13"/><text x="38.9984%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (13 samples, 0.54%)</title><rect x="38.7484%" y="917" width="0.5387%" height="15" fill="rgb(223,98,5)" fg:x="935" fg:w="13"/><text x="38.9984%" y="927.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.46%)</title><rect x="38.8313%" y="901" width="0.4559%" height="15" fill="rgb(228,75,37)" fg:x="937" fg:w="11"/><text x="39.0813%" y="911.50"></text></g><g><title>core::str::validations::next_code_point (10 samples, 0.41%)</title><rect x="38.8728%" y="885" width="0.4144%" height="15" fill="rgb(205,115,49)" fg:x="938" fg:w="10"/><text x="39.1228%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.21%)</title><rect x="39.0800%" y="869" width="0.2072%" height="15" fill="rgb(250,154,43)" fg:x="943" fg:w="5"/><text x="39.3300%" y="879.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="39.2458%" y="853" width="0.0414%" height="15" fill="rgb(226,43,29)" fg:x="947" fg:w="1"/><text x="39.4958%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (16 samples, 0.66%)</title><rect x="38.6656%" y="965" width="0.6631%" height="15" fill="rgb(249,228,39)" fg:x="933" fg:w="16"/><text x="38.9156%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (16 samples, 0.66%)</title><rect x="38.6656%" y="949" width="0.6631%" height="15" fill="rgb(216,79,43)" fg:x="933" fg:w="16"/><text x="38.9156%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::{{closure}} (1 samples, 0.04%)</title><rect x="39.2872%" y="933" width="0.0414%" height="15" fill="rgb(228,95,12)" fg:x="948" fg:w="1"/><text x="39.5372%" y="943.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare::{{closure}} (1 samples, 0.04%)</title><rect x="39.2872%" y="917" width="0.0414%" height="15" fill="rgb(249,221,15)" fg:x="948" fg:w="1"/><text x="39.5372%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.04%)</title><rect x="39.3286%" y="965" width="0.0414%" height="15" fill="rgb(233,34,13)" fg:x="949" fg:w="1"/><text x="39.5786%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (4 samples, 0.17%)</title><rect x="39.3701%" y="949" width="0.1658%" height="15" fill="rgb(214,103,39)" fg:x="950" fg:w="4"/><text x="39.6201%" y="959.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (3 samples, 0.12%)</title><rect x="39.4115%" y="933" width="0.1243%" height="15" fill="rgb(251,126,39)" fg:x="951" fg:w="3"/><text x="39.6615%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.08%)</title><rect x="39.4530%" y="917" width="0.0829%" height="15" fill="rgb(214,216,36)" fg:x="952" fg:w="2"/><text x="39.7030%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (2 samples, 0.08%)</title><rect x="39.4530%" y="901" width="0.0829%" height="15" fill="rgb(220,221,8)" fg:x="952" fg:w="2"/><text x="39.7030%" y="911.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (23 samples, 0.95%)</title><rect x="38.6656%" y="981" width="0.9532%" height="15" fill="rgb(240,216,3)" fg:x="933" fg:w="23"/><text x="38.9156%" y="991.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (6 samples, 0.25%)</title><rect x="39.3701%" y="965" width="0.2487%" height="15" fill="rgb(232,218,17)" fg:x="950" fg:w="6"/><text x="39.6201%" y="975.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (2 samples, 0.08%)</title><rect x="39.5358%" y="949" width="0.0829%" height="15" fill="rgb(229,163,45)" fg:x="954" fg:w="2"/><text x="39.7858%" y="959.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (3 samples, 0.12%)</title><rect x="39.7016%" y="917" width="0.1243%" height="15" fill="rgb(231,110,42)" fg:x="958" fg:w="3"/><text x="39.9516%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="39.7845%" y="901" width="0.0414%" height="15" fill="rgb(208,170,48)" fg:x="960" fg:w="1"/><text x="40.0345%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (6 samples, 0.25%)</title><rect x="39.6187%" y="949" width="0.2487%" height="15" fill="rgb(239,116,25)" fg:x="956" fg:w="6"/><text x="39.8687%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (5 samples, 0.21%)</title><rect x="39.6602%" y="933" width="0.2072%" height="15" fill="rgb(219,200,50)" fg:x="957" fg:w="5"/><text x="39.9102%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="39.8259%" y="917" width="0.0414%" height="15" fill="rgb(245,200,0)" fg:x="961" fg:w="1"/><text x="40.0759%" y="927.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.04%)</title><rect x="39.8674%" y="917" width="0.0414%" height="15" fill="rgb(245,119,33)" fg:x="962" fg:w="1"/><text x="40.1174%" y="927.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTake&gt;::take_split (8 samples, 0.33%)</title><rect x="39.6187%" y="981" width="0.3315%" height="15" fill="rgb(231,125,12)" fg:x="956" fg:w="8"/><text x="39.8687%" y="991.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (8 samples, 0.33%)</title><rect x="39.6187%" y="965" width="0.3315%" height="15" fill="rgb(216,96,41)" fg:x="956" fg:w="8"/><text x="39.8687%" y="975.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (2 samples, 0.08%)</title><rect x="39.8674%" y="949" width="0.0829%" height="15" fill="rgb(248,43,45)" fg:x="962" fg:w="2"/><text x="40.1174%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (2 samples, 0.08%)</title><rect x="39.8674%" y="933" width="0.0829%" height="15" fill="rgb(217,222,7)" fg:x="962" fg:w="2"/><text x="40.1174%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="39.9088%" y="917" width="0.0414%" height="15" fill="rgb(233,28,6)" fg:x="963" fg:w="1"/><text x="40.1588%" y="927.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (7 samples, 0.29%)</title><rect x="39.9503%" y="965" width="0.2901%" height="15" fill="rgb(231,218,15)" fg:x="964" fg:w="7"/><text x="40.2003%" y="975.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int::{{closure}} (4 samples, 0.17%)</title><rect x="40.0746%" y="949" width="0.1658%" height="15" fill="rgb(226,171,48)" fg:x="967" fg:w="4"/><text x="40.3246%" y="959.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int::_unify (2 samples, 0.08%)</title><rect x="40.1575%" y="933" width="0.0829%" height="15" fill="rgb(235,201,9)" fg:x="969" fg:w="2"/><text x="40.4075%" y="943.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int::{{closure}}::{{closure}} (1 samples, 0.04%)</title><rect x="40.1989%" y="917" width="0.0414%" height="15" fill="rgb(217,80,15)" fg:x="970" fg:w="1"/><text x="40.4489%" y="927.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (1 samples, 0.04%)</title><rect x="40.1989%" y="901" width="0.0414%" height="15" fill="rgb(219,152,8)" fg:x="970" fg:w="1"/><text x="40.4489%" y="911.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (3 samples, 0.12%)</title><rect x="40.5305%" y="901" width="0.1243%" height="15" fill="rgb(243,107,38)" fg:x="978" fg:w="3"/><text x="40.7805%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (3 samples, 0.12%)</title><rect x="40.7377%" y="885" width="0.1243%" height="15" fill="rgb(231,17,5)" fg:x="983" fg:w="3"/><text x="40.9877%" y="895.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.08%)</title><rect x="40.7791%" y="869" width="0.0829%" height="15" fill="rgb(209,25,54)" fg:x="984" fg:w="2"/><text x="41.0291%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.12%)</title><rect x="40.9034%" y="853" width="0.1243%" height="15" fill="rgb(219,0,2)" fg:x="987" fg:w="3"/><text x="41.1534%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="41.0692%" y="837" width="0.0829%" height="15" fill="rgb(246,9,5)" fg:x="991" fg:w="2"/><text x="41.3192%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="41.1107%" y="821" width="0.0414%" height="15" fill="rgb(226,159,4)" fg:x="992" fg:w="1"/><text x="41.3607%" y="831.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.58%)</title><rect x="40.6548%" y="901" width="0.5802%" height="15" fill="rgb(219,175,34)" fg:x="981" fg:w="14"/><text x="40.9048%" y="911.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.37%)</title><rect x="40.8620%" y="885" width="0.3730%" height="15" fill="rgb(236,10,46)" fg:x="986" fg:w="9"/><text x="41.1120%" y="895.50"></text></g><g><title>core::str::validations::next_code_point (9 samples, 0.37%)</title><rect x="40.8620%" y="869" width="0.3730%" height="15" fill="rgb(240,211,16)" fg:x="986" fg:w="9"/><text x="41.1120%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.21%)</title><rect x="41.0278%" y="853" width="0.2072%" height="15" fill="rgb(205,3,43)" fg:x="990" fg:w="5"/><text x="41.2778%" y="863.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.08%)</title><rect x="41.1521%" y="837" width="0.0829%" height="15" fill="rgb(245,7,22)" fg:x="993" fg:w="2"/><text x="41.4021%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="41.1935%" y="821" width="0.0414%" height="15" fill="rgb(239,132,32)" fg:x="994" fg:w="1"/><text x="41.4435%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (23 samples, 0.95%)</title><rect x="40.4061%" y="933" width="0.9532%" height="15" fill="rgb(228,202,34)" fg:x="975" fg:w="23"/><text x="40.6561%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 0.87%)</title><rect x="40.4890%" y="917" width="0.8703%" height="15" fill="rgb(254,200,22)" fg:x="977" fg:w="21"/><text x="40.7390%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.12%)</title><rect x="41.2350%" y="901" width="0.1243%" height="15" fill="rgb(219,10,39)" fg:x="995" fg:w="3"/><text x="41.4850%" y="911.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position::{{closure}} (2 samples, 0.08%)</title><rect x="41.2764%" y="885" width="0.0829%" height="15" fill="rgb(226,210,39)" fg:x="996" fg:w="2"/><text x="41.5264%" y="895.50"></text></g><g><title>nom::nom::digit0::{{closure}} (2 samples, 0.08%)</title><rect x="41.2764%" y="869" width="0.0829%" height="15" fill="rgb(208,219,16)" fg:x="996" fg:w="2"/><text x="41.5264%" y="879.50"></text></g><g><title>&lt;char as nom::traits::AsChar&gt;::is_dec_digit (2 samples, 0.08%)</title><rect x="41.2764%" y="853" width="0.0829%" height="15" fill="rgb(216,158,51)" fg:x="996" fg:w="2"/><text x="41.5264%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="41.3593%" y="869" width="0.0414%" height="15" fill="rgb(233,14,44)" fg:x="998" fg:w="1"/><text x="41.6093%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="41.3593%" y="853" width="0.0414%" height="15" fill="rgb(237,97,39)" fg:x="998" fg:w="1"/><text x="41.6093%" y="863.50"></text></g><g><title>core::str::&lt;impl str&gt;::char_indices (2 samples, 0.08%)</title><rect x="41.3593%" y="933" width="0.0829%" height="15" fill="rgb(218,198,43)" fg:x="998" fg:w="2"/><text x="41.6093%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (2 samples, 0.08%)</title><rect x="41.3593%" y="917" width="0.0829%" height="15" fill="rgb(231,104,20)" fg:x="998" fg:w="2"/><text x="41.6093%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.08%)</title><rect x="41.3593%" y="901" width="0.0829%" height="15" fill="rgb(254,36,13)" fg:x="998" fg:w="2"/><text x="41.6093%" y="911.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.08%)</title><rect x="41.3593%" y="885" width="0.0829%" height="15" fill="rgb(248,14,50)" fg:x="998" fg:w="2"/><text x="41.6093%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="41.4007%" y="869" width="0.0414%" height="15" fill="rgb(217,107,29)" fg:x="999" fg:w="1"/><text x="41.6507%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="41.4007%" y="853" width="0.0414%" height="15" fill="rgb(251,169,33)" fg:x="999" fg:w="1"/><text x="41.6507%" y="863.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (3 samples, 0.12%)</title><rect x="41.4836%" y="885" width="0.1243%" height="15" fill="rgb(217,108,32)" fg:x="1001" fg:w="3"/><text x="41.7336%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="41.5665%" y="869" width="0.0414%" height="15" fill="rgb(219,66,42)" fg:x="1003" fg:w="1"/><text x="41.8165%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (5 samples, 0.21%)</title><rect x="41.4422%" y="917" width="0.2072%" height="15" fill="rgb(206,180,7)" fg:x="1000" fg:w="5"/><text x="41.6922%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (4 samples, 0.17%)</title><rect x="41.4836%" y="901" width="0.1658%" height="15" fill="rgb(208,226,31)" fg:x="1001" fg:w="4"/><text x="41.7336%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="41.6080%" y="885" width="0.0414%" height="15" fill="rgb(218,26,49)" fg:x="1004" fg:w="1"/><text x="41.8580%" y="895.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="41.6080%" y="869" width="0.0414%" height="15" fill="rgb(233,197,48)" fg:x="1004" fg:w="1"/><text x="41.8580%" y="879.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.04%)</title><rect x="41.6908%" y="885" width="0.0414%" height="15" fill="rgb(252,181,51)" fg:x="1006" fg:w="1"/><text x="41.9408%" y="895.50"></text></g><g><title>ansi_parser::parsers::cursor_forward (83 samples, 3.44%)</title><rect x="38.3755%" y="997" width="3.4397%" height="15" fill="rgb(253,90,19)" fg:x="926" fg:w="83"/><text x="38.6255%" y="1007.50">ans..</text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (45 samples, 1.86%)</title><rect x="39.9503%" y="981" width="1.8649%" height="15" fill="rgb(215,171,30)" fg:x="964" fg:w="45"/><text x="40.2003%" y="991.50">a..</text></g><g><title>nom::nom::digit0 (38 samples, 1.57%)</title><rect x="40.2404%" y="965" width="1.5748%" height="15" fill="rgb(214,222,9)" fg:x="971" fg:w="38"/><text x="40.4904%" y="975.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position (38 samples, 1.57%)</title><rect x="40.2404%" y="949" width="1.5748%" height="15" fill="rgb(223,3,22)" fg:x="971" fg:w="38"/><text x="40.4904%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (9 samples, 0.37%)</title><rect x="41.4422%" y="933" width="0.3730%" height="15" fill="rgb(225,196,46)" fg:x="1000" fg:w="9"/><text x="41.6922%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (4 samples, 0.17%)</title><rect x="41.6494%" y="917" width="0.1658%" height="15" fill="rgb(209,110,37)" fg:x="1005" fg:w="4"/><text x="41.8994%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (4 samples, 0.17%)</title><rect x="41.6494%" y="901" width="0.1658%" height="15" fill="rgb(249,89,12)" fg:x="1005" fg:w="4"/><text x="41.8994%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="41.7323%" y="885" width="0.0829%" height="15" fill="rgb(226,27,33)" fg:x="1007" fg:w="2"/><text x="41.9823%" y="895.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="41.7737%" y="869" width="0.0414%" height="15" fill="rgb(213,82,22)" fg:x="1008" fg:w="1"/><text x="42.0237%" y="879.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="41.7737%" y="853" width="0.0414%" height="15" fill="rgb(248,140,0)" fg:x="1008" fg:w="1"/><text x="42.0237%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="42.6855%" y="901" width="0.0414%" height="15" fill="rgb(228,106,3)" fg:x="1030" fg:w="1"/><text x="42.9355%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.25%)</title><rect x="42.7269%" y="885" width="0.2487%" height="15" fill="rgb(209,23,37)" fg:x="1031" fg:w="6"/><text x="42.9769%" y="895.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (2 samples, 0.08%)</title><rect x="42.8927%" y="869" width="0.0829%" height="15" fill="rgb(241,93,50)" fg:x="1035" fg:w="2"/><text x="43.1427%" y="879.50"></text></g><g><title>core::char::convert::from_u32_unchecked (1 samples, 0.04%)</title><rect x="42.9341%" y="853" width="0.0414%" height="15" fill="rgb(253,46,43)" fg:x="1036" fg:w="1"/><text x="43.1841%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="43.2656%" y="853" width="0.0414%" height="15" fill="rgb(226,206,43)" fg:x="1044" fg:w="1"/><text x="43.5156%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (4 samples, 0.17%)</title><rect x="43.3071%" y="853" width="0.1658%" height="15" fill="rgb(217,54,7)" fg:x="1045" fg:w="4"/><text x="43.5571%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (3 samples, 0.12%)</title><rect x="43.3485%" y="837" width="0.1243%" height="15" fill="rgb(223,5,52)" fg:x="1046" fg:w="3"/><text x="43.5985%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="43.4729%" y="853" width="0.0414%" height="15" fill="rgb(206,52,46)" fg:x="1049" fg:w="1"/><text x="43.7229%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 1.24%)</title><rect x="42.3954%" y="933" width="1.2433%" height="15" fill="rgb(253,136,11)" fg:x="1023" fg:w="30"/><text x="42.6454%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (29 samples, 1.20%)</title><rect x="42.4368%" y="917" width="1.2018%" height="15" fill="rgb(208,106,33)" fg:x="1024" fg:w="29"/><text x="42.6868%" y="927.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.91%)</title><rect x="42.7269%" y="901" width="0.9117%" height="15" fill="rgb(206,54,4)" fg:x="1031" fg:w="22"/><text x="42.9769%" y="911.50"></text></g><g><title>core::str::validations::next_code_point (16 samples, 0.66%)</title><rect x="42.9755%" y="885" width="0.6631%" height="15" fill="rgb(213,3,15)" fg:x="1037" fg:w="16"/><text x="43.2255%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.54%)</title><rect x="43.0999%" y="869" width="0.5387%" height="15" fill="rgb(252,211,39)" fg:x="1040" fg:w="13"/><text x="43.3499%" y="879.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (3 samples, 0.12%)</title><rect x="43.5143%" y="853" width="0.1243%" height="15" fill="rgb(223,6,36)" fg:x="1050" fg:w="3"/><text x="43.7643%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="43.5972%" y="837" width="0.0414%" height="15" fill="rgb(252,169,45)" fg:x="1052" fg:w="1"/><text x="43.8472%" y="847.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (2 samples, 0.08%)</title><rect x="43.6386%" y="933" width="0.0829%" height="15" fill="rgb(212,48,26)" fg:x="1053" fg:w="2"/><text x="43.8886%" y="943.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="43.7215%" y="933" width="0.0414%" height="15" fill="rgb(251,102,48)" fg:x="1055" fg:w="1"/><text x="43.9715%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (39 samples, 1.62%)</title><rect x="42.1881%" y="965" width="1.6162%" height="15" fill="rgb(243,208,16)" fg:x="1018" fg:w="39"/><text x="42.4381%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (38 samples, 1.57%)</title><rect x="42.2296%" y="949" width="1.5748%" height="15" fill="rgb(219,96,24)" fg:x="1019" fg:w="38"/><text x="42.4796%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::{{closure}} (1 samples, 0.04%)</title><rect x="43.7630%" y="933" width="0.0414%" height="15" fill="rgb(219,33,29)" fg:x="1056" fg:w="1"/><text x="44.0130%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (2 samples, 0.08%)</title><rect x="43.8044%" y="965" width="0.0829%" height="15" fill="rgb(223,176,5)" fg:x="1057" fg:w="2"/><text x="44.0544%" y="975.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.04%)</title><rect x="43.8458%" y="949" width="0.0414%" height="15" fill="rgb(228,140,14)" fg:x="1058" fg:w="1"/><text x="44.0958%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.04%)</title><rect x="43.8458%" y="933" width="0.0414%" height="15" fill="rgb(217,179,31)" fg:x="1058" fg:w="1"/><text x="44.0958%" y="943.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (48 samples, 1.99%)</title><rect x="42.1881%" y="981" width="1.9892%" height="15" fill="rgb(230,9,30)" fg:x="1018" fg:w="48"/><text x="42.4381%" y="991.50">&lt;..</text></g><g><title>core::str::&lt;impl str&gt;::chars (7 samples, 0.29%)</title><rect x="43.8873%" y="965" width="0.2901%" height="15" fill="rgb(230,136,20)" fg:x="1059" fg:w="7"/><text x="44.1373%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (7 samples, 0.29%)</title><rect x="43.8873%" y="949" width="0.2901%" height="15" fill="rgb(215,210,22)" fg:x="1059" fg:w="7"/><text x="44.1373%" y="959.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (7 samples, 0.29%)</title><rect x="43.8873%" y="933" width="0.2901%" height="15" fill="rgb(218,43,5)" fg:x="1059" fg:w="7"/><text x="44.1373%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (3 samples, 0.12%)</title><rect x="44.0530%" y="917" width="0.1243%" height="15" fill="rgb(216,11,5)" fg:x="1063" fg:w="3"/><text x="44.3030%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="44.1359%" y="901" width="0.0414%" height="15" fill="rgb(209,82,29)" fg:x="1065" fg:w="1"/><text x="44.3859%" y="911.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (3 samples, 0.12%)</title><rect x="44.2188%" y="917" width="0.1243%" height="15" fill="rgb(244,115,12)" fg:x="1067" fg:w="3"/><text x="44.4688%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.08%)</title><rect x="44.2603%" y="901" width="0.0829%" height="15" fill="rgb(222,82,18)" fg:x="1068" fg:w="2"/><text x="44.5103%" y="911.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="44.3017%" y="885" width="0.0414%" height="15" fill="rgb(249,227,8)" fg:x="1069" fg:w="1"/><text x="44.5517%" y="895.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (4 samples, 0.17%)</title><rect x="44.2188%" y="949" width="0.1658%" height="15" fill="rgb(253,141,45)" fg:x="1067" fg:w="4"/><text x="44.4688%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (4 samples, 0.17%)</title><rect x="44.2188%" y="933" width="0.1658%" height="15" fill="rgb(234,184,4)" fg:x="1067" fg:w="4"/><text x="44.4688%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="44.3431%" y="917" width="0.0414%" height="15" fill="rgb(218,194,23)" fg:x="1070" fg:w="1"/><text x="44.5931%" y="927.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="44.3431%" y="901" width="0.0414%" height="15" fill="rgb(235,66,41)" fg:x="1070" fg:w="1"/><text x="44.5931%" y="911.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTake&gt;::take_split (8 samples, 0.33%)</title><rect x="44.1774%" y="981" width="0.3315%" height="15" fill="rgb(245,217,1)" fg:x="1066" fg:w="8"/><text x="44.4274%" y="991.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (7 samples, 0.29%)</title><rect x="44.2188%" y="965" width="0.2901%" height="15" fill="rgb(229,91,1)" fg:x="1067" fg:w="7"/><text x="44.4688%" y="975.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (3 samples, 0.12%)</title><rect x="44.3846%" y="949" width="0.1243%" height="15" fill="rgb(207,101,30)" fg:x="1071" fg:w="3"/><text x="44.6346%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (3 samples, 0.12%)</title><rect x="44.3846%" y="933" width="0.1243%" height="15" fill="rgb(223,82,49)" fg:x="1071" fg:w="3"/><text x="44.6346%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (3 samples, 0.12%)</title><rect x="44.3846%" y="917" width="0.1243%" height="15" fill="rgb(218,167,17)" fg:x="1071" fg:w="3"/><text x="44.6346%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.08%)</title><rect x="44.4260%" y="901" width="0.0829%" height="15" fill="rgb(208,103,14)" fg:x="1072" fg:w="2"/><text x="44.6760%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="44.5089%" y="981" width="0.0414%" height="15" fill="rgb(238,20,8)" fg:x="1074" fg:w="1"/><text x="44.7589%" y="991.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (9 samples, 0.37%)</title><rect x="44.5504%" y="965" width="0.3730%" height="15" fill="rgb(218,80,54)" fg:x="1075" fg:w="9"/><text x="44.8004%" y="975.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int::{{closure}} (6 samples, 0.25%)</title><rect x="44.6747%" y="949" width="0.2487%" height="15" fill="rgb(240,144,17)" fg:x="1078" fg:w="6"/><text x="44.9247%" y="959.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int::_unify (3 samples, 0.12%)</title><rect x="44.7990%" y="933" width="0.1243%" height="15" fill="rgb(245,27,50)" fg:x="1081" fg:w="3"/><text x="45.0490%" y="943.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int::{{closure}}::{{closure}} (2 samples, 0.08%)</title><rect x="44.8404%" y="917" width="0.0829%" height="15" fill="rgb(251,51,7)" fg:x="1082" fg:w="2"/><text x="45.0904%" y="927.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or (2 samples, 0.08%)</title><rect x="44.8404%" y="901" width="0.0829%" height="15" fill="rgb(245,217,29)" fg:x="1082" fg:w="2"/><text x="45.0904%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check (1 samples, 0.04%)</title><rect x="44.9233%" y="917" width="0.0414%" height="15" fill="rgb(221,176,29)" fg:x="1084" fg:w="1"/><text x="45.1733%" y="927.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (1 samples, 0.04%)</title><rect x="45.0477%" y="901" width="0.0414%" height="15" fill="rgb(212,180,24)" fg:x="1087" fg:w="1"/><text x="45.2977%" y="911.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.12%)</title><rect x="45.0891%" y="901" width="0.1243%" height="15" fill="rgb(254,24,2)" fg:x="1088" fg:w="3"/><text x="45.3391%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (4 samples, 0.17%)</title><rect x="45.3378%" y="885" width="0.1658%" height="15" fill="rgb(230,100,2)" fg:x="1094" fg:w="4"/><text x="45.5878%" y="895.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.08%)</title><rect x="45.4206%" y="869" width="0.0829%" height="15" fill="rgb(219,142,25)" fg:x="1096" fg:w="2"/><text x="45.6706%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.12%)</title><rect x="45.5450%" y="869" width="0.1243%" height="15" fill="rgb(240,73,43)" fg:x="1099" fg:w="3"/><text x="45.7950%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="45.7107%" y="837" width="0.0829%" height="15" fill="rgb(214,114,15)" fg:x="1103" fg:w="2"/><text x="45.9607%" y="847.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.62%)</title><rect x="45.2134%" y="901" width="0.6216%" height="15" fill="rgb(207,130,4)" fg:x="1091" fg:w="15"/><text x="45.4634%" y="911.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.33%)</title><rect x="45.5035%" y="885" width="0.3315%" height="15" fill="rgb(221,25,40)" fg:x="1098" fg:w="8"/><text x="45.7535%" y="895.50"></text></g><g><title>core::str::validations::next_code_point (4 samples, 0.17%)</title><rect x="45.6693%" y="869" width="0.1658%" height="15" fill="rgb(241,184,7)" fg:x="1102" fg:w="4"/><text x="45.9193%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="45.6693%" y="853" width="0.1658%" height="15" fill="rgb(235,159,4)" fg:x="1102" fg:w="4"/><text x="45.9193%" y="863.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="45.7936%" y="837" width="0.0414%" height="15" fill="rgb(214,87,48)" fg:x="1105" fg:w="1"/><text x="46.0436%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="45.7936%" y="821" width="0.0414%" height="15" fill="rgb(246,198,24)" fg:x="1105" fg:w="1"/><text x="46.0436%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (27 samples, 1.12%)</title><rect x="44.9648%" y="917" width="1.1189%" height="15" fill="rgb(209,66,40)" fg:x="1085" fg:w="27"/><text x="45.2148%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (6 samples, 0.25%)</title><rect x="45.8351%" y="901" width="0.2487%" height="15" fill="rgb(233,147,39)" fg:x="1106" fg:w="6"/><text x="46.0851%" y="911.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position::{{closure}} (4 samples, 0.17%)</title><rect x="45.9179%" y="885" width="0.1658%" height="15" fill="rgb(231,145,52)" fg:x="1108" fg:w="4"/><text x="46.1679%" y="895.50"></text></g><g><title>nom::nom::digit0::{{closure}} (2 samples, 0.08%)</title><rect x="46.0008%" y="869" width="0.0829%" height="15" fill="rgb(206,20,26)" fg:x="1110" fg:w="2"/><text x="46.2508%" y="879.50"></text></g><g><title>&lt;char as nom::traits::AsChar&gt;::is_dec_digit (1 samples, 0.04%)</title><rect x="46.0423%" y="853" width="0.0414%" height="15" fill="rgb(238,220,4)" fg:x="1111" fg:w="1"/><text x="46.2923%" y="863.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_digit (1 samples, 0.04%)</title><rect x="46.0423%" y="837" width="0.0414%" height="15" fill="rgb(252,195,42)" fg:x="1111" fg:w="1"/><text x="46.2923%" y="847.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::to_digit (1 samples, 0.04%)</title><rect x="46.0423%" y="821" width="0.0414%" height="15" fill="rgb(209,10,6)" fg:x="1111" fg:w="1"/><text x="46.2923%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (29 samples, 1.20%)</title><rect x="44.9233%" y="933" width="1.2018%" height="15" fill="rgb(229,3,52)" fg:x="1084" fg:w="29"/><text x="45.1733%" y="943.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (1 samples, 0.04%)</title><rect x="46.0837%" y="917" width="0.0414%" height="15" fill="rgb(253,49,37)" fg:x="1112" fg:w="1"/><text x="46.3337%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="46.2080%" y="869" width="0.0414%" height="15" fill="rgb(240,103,49)" fg:x="1115" fg:w="1"/><text x="46.4580%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="46.2080%" y="853" width="0.0414%" height="15" fill="rgb(250,182,30)" fg:x="1115" fg:w="1"/><text x="46.4580%" y="863.50"></text></g><g><title>core::str::&lt;impl str&gt;::char_indices (6 samples, 0.25%)</title><rect x="46.1252%" y="933" width="0.2487%" height="15" fill="rgb(248,8,30)" fg:x="1113" fg:w="6"/><text x="46.3752%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (6 samples, 0.25%)</title><rect x="46.1252%" y="917" width="0.2487%" height="15" fill="rgb(237,120,30)" fg:x="1113" fg:w="6"/><text x="46.3752%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.21%)</title><rect x="46.1666%" y="901" width="0.2072%" height="15" fill="rgb(221,146,34)" fg:x="1114" fg:w="5"/><text x="46.4166%" y="911.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.21%)</title><rect x="46.1666%" y="885" width="0.2072%" height="15" fill="rgb(242,55,13)" fg:x="1114" fg:w="5"/><text x="46.4166%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (3 samples, 0.12%)</title><rect x="46.2495%" y="869" width="0.1243%" height="15" fill="rgb(242,112,31)" fg:x="1116" fg:w="3"/><text x="46.4995%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="46.3324%" y="853" width="0.0414%" height="15" fill="rgb(249,192,27)" fg:x="1118" fg:w="1"/><text x="46.5824%" y="863.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (2 samples, 0.08%)</title><rect x="46.5396%" y="885" width="0.0829%" height="15" fill="rgb(208,204,44)" fg:x="1123" fg:w="2"/><text x="46.7896%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.08%)</title><rect x="46.5396%" y="869" width="0.0829%" height="15" fill="rgb(208,93,54)" fg:x="1123" fg:w="2"/><text x="46.7896%" y="879.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="46.5810%" y="853" width="0.0414%" height="15" fill="rgb(242,1,31)" fg:x="1124" fg:w="1"/><text x="46.8310%" y="863.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="46.5810%" y="837" width="0.0414%" height="15" fill="rgb(241,83,25)" fg:x="1124" fg:w="1"/><text x="46.8310%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="46.5810%" y="821" width="0.0414%" height="15" fill="rgb(205,169,50)" fg:x="1124" fg:w="1"/><text x="46.8310%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="46.5810%" y="805" width="0.0414%" height="15" fill="rgb(239,186,37)" fg:x="1124" fg:w="1"/><text x="46.8310%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::len (1 samples, 0.04%)</title><rect x="46.6225%" y="869" width="0.0414%" height="15" fill="rgb(205,221,10)" fg:x="1125" fg:w="1"/><text x="46.8725%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (8 samples, 0.33%)</title><rect x="46.4153%" y="917" width="0.3315%" height="15" fill="rgb(218,196,15)" fg:x="1120" fg:w="8"/><text x="46.6653%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (7 samples, 0.29%)</title><rect x="46.4567%" y="901" width="0.2901%" height="15" fill="rgb(218,196,35)" fg:x="1121" fg:w="7"/><text x="46.7067%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (3 samples, 0.12%)</title><rect x="46.6225%" y="885" width="0.1243%" height="15" fill="rgb(233,63,24)" fg:x="1125" fg:w="3"/><text x="46.8725%" y="895.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.08%)</title><rect x="46.6639%" y="869" width="0.0829%" height="15" fill="rgb(225,8,4)" fg:x="1126" fg:w="2"/><text x="46.9139%" y="879.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="46.7053%" y="853" width="0.0414%" height="15" fill="rgb(234,105,35)" fg:x="1127" fg:w="1"/><text x="46.9553%" y="863.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (2 samples, 0.08%)</title><rect x="46.7468%" y="885" width="0.0829%" height="15" fill="rgb(236,21,32)" fg:x="1128" fg:w="2"/><text x="46.9968%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="46.7882%" y="869" width="0.0414%" height="15" fill="rgb(228,109,6)" fg:x="1129" fg:w="1"/><text x="47.0382%" y="879.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="46.7882%" y="853" width="0.0414%" height="15" fill="rgb(229,215,31)" fg:x="1129" fg:w="1"/><text x="47.0382%" y="863.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="46.7882%" y="837" width="0.0414%" height="15" fill="rgb(221,52,54)" fg:x="1129" fg:w="1"/><text x="47.0382%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="46.7882%" y="821" width="0.0414%" height="15" fill="rgb(252,129,43)" fg:x="1129" fg:w="1"/><text x="47.0382%" y="831.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="46.7882%" y="805" width="0.0414%" height="15" fill="rgb(248,183,27)" fg:x="1129" fg:w="1"/><text x="47.0382%" y="815.50"></text></g><g><title>ansi_parser::parsers::cursor_pos (123 samples, 5.10%)</title><rect x="41.8152%" y="997" width="5.0974%" height="15" fill="rgb(250,0,22)" fg:x="1009" fg:w="123"/><text x="42.0652%" y="1007.50">ansi_p..</text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (57 samples, 2.36%)</title><rect x="44.5504%" y="981" width="2.3622%" height="15" fill="rgb(213,166,10)" fg:x="1075" fg:w="57"/><text x="44.8004%" y="991.50">an..</text></g><g><title>nom::nom::digit0 (48 samples, 1.99%)</title><rect x="44.9233%" y="965" width="1.9892%" height="15" fill="rgb(207,163,36)" fg:x="1084" fg:w="48"/><text x="45.1733%" y="975.50">n..</text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position (48 samples, 1.99%)</title><rect x="44.9233%" y="949" width="1.9892%" height="15" fill="rgb(208,122,22)" fg:x="1084" fg:w="48"/><text x="45.1733%" y="959.50">&lt;..</text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (13 samples, 0.54%)</title><rect x="46.3738%" y="933" width="0.5387%" height="15" fill="rgb(207,104,49)" fg:x="1119" fg:w="13"/><text x="46.6238%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (4 samples, 0.17%)</title><rect x="46.7468%" y="917" width="0.1658%" height="15" fill="rgb(248,211,50)" fg:x="1128" fg:w="4"/><text x="46.9968%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (4 samples, 0.17%)</title><rect x="46.7468%" y="901" width="0.1658%" height="15" fill="rgb(217,13,45)" fg:x="1128" fg:w="4"/><text x="46.9968%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="46.8297%" y="885" width="0.0829%" height="15" fill="rgb(211,216,49)" fg:x="1130" fg:w="2"/><text x="47.0797%" y="895.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.08%)</title><rect x="46.8297%" y="869" width="0.0829%" height="15" fill="rgb(221,58,53)" fg:x="1130" fg:w="2"/><text x="47.0797%" y="879.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.08%)</title><rect x="46.8297%" y="853" width="0.0829%" height="15" fill="rgb(220,112,41)" fg:x="1130" fg:w="2"/><text x="47.0797%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="47.0783%" y="885" width="0.0414%" height="15" fill="rgb(236,38,28)" fg:x="1136" fg:w="1"/><text x="47.3283%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (4 samples, 0.17%)</title><rect x="46.9954%" y="965" width="0.1658%" height="15" fill="rgb(227,195,22)" fg:x="1134" fg:w="4"/><text x="47.2454%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.17%)</title><rect x="46.9954%" y="949" width="0.1658%" height="15" fill="rgb(214,55,33)" fg:x="1134" fg:w="4"/><text x="47.2454%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="47.0369%" y="933" width="0.1243%" height="15" fill="rgb(248,80,13)" fg:x="1135" fg:w="3"/><text x="47.2869%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.12%)</title><rect x="47.0369%" y="917" width="0.1243%" height="15" fill="rgb(238,52,6)" fg:x="1135" fg:w="3"/><text x="47.2869%" y="927.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="47.0783%" y="901" width="0.0829%" height="15" fill="rgb(224,198,47)" fg:x="1136" fg:w="2"/><text x="47.3283%" y="911.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.04%)</title><rect x="47.1198%" y="885" width="0.0414%" height="15" fill="rgb(233,171,20)" fg:x="1137" fg:w="1"/><text x="47.3698%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="47.1198%" y="869" width="0.0414%" height="15" fill="rgb(241,30,25)" fg:x="1137" fg:w="1"/><text x="47.3698%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="47.1198%" y="853" width="0.0414%" height="15" fill="rgb(207,171,38)" fg:x="1137" fg:w="1"/><text x="47.3698%" y="863.50"></text></g><g><title>ansi_parser::parsers::cursor_restore (7 samples, 0.29%)</title><rect x="46.9126%" y="997" width="0.2901%" height="15" fill="rgb(234,70,1)" fg:x="1132" fg:w="7"/><text x="47.1626%" y="1007.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (5 samples, 0.21%)</title><rect x="46.9954%" y="981" width="0.2072%" height="15" fill="rgb(232,178,18)" fg:x="1134" fg:w="5"/><text x="47.2454%" y="991.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (1 samples, 0.04%)</title><rect x="47.1612%" y="965" width="0.0414%" height="15" fill="rgb(241,78,40)" fg:x="1138" fg:w="1"/><text x="47.4112%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.12%)</title><rect x="47.5756%" y="885" width="0.1243%" height="15" fill="rgb(222,35,25)" fg:x="1148" fg:w="3"/><text x="47.8256%" y="895.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.04%)</title><rect x="47.6585%" y="869" width="0.0414%" height="15" fill="rgb(207,92,16)" fg:x="1150" fg:w="1"/><text x="47.9085%" y="879.50"></text></g><g><title>core::char::convert::from_u32_unchecked (1 samples, 0.04%)</title><rect x="47.6585%" y="853" width="0.0414%" height="15" fill="rgb(216,59,51)" fg:x="1150" fg:w="1"/><text x="47.9085%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.12%)</title><rect x="47.7414%" y="869" width="0.1243%" height="15" fill="rgb(213,80,28)" fg:x="1152" fg:w="3"/><text x="47.9914%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.37%)</title><rect x="47.5342%" y="933" width="0.3730%" height="15" fill="rgb(220,93,7)" fg:x="1147" fg:w="9"/><text x="47.7842%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (9 samples, 0.37%)</title><rect x="47.5342%" y="917" width="0.3730%" height="15" fill="rgb(225,24,44)" fg:x="1147" fg:w="9"/><text x="47.7842%" y="927.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.33%)</title><rect x="47.5756%" y="901" width="0.3315%" height="15" fill="rgb(243,74,40)" fg:x="1148" fg:w="8"/><text x="47.8256%" y="911.50"></text></g><g><title>core::str::validations::next_code_point (5 samples, 0.21%)</title><rect x="47.7000%" y="885" width="0.2072%" height="15" fill="rgb(228,39,7)" fg:x="1151" fg:w="5"/><text x="47.9500%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="47.8657%" y="869" width="0.0414%" height="15" fill="rgb(227,79,8)" fg:x="1155" fg:w="1"/><text x="48.1157%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="47.8657%" y="853" width="0.0414%" height="15" fill="rgb(236,58,11)" fg:x="1155" fg:w="1"/><text x="48.1157%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="47.8657%" y="837" width="0.0414%" height="15" fill="rgb(249,63,35)" fg:x="1155" fg:w="1"/><text x="48.1157%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.54%)</title><rect x="47.4099%" y="949" width="0.5387%" height="15" fill="rgb(252,114,16)" fg:x="1144" fg:w="13"/><text x="47.6599%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::{{closure}} (1 samples, 0.04%)</title><rect x="47.9072%" y="933" width="0.0414%" height="15" fill="rgb(254,151,24)" fg:x="1156" fg:w="1"/><text x="48.1572%" y="943.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare::{{closure}} (1 samples, 0.04%)</title><rect x="47.9072%" y="917" width="0.0414%" height="15" fill="rgb(253,54,39)" fg:x="1156" fg:w="1"/><text x="48.1572%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (14 samples, 0.58%)</title><rect x="47.4099%" y="965" width="0.5802%" height="15" fill="rgb(243,25,45)" fg:x="1144" fg:w="14"/><text x="47.6599%" y="975.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (1 samples, 0.04%)</title><rect x="47.9486%" y="949" width="0.0414%" height="15" fill="rgb(234,134,9)" fg:x="1157" fg:w="1"/><text x="48.1986%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.04%)</title><rect x="47.9901%" y="965" width="0.0414%" height="15" fill="rgb(227,166,31)" fg:x="1158" fg:w="1"/><text x="48.2401%" y="975.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (18 samples, 0.75%)</title><rect x="47.3684%" y="981" width="0.7460%" height="15" fill="rgb(245,143,41)" fg:x="1143" fg:w="18"/><text x="47.6184%" y="991.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (2 samples, 0.08%)</title><rect x="48.0315%" y="965" width="0.0829%" height="15" fill="rgb(238,181,32)" fg:x="1159" fg:w="2"/><text x="48.2815%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.08%)</title><rect x="48.0315%" y="949" width="0.0829%" height="15" fill="rgb(224,113,18)" fg:x="1159" fg:w="2"/><text x="48.2815%" y="959.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="48.0729%" y="933" width="0.0414%" height="15" fill="rgb(240,229,28)" fg:x="1160" fg:w="1"/><text x="48.3229%" y="943.50"></text></g><g><title>ansi_parser::parsers::cursor_save (23 samples, 0.95%)</title><rect x="47.2027%" y="997" width="0.9532%" height="15" fill="rgb(250,185,3)" fg:x="1139" fg:w="23"/><text x="47.4527%" y="1007.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for &amp;T&gt;::clone (1 samples, 0.04%)</title><rect x="48.1144%" y="981" width="0.0414%" height="15" fill="rgb(212,59,25)" fg:x="1161" fg:w="1"/><text x="48.3644%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.08%)</title><rect x="48.4874%" y="901" width="0.0829%" height="15" fill="rgb(221,87,20)" fg:x="1170" fg:w="2"/><text x="48.7374%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.12%)</title><rect x="48.5702%" y="885" width="0.1243%" height="15" fill="rgb(213,74,28)" fg:x="1172" fg:w="3"/><text x="48.8202%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (2 samples, 0.08%)</title><rect x="48.7775%" y="869" width="0.0829%" height="15" fill="rgb(224,132,34)" fg:x="1177" fg:w="2"/><text x="49.0275%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="48.9847%" y="853" width="0.0414%" height="15" fill="rgb(222,101,24)" fg:x="1182" fg:w="1"/><text x="49.2347%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="49.0261%" y="853" width="0.0829%" height="15" fill="rgb(254,142,4)" fg:x="1183" fg:w="2"/><text x="49.2761%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.79%)</title><rect x="48.4045%" y="933" width="0.7874%" height="15" fill="rgb(230,229,49)" fg:x="1168" fg:w="19"/><text x="48.6545%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (19 samples, 0.79%)</title><rect x="48.4045%" y="917" width="0.7874%" height="15" fill="rgb(238,70,47)" fg:x="1168" fg:w="19"/><text x="48.6545%" y="927.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.62%)</title><rect x="48.5702%" y="901" width="0.6216%" height="15" fill="rgb(231,160,17)" fg:x="1172" fg:w="15"/><text x="48.8202%" y="911.50"></text></g><g><title>core::str::validations::next_code_point (12 samples, 0.50%)</title><rect x="48.6946%" y="885" width="0.4973%" height="15" fill="rgb(218,68,53)" fg:x="1175" fg:w="12"/><text x="48.9446%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.33%)</title><rect x="48.8603%" y="869" width="0.3315%" height="15" fill="rgb(236,111,10)" fg:x="1179" fg:w="8"/><text x="49.1103%" y="879.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.08%)</title><rect x="49.1090%" y="853" width="0.0829%" height="15" fill="rgb(224,34,41)" fg:x="1185" fg:w="2"/><text x="49.3590%" y="863.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="49.1504%" y="837" width="0.0414%" height="15" fill="rgb(241,118,19)" fg:x="1186" fg:w="1"/><text x="49.4004%" y="847.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="49.1919%" y="933" width="0.0414%" height="15" fill="rgb(238,129,25)" fg:x="1187" fg:w="1"/><text x="49.4419%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (21 samples, 0.87%)</title><rect x="48.4045%" y="965" width="0.8703%" height="15" fill="rgb(238,22,31)" fg:x="1168" fg:w="21"/><text x="48.6545%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (21 samples, 0.87%)</title><rect x="48.4045%" y="949" width="0.8703%" height="15" fill="rgb(222,174,48)" fg:x="1168" fg:w="21"/><text x="48.6545%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::{{closure}} (1 samples, 0.04%)</title><rect x="49.2333%" y="933" width="0.0414%" height="15" fill="rgb(206,152,40)" fg:x="1188" fg:w="1"/><text x="49.4833%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.04%)</title><rect x="49.2748%" y="965" width="0.0414%" height="15" fill="rgb(218,99,54)" fg:x="1189" fg:w="1"/><text x="49.5248%" y="975.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="49.4405%" y="917" width="0.0414%" height="15" fill="rgb(220,174,26)" fg:x="1193" fg:w="1"/><text x="49.6905%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="49.4405%" y="901" width="0.0414%" height="15" fill="rgb(245,116,9)" fg:x="1193" fg:w="1"/><text x="49.6905%" y="911.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (5 samples, 0.21%)</title><rect x="49.3162%" y="965" width="0.2072%" height="15" fill="rgb(209,72,35)" fg:x="1190" fg:w="5"/><text x="49.5662%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (3 samples, 0.12%)</title><rect x="49.3991%" y="949" width="0.1243%" height="15" fill="rgb(226,126,21)" fg:x="1192" fg:w="3"/><text x="49.6491%" y="959.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (3 samples, 0.12%)</title><rect x="49.3991%" y="933" width="0.1243%" height="15" fill="rgb(227,192,1)" fg:x="1192" fg:w="3"/><text x="49.6491%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (1 samples, 0.04%)</title><rect x="49.4820%" y="917" width="0.0414%" height="15" fill="rgb(237,180,29)" fg:x="1194" fg:w="1"/><text x="49.7320%" y="927.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (28 samples, 1.16%)</title><rect x="48.4045%" y="981" width="1.1604%" height="15" fill="rgb(230,197,35)" fg:x="1168" fg:w="28"/><text x="48.6545%" y="991.50"></text></g><g><title>core::str::&lt;impl str&gt;::len (1 samples, 0.04%)</title><rect x="49.5234%" y="965" width="0.0414%" height="15" fill="rgb(246,193,31)" fg:x="1195" fg:w="1"/><text x="49.7734%" y="975.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputLength&gt;::input_len (1 samples, 0.04%)</title><rect x="49.5649%" y="981" width="0.0414%" height="15" fill="rgb(241,36,4)" fg:x="1196" fg:w="1"/><text x="49.8149%" y="991.50"></text></g><g><title>core::str::&lt;impl str&gt;::len (1 samples, 0.04%)</title><rect x="49.6063%" y="933" width="0.0414%" height="15" fill="rgb(241,130,17)" fg:x="1197" fg:w="1"/><text x="49.8563%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (6 samples, 0.25%)</title><rect x="49.6063%" y="949" width="0.2487%" height="15" fill="rgb(206,137,32)" fg:x="1197" fg:w="6"/><text x="49.8563%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (5 samples, 0.21%)</title><rect x="49.6477%" y="933" width="0.2072%" height="15" fill="rgb(237,228,51)" fg:x="1198" fg:w="5"/><text x="49.8977%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (3 samples, 0.12%)</title><rect x="49.7306%" y="917" width="0.1243%" height="15" fill="rgb(243,6,42)" fg:x="1200" fg:w="3"/><text x="49.9806%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.08%)</title><rect x="49.7721%" y="901" width="0.0829%" height="15" fill="rgb(251,74,28)" fg:x="1201" fg:w="2"/><text x="50.0221%" y="911.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="49.8135%" y="885" width="0.0414%" height="15" fill="rgb(218,20,49)" fg:x="1202" fg:w="1"/><text x="50.0635%" y="895.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="49.8135%" y="869" width="0.0414%" height="15" fill="rgb(238,28,14)" fg:x="1202" fg:w="1"/><text x="50.0635%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="49.8135%" y="853" width="0.0414%" height="15" fill="rgb(229,40,46)" fg:x="1202" fg:w="1"/><text x="50.0635%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="49.8135%" y="837" width="0.0414%" height="15" fill="rgb(244,195,20)" fg:x="1202" fg:w="1"/><text x="50.0635%" y="847.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTake&gt;::take_split (7 samples, 0.29%)</title><rect x="49.6063%" y="981" width="0.2901%" height="15" fill="rgb(253,56,35)" fg:x="1197" fg:w="7"/><text x="49.8563%" y="991.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (7 samples, 0.29%)</title><rect x="49.6063%" y="965" width="0.2901%" height="15" fill="rgb(210,149,44)" fg:x="1197" fg:w="7"/><text x="49.8563%" y="975.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (1 samples, 0.04%)</title><rect x="49.8550%" y="949" width="0.0414%" height="15" fill="rgb(240,135,12)" fg:x="1203" fg:w="1"/><text x="50.1050%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (1 samples, 0.04%)</title><rect x="49.8550%" y="933" width="0.0414%" height="15" fill="rgb(251,24,50)" fg:x="1203" fg:w="1"/><text x="50.1050%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="49.8550%" y="917" width="0.0414%" height="15" fill="rgb(243,200,47)" fg:x="1203" fg:w="1"/><text x="50.1050%" y="927.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="49.8550%" y="901" width="0.0414%" height="15" fill="rgb(224,166,26)" fg:x="1203" fg:w="1"/><text x="50.1050%" y="911.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="49.8550%" y="885" width="0.0414%" height="15" fill="rgb(233,0,47)" fg:x="1203" fg:w="1"/><text x="50.1050%" y="895.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (2 samples, 0.08%)</title><rect x="49.8964%" y="965" width="0.0829%" height="15" fill="rgb(253,80,5)" fg:x="1204" fg:w="2"/><text x="50.1464%" y="975.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int::{{closure}} (1 samples, 0.04%)</title><rect x="49.9378%" y="949" width="0.0414%" height="15" fill="rgb(214,133,25)" fg:x="1205" fg:w="1"/><text x="50.1878%" y="959.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int::_unify (1 samples, 0.04%)</title><rect x="49.9378%" y="933" width="0.0414%" height="15" fill="rgb(209,27,14)" fg:x="1205" fg:w="1"/><text x="50.1878%" y="943.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int::{{closure}}::{{closure}} (1 samples, 0.04%)</title><rect x="49.9378%" y="917" width="0.0414%" height="15" fill="rgb(219,102,51)" fg:x="1205" fg:w="1"/><text x="50.1878%" y="927.50"></text></g><g><title>&lt;core::ops::control_flow::ControlFlow&lt;B,C&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="50.2694%" y="901" width="0.0414%" height="15" fill="rgb(237,18,16)" fg:x="1213" fg:w="1"/><text x="50.5194%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (2 samples, 0.08%)</title><rect x="50.3937%" y="885" width="0.0829%" height="15" fill="rgb(241,85,17)" fg:x="1216" fg:w="2"/><text x="50.6437%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.21%)</title><rect x="50.5180%" y="869" width="0.2072%" height="15" fill="rgb(236,90,42)" fg:x="1219" fg:w="5"/><text x="50.7680%" y="879.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (2 samples, 0.08%)</title><rect x="50.6424%" y="853" width="0.0829%" height="15" fill="rgb(249,57,21)" fg:x="1222" fg:w="2"/><text x="50.8924%" y="863.50"></text></g><g><title>core::char::convert::from_u32_unchecked (1 samples, 0.04%)</title><rect x="50.6838%" y="837" width="0.0414%" height="15" fill="rgb(243,12,36)" fg:x="1223" fg:w="1"/><text x="50.9338%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="50.7667%" y="837" width="0.0414%" height="15" fill="rgb(253,128,47)" fg:x="1225" fg:w="1"/><text x="51.0167%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="50.7667%" y="821" width="0.0414%" height="15" fill="rgb(207,33,20)" fg:x="1225" fg:w="1"/><text x="51.0167%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="50.8081%" y="837" width="0.0414%" height="15" fill="rgb(233,215,35)" fg:x="1226" fg:w="1"/><text x="51.0581%" y="847.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.58%)</title><rect x="50.3108%" y="901" width="0.5802%" height="15" fill="rgb(249,188,52)" fg:x="1214" fg:w="14"/><text x="50.5608%" y="911.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.41%)</title><rect x="50.4766%" y="885" width="0.4144%" height="15" fill="rgb(225,12,32)" fg:x="1218" fg:w="10"/><text x="50.7266%" y="895.50"></text></g><g><title>core::str::validations::next_code_point (4 samples, 0.17%)</title><rect x="50.7252%" y="869" width="0.1658%" height="15" fill="rgb(247,98,14)" fg:x="1224" fg:w="4"/><text x="50.9752%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="50.7667%" y="853" width="0.1243%" height="15" fill="rgb(247,219,48)" fg:x="1225" fg:w="3"/><text x="51.0167%" y="863.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="50.8496%" y="837" width="0.0414%" height="15" fill="rgb(253,60,48)" fg:x="1227" fg:w="1"/><text x="51.0996%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (23 samples, 0.95%)</title><rect x="50.0622%" y="917" width="0.9532%" height="15" fill="rgb(245,15,52)" fg:x="1208" fg:w="23"/><text x="50.3122%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (3 samples, 0.12%)</title><rect x="50.8910%" y="901" width="0.1243%" height="15" fill="rgb(220,133,28)" fg:x="1228" fg:w="3"/><text x="51.1410%" y="911.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position::{{closure}} (3 samples, 0.12%)</title><rect x="50.8910%" y="885" width="0.1243%" height="15" fill="rgb(217,180,4)" fg:x="1228" fg:w="3"/><text x="51.1410%" y="895.50"></text></g><g><title>nom::nom::digit0::{{closure}} (3 samples, 0.12%)</title><rect x="50.8910%" y="869" width="0.1243%" height="15" fill="rgb(251,24,1)" fg:x="1228" fg:w="3"/><text x="51.1410%" y="879.50"></text></g><g><title>&lt;char as nom::traits::AsChar&gt;::is_dec_digit (1 samples, 0.04%)</title><rect x="50.9739%" y="853" width="0.0414%" height="15" fill="rgb(212,185,49)" fg:x="1230" fg:w="1"/><text x="51.2239%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (25 samples, 1.04%)</title><rect x="50.0207%" y="933" width="1.0361%" height="15" fill="rgb(215,175,22)" fg:x="1207" fg:w="25"/><text x="50.2707%" y="943.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (1 samples, 0.04%)</title><rect x="51.0153%" y="917" width="0.0414%" height="15" fill="rgb(250,205,14)" fg:x="1231" fg:w="1"/><text x="51.2653%" y="927.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.04%)</title><rect x="51.1397%" y="885" width="0.0414%" height="15" fill="rgb(225,211,22)" fg:x="1234" fg:w="1"/><text x="51.3897%" y="895.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (4 samples, 0.17%)</title><rect x="51.0568%" y="917" width="0.1658%" height="15" fill="rgb(251,179,42)" fg:x="1232" fg:w="4"/><text x="51.3068%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (3 samples, 0.12%)</title><rect x="51.0982%" y="901" width="0.1243%" height="15" fill="rgb(208,216,51)" fg:x="1233" fg:w="3"/><text x="51.3482%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="51.1811%" y="885" width="0.0414%" height="15" fill="rgb(235,36,11)" fg:x="1235" fg:w="1"/><text x="51.4311%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="51.1811%" y="869" width="0.0414%" height="15" fill="rgb(213,189,28)" fg:x="1235" fg:w="1"/><text x="51.4311%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="51.1811%" y="853" width="0.0414%" height="15" fill="rgb(227,203,42)" fg:x="1235" fg:w="1"/><text x="51.4311%" y="863.50"></text></g><g><title>ansi_parser::parsers::cursor_up (76 samples, 3.15%)</title><rect x="48.1558%" y="997" width="3.1496%" height="15" fill="rgb(244,72,36)" fg:x="1162" fg:w="76"/><text x="48.4058%" y="1007.50">ans..</text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (34 samples, 1.41%)</title><rect x="49.8964%" y="981" width="1.4090%" height="15" fill="rgb(213,53,17)" fg:x="1204" fg:w="34"/><text x="50.1464%" y="991.50"></text></g><g><title>nom::nom::digit0 (32 samples, 1.33%)</title><rect x="49.9793%" y="965" width="1.3262%" height="15" fill="rgb(207,167,3)" fg:x="1206" fg:w="32"/><text x="50.2293%" y="975.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position (32 samples, 1.33%)</title><rect x="49.9793%" y="949" width="1.3262%" height="15" fill="rgb(216,98,30)" fg:x="1206" fg:w="32"/><text x="50.2293%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (6 samples, 0.25%)</title><rect x="51.0568%" y="933" width="0.2487%" height="15" fill="rgb(236,123,15)" fg:x="1232" fg:w="6"/><text x="51.3068%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (2 samples, 0.08%)</title><rect x="51.2225%" y="917" width="0.0829%" height="15" fill="rgb(248,81,50)" fg:x="1236" fg:w="2"/><text x="51.4725%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (2 samples, 0.08%)</title><rect x="51.2225%" y="901" width="0.0829%" height="15" fill="rgb(214,120,4)" fg:x="1236" fg:w="2"/><text x="51.4725%" y="911.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (2 samples, 0.08%)</title><rect x="51.2225%" y="885" width="0.0829%" height="15" fill="rgb(208,179,34)" fg:x="1236" fg:w="2"/><text x="51.4725%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="51.2640%" y="869" width="0.0414%" height="15" fill="rgb(227,140,7)" fg:x="1237" fg:w="1"/><text x="51.5140%" y="879.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="51.5541%" y="901" width="0.0414%" height="15" fill="rgb(214,22,6)" fg:x="1244" fg:w="1"/><text x="51.8041%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="51.5955%" y="885" width="0.0414%" height="15" fill="rgb(207,137,27)" fg:x="1245" fg:w="1"/><text x="51.8455%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="51.7199%" y="869" width="0.0414%" height="15" fill="rgb(210,8,46)" fg:x="1248" fg:w="1"/><text x="51.9699%" y="879.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="51.8856%" y="837" width="0.0414%" height="15" fill="rgb(240,16,54)" fg:x="1252" fg:w="1"/><text x="52.1356%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.41%)</title><rect x="51.5541%" y="933" width="0.4144%" height="15" fill="rgb(211,209,29)" fg:x="1244" fg:w="10"/><text x="51.8041%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (10 samples, 0.41%)</title><rect x="51.5541%" y="917" width="0.4144%" height="15" fill="rgb(226,228,24)" fg:x="1244" fg:w="10"/><text x="51.8041%" y="927.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.37%)</title><rect x="51.5955%" y="901" width="0.3730%" height="15" fill="rgb(222,84,9)" fg:x="1245" fg:w="9"/><text x="51.8455%" y="911.50"></text></g><g><title>core::str::validations::next_code_point (8 samples, 0.33%)</title><rect x="51.6370%" y="885" width="0.3315%" height="15" fill="rgb(234,203,30)" fg:x="1246" fg:w="8"/><text x="51.8870%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.21%)</title><rect x="51.7613%" y="869" width="0.2072%" height="15" fill="rgb(238,109,14)" fg:x="1249" fg:w="5"/><text x="52.0113%" y="879.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (3 samples, 0.12%)</title><rect x="51.8442%" y="853" width="0.1243%" height="15" fill="rgb(233,206,34)" fg:x="1251" fg:w="3"/><text x="52.0942%" y="863.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="51.9271%" y="837" width="0.0414%" height="15" fill="rgb(220,167,47)" fg:x="1253" fg:w="1"/><text x="52.1771%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (12 samples, 0.50%)</title><rect x="51.5126%" y="965" width="0.4973%" height="15" fill="rgb(238,105,10)" fg:x="1243" fg:w="12"/><text x="51.7626%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.50%)</title><rect x="51.5126%" y="949" width="0.4973%" height="15" fill="rgb(213,227,17)" fg:x="1243" fg:w="12"/><text x="51.7626%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::{{closure}} (1 samples, 0.04%)</title><rect x="51.9685%" y="933" width="0.0414%" height="15" fill="rgb(217,132,38)" fg:x="1254" fg:w="1"/><text x="52.2185%" y="943.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare::{{closure}} (1 samples, 0.04%)</title><rect x="51.9685%" y="917" width="0.0414%" height="15" fill="rgb(242,146,4)" fg:x="1254" fg:w="1"/><text x="52.2185%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.04%)</title><rect x="52.0099%" y="965" width="0.0414%" height="15" fill="rgb(212,61,9)" fg:x="1255" fg:w="1"/><text x="52.2599%" y="975.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.04%)</title><rect x="52.0099%" y="949" width="0.0414%" height="15" fill="rgb(247,126,22)" fg:x="1255" fg:w="1"/><text x="52.2599%" y="959.50"></text></g><g><title>ansi_parser::parsers::erase_display (19 samples, 0.79%)</title><rect x="51.3054%" y="997" width="0.7874%" height="15" fill="rgb(220,196,2)" fg:x="1238" fg:w="19"/><text x="51.5554%" y="1007.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (14 samples, 0.58%)</title><rect x="51.5126%" y="981" width="0.5802%" height="15" fill="rgb(208,46,4)" fg:x="1243" fg:w="14"/><text x="51.7626%" y="991.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (1 samples, 0.04%)</title><rect x="52.0514%" y="965" width="0.0414%" height="15" fill="rgb(252,104,46)" fg:x="1256" fg:w="1"/><text x="52.3014%" y="975.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="52.3000%" y="869" width="0.0414%" height="15" fill="rgb(237,152,48)" fg:x="1262" fg:w="1"/><text x="52.5500%" y="879.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="52.3829%" y="837" width="0.0414%" height="15" fill="rgb(221,59,37)" fg:x="1264" fg:w="1"/><text x="52.6329%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (7 samples, 0.29%)</title><rect x="52.1757%" y="965" width="0.2901%" height="15" fill="rgb(209,202,51)" fg:x="1259" fg:w="7"/><text x="52.4257%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.29%)</title><rect x="52.1757%" y="949" width="0.2901%" height="15" fill="rgb(228,81,30)" fg:x="1259" fg:w="7"/><text x="52.4257%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.29%)</title><rect x="52.1757%" y="933" width="0.2901%" height="15" fill="rgb(227,42,39)" fg:x="1259" fg:w="7"/><text x="52.4257%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (7 samples, 0.29%)</title><rect x="52.1757%" y="917" width="0.2901%" height="15" fill="rgb(221,26,2)" fg:x="1259" fg:w="7"/><text x="52.4257%" y="927.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.29%)</title><rect x="52.1757%" y="901" width="0.2901%" height="15" fill="rgb(254,61,31)" fg:x="1259" fg:w="7"/><text x="52.4257%" y="911.50"></text></g><g><title>core::str::validations::next_code_point (6 samples, 0.25%)</title><rect x="52.2172%" y="885" width="0.2487%" height="15" fill="rgb(222,173,38)" fg:x="1260" fg:w="6"/><text x="52.4672%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="52.3415%" y="869" width="0.1243%" height="15" fill="rgb(218,50,12)" fg:x="1263" fg:w="3"/><text x="52.5915%" y="879.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.08%)</title><rect x="52.3829%" y="853" width="0.0829%" height="15" fill="rgb(223,88,40)" fg:x="1264" fg:w="2"/><text x="52.6329%" y="863.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="52.4244%" y="837" width="0.0414%" height="15" fill="rgb(237,54,19)" fg:x="1265" fg:w="1"/><text x="52.6744%" y="847.50"></text></g><g><title>ansi_parser::parsers::erase_line (10 samples, 0.41%)</title><rect x="52.0928%" y="997" width="0.4144%" height="15" fill="rgb(251,129,25)" fg:x="1257" fg:w="10"/><text x="52.3428%" y="1007.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (8 samples, 0.33%)</title><rect x="52.1757%" y="981" width="0.3315%" height="15" fill="rgb(238,97,19)" fg:x="1259" fg:w="8"/><text x="52.4257%" y="991.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (1 samples, 0.04%)</title><rect x="52.4658%" y="965" width="0.0414%" height="15" fill="rgb(240,169,18)" fg:x="1266" fg:w="1"/><text x="52.7158%" y="975.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (1 samples, 0.04%)</title><rect x="52.4658%" y="949" width="0.0414%" height="15" fill="rgb(230,187,49)" fg:x="1266" fg:w="1"/><text x="52.7158%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="52.7145%" y="885" width="0.0414%" height="15" fill="rgb(209,44,26)" fg:x="1272" fg:w="1"/><text x="52.9645%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.21%)</title><rect x="52.5901%" y="949" width="0.2072%" height="15" fill="rgb(244,0,6)" fg:x="1269" fg:w="5"/><text x="52.8401%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="52.7145%" y="933" width="0.0829%" height="15" fill="rgb(248,18,21)" fg:x="1272" fg:w="2"/><text x="52.9645%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.08%)</title><rect x="52.7145%" y="917" width="0.0829%" height="15" fill="rgb(245,180,19)" fg:x="1272" fg:w="2"/><text x="52.9645%" y="927.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="52.7145%" y="901" width="0.0829%" height="15" fill="rgb(252,118,36)" fg:x="1272" fg:w="2"/><text x="52.9645%" y="911.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.04%)</title><rect x="52.7559%" y="885" width="0.0414%" height="15" fill="rgb(210,224,19)" fg:x="1273" fg:w="1"/><text x="53.0059%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="52.7559%" y="869" width="0.0414%" height="15" fill="rgb(218,30,24)" fg:x="1273" fg:w="1"/><text x="53.0059%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="52.7559%" y="853" width="0.0414%" height="15" fill="rgb(219,75,50)" fg:x="1273" fg:w="1"/><text x="53.0059%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="52.7559%" y="837" width="0.0414%" height="15" fill="rgb(234,72,50)" fg:x="1273" fg:w="1"/><text x="53.0059%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (7 samples, 0.29%)</title><rect x="52.5487%" y="965" width="0.2901%" height="15" fill="rgb(219,100,48)" fg:x="1268" fg:w="7"/><text x="52.7987%" y="975.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (1 samples, 0.04%)</title><rect x="52.7973%" y="949" width="0.0414%" height="15" fill="rgb(253,5,41)" fg:x="1274" fg:w="1"/><text x="53.0473%" y="959.50"></text></g><g><title>ansi_parser::parsers::escape (10 samples, 0.41%)</title><rect x="52.5073%" y="997" width="0.4144%" height="15" fill="rgb(247,181,11)" fg:x="1267" fg:w="10"/><text x="52.7573%" y="1007.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (9 samples, 0.37%)</title><rect x="52.5487%" y="981" width="0.3730%" height="15" fill="rgb(222,223,25)" fg:x="1268" fg:w="9"/><text x="52.7987%" y="991.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (2 samples, 0.08%)</title><rect x="52.8388%" y="965" width="0.0829%" height="15" fill="rgb(214,198,28)" fg:x="1275" fg:w="2"/><text x="53.0888%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.08%)</title><rect x="52.8388%" y="949" width="0.0829%" height="15" fill="rgb(230,46,43)" fg:x="1275" fg:w="2"/><text x="53.0888%" y="959.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.08%)</title><rect x="52.8388%" y="933" width="0.0829%" height="15" fill="rgb(233,65,53)" fg:x="1275" fg:w="2"/><text x="53.0888%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="52.8802%" y="917" width="0.0414%" height="15" fill="rgb(221,121,27)" fg:x="1276" fg:w="1"/><text x="53.1302%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="52.8802%" y="901" width="0.0414%" height="15" fill="rgb(247,70,47)" fg:x="1276" fg:w="1"/><text x="53.1302%" y="911.50"></text></g><g><title>[libc.so.6] (3 samples, 0.12%)</title><rect x="52.9217%" y="981" width="0.1243%" height="15" fill="rgb(228,85,35)" fg:x="1277" fg:w="3"/><text x="53.1717%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::FromResidual&gt;::from_residual (1 samples, 0.04%)</title><rect x="53.7091%" y="885" width="0.0414%" height="15" fill="rgb(209,50,18)" fg:x="1296" fg:w="1"/><text x="53.9591%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="53.7505%" y="885" width="0.0414%" height="15" fill="rgb(250,19,35)" fg:x="1297" fg:w="1"/><text x="54.0005%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.17%)</title><rect x="53.7920%" y="869" width="0.1658%" height="15" fill="rgb(253,107,29)" fg:x="1298" fg:w="4"/><text x="54.0420%" y="879.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (2 samples, 0.08%)</title><rect x="53.8748%" y="853" width="0.0829%" height="15" fill="rgb(252,179,29)" fg:x="1300" fg:w="2"/><text x="54.1248%" y="863.50"></text></g><g><title>core::char::convert::from_u32_unchecked (1 samples, 0.04%)</title><rect x="53.9163%" y="837" width="0.0414%" height="15" fill="rgb(238,194,6)" fg:x="1301" fg:w="1"/><text x="54.1663%" y="847.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="54.0821%" y="853" width="0.0414%" height="15" fill="rgb(238,164,29)" fg:x="1305" fg:w="1"/><text x="54.3321%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="54.2478%" y="837" width="0.0414%" height="15" fill="rgb(224,25,9)" fg:x="1309" fg:w="1"/><text x="54.4978%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="54.2893%" y="837" width="0.0414%" height="15" fill="rgb(244,153,23)" fg:x="1310" fg:w="1"/><text x="54.5393%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="54.2893%" y="821" width="0.0414%" height="15" fill="rgb(212,203,14)" fg:x="1310" fg:w="1"/><text x="54.5393%" y="831.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="54.3307%" y="837" width="0.0414%" height="15" fill="rgb(220,164,20)" fg:x="1311" fg:w="1"/><text x="54.5807%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.91%)</title><rect x="53.5019%" y="917" width="0.9117%" height="15" fill="rgb(222,203,48)" fg:x="1291" fg:w="22"/><text x="53.7519%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (22 samples, 0.91%)</title><rect x="53.5019%" y="901" width="0.9117%" height="15" fill="rgb(215,159,22)" fg:x="1291" fg:w="22"/><text x="53.7519%" y="911.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.62%)</title><rect x="53.7920%" y="885" width="0.6216%" height="15" fill="rgb(216,183,47)" fg:x="1298" fg:w="15"/><text x="54.0420%" y="895.50"></text></g><g><title>core::str::validations::next_code_point (11 samples, 0.46%)</title><rect x="53.9577%" y="869" width="0.4559%" height="15" fill="rgb(229,195,25)" fg:x="1302" fg:w="11"/><text x="54.2077%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.29%)</title><rect x="54.1235%" y="853" width="0.2901%" height="15" fill="rgb(224,132,51)" fg:x="1306" fg:w="7"/><text x="54.3735%" y="863.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="54.3722%" y="837" width="0.0414%" height="15" fill="rgb(240,63,7)" fg:x="1312" fg:w="1"/><text x="54.6222%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="54.3722%" y="821" width="0.0414%" height="15" fill="rgb(249,182,41)" fg:x="1312" fg:w="1"/><text x="54.6222%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (25 samples, 1.04%)</title><rect x="53.5019%" y="949" width="1.0361%" height="15" fill="rgb(243,47,26)" fg:x="1291" fg:w="25"/><text x="53.7519%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (25 samples, 1.04%)</title><rect x="53.5019%" y="933" width="1.0361%" height="15" fill="rgb(233,48,2)" fg:x="1291" fg:w="25"/><text x="53.7519%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::{{closure}} (3 samples, 0.12%)</title><rect x="54.4136%" y="917" width="0.1243%" height="15" fill="rgb(244,165,34)" fg:x="1313" fg:w="3"/><text x="54.6636%" y="927.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="54.6208%" y="933" width="0.0414%" height="15" fill="rgb(207,89,7)" fg:x="1318" fg:w="1"/><text x="54.8708%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (4 samples, 0.17%)</title><rect x="54.5379%" y="949" width="0.1658%" height="15" fill="rgb(244,117,36)" fg:x="1316" fg:w="4"/><text x="54.7879%" y="959.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (1 samples, 0.04%)</title><rect x="54.6622%" y="933" width="0.0414%" height="15" fill="rgb(226,144,34)" fg:x="1319" fg:w="1"/><text x="54.9122%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (1 samples, 0.04%)</title><rect x="54.6622%" y="917" width="0.0414%" height="15" fill="rgb(213,23,19)" fg:x="1319" fg:w="1"/><text x="54.9122%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="54.8280%" y="901" width="0.0414%" height="15" fill="rgb(217,75,12)" fg:x="1323" fg:w="1"/><text x="55.0780%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="54.8280%" y="885" width="0.0414%" height="15" fill="rgb(224,159,17)" fg:x="1323" fg:w="1"/><text x="55.0780%" y="895.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (5 samples, 0.21%)</title><rect x="54.7037%" y="949" width="0.2072%" height="15" fill="rgb(217,118,1)" fg:x="1320" fg:w="5"/><text x="54.9537%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (4 samples, 0.17%)</title><rect x="54.7451%" y="933" width="0.1658%" height="15" fill="rgb(232,180,48)" fg:x="1321" fg:w="4"/><text x="54.9951%" y="943.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (3 samples, 0.12%)</title><rect x="54.7866%" y="917" width="0.1243%" height="15" fill="rgb(230,27,33)" fg:x="1322" fg:w="3"/><text x="55.0366%" y="927.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="54.8695%" y="901" width="0.0414%" height="15" fill="rgb(205,31,21)" fg:x="1324" fg:w="1"/><text x="55.1195%" y="911.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (35 samples, 1.45%)</title><rect x="53.5019%" y="965" width="1.4505%" height="15" fill="rgb(253,59,4)" fg:x="1291" fg:w="35"/><text x="53.7519%" y="975.50"></text></g><g><title>core::str::&lt;impl str&gt;::len (1 samples, 0.04%)</title><rect x="54.9109%" y="949" width="0.0414%" height="15" fill="rgb(224,201,9)" fg:x="1325" fg:w="1"/><text x="55.1609%" y="959.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputLength&gt;::input_len (1 samples, 0.04%)</title><rect x="54.9523%" y="965" width="0.0414%" height="15" fill="rgb(229,206,30)" fg:x="1326" fg:w="1"/><text x="55.2023%" y="975.50"></text></g><g><title>core::str::&lt;impl str&gt;::len (1 samples, 0.04%)</title><rect x="54.9523%" y="949" width="0.0414%" height="15" fill="rgb(212,67,47)" fg:x="1326" fg:w="1"/><text x="55.2023%" y="959.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (1 samples, 0.04%)</title><rect x="54.9523%" y="933" width="0.0414%" height="15" fill="rgb(211,96,50)" fg:x="1326" fg:w="1"/><text x="55.2023%" y="943.50"></text></g><g><title>core::str::&lt;impl str&gt;::len (1 samples, 0.04%)</title><rect x="55.1181%" y="917" width="0.0414%" height="15" fill="rgb(252,114,18)" fg:x="1330" fg:w="1"/><text x="55.3681%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (4 samples, 0.17%)</title><rect x="55.2839%" y="885" width="0.1658%" height="15" fill="rgb(223,58,37)" fg:x="1334" fg:w="4"/><text x="55.5339%" y="895.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (3 samples, 0.12%)</title><rect x="55.3253%" y="869" width="0.1243%" height="15" fill="rgb(237,70,4)" fg:x="1335" fg:w="3"/><text x="55.5753%" y="879.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="55.3668%" y="853" width="0.0829%" height="15" fill="rgb(244,85,46)" fg:x="1336" fg:w="2"/><text x="55.6168%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="55.4082%" y="837" width="0.0414%" height="15" fill="rgb(223,39,52)" fg:x="1337" fg:w="1"/><text x="55.6582%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="55.4082%" y="821" width="0.0414%" height="15" fill="rgb(218,200,14)" fg:x="1337" fg:w="1"/><text x="55.6582%" y="831.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (1 samples, 0.04%)</title><rect x="55.4496%" y="885" width="0.0414%" height="15" fill="rgb(208,171,16)" fg:x="1338" fg:w="1"/><text x="55.6996%" y="895.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (8 samples, 0.33%)</title><rect x="55.2424%" y="901" width="0.3315%" height="15" fill="rgb(234,200,18)" fg:x="1333" fg:w="8"/><text x="55.4924%" y="911.50"></text></g><g><title>core::str::&lt;impl str&gt;::len (2 samples, 0.08%)</title><rect x="55.4911%" y="885" width="0.0829%" height="15" fill="rgb(228,45,11)" fg:x="1339" fg:w="2"/><text x="55.7411%" y="895.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (13 samples, 0.54%)</title><rect x="55.1181%" y="933" width="0.5387%" height="15" fill="rgb(237,182,11)" fg:x="1330" fg:w="13"/><text x="55.3681%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (12 samples, 0.50%)</title><rect x="55.1596%" y="917" width="0.4973%" height="15" fill="rgb(241,175,49)" fg:x="1331" fg:w="12"/><text x="55.4096%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="55.5740%" y="901" width="0.0829%" height="15" fill="rgb(247,38,35)" fg:x="1341" fg:w="2"/><text x="55.8240%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::len (1 samples, 0.04%)</title><rect x="55.6154%" y="885" width="0.0414%" height="15" fill="rgb(228,39,49)" fg:x="1342" fg:w="1"/><text x="55.8654%" y="895.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTake&gt;::take_split (22 samples, 0.91%)</title><rect x="54.9938%" y="965" width="0.9117%" height="15" fill="rgb(226,101,26)" fg:x="1327" fg:w="22"/><text x="55.2438%" y="975.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (20 samples, 0.83%)</title><rect x="55.0767%" y="949" width="0.8288%" height="15" fill="rgb(206,141,19)" fg:x="1329" fg:w="20"/><text x="55.3267%" y="959.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (6 samples, 0.25%)</title><rect x="55.6569%" y="933" width="0.2487%" height="15" fill="rgb(211,200,13)" fg:x="1343" fg:w="6"/><text x="55.9069%" y="943.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (4 samples, 0.17%)</title><rect x="55.7397%" y="917" width="0.1658%" height="15" fill="rgb(241,121,6)" fg:x="1345" fg:w="4"/><text x="55.9897%" y="927.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (3 samples, 0.12%)</title><rect x="55.7812%" y="901" width="0.1243%" height="15" fill="rgb(234,221,29)" fg:x="1346" fg:w="3"/><text x="56.0312%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.08%)</title><rect x="55.8226%" y="885" width="0.0829%" height="15" fill="rgb(229,136,5)" fg:x="1347" fg:w="2"/><text x="56.0726%" y="895.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2 samples, 0.08%)</title><rect x="55.8226%" y="869" width="0.0829%" height="15" fill="rgb(238,36,11)" fg:x="1347" fg:w="2"/><text x="56.0726%" y="879.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="55.9055%" y="965" width="0.0829%" height="15" fill="rgb(251,55,41)" fg:x="1349" fg:w="2"/><text x="56.1555%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.04%)</title><rect x="56.2785%" y="853" width="0.0414%" height="15" fill="rgb(242,34,40)" fg:x="1358" fg:w="1"/><text x="56.5285%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.08%)</title><rect x="56.3199%" y="837" width="0.0829%" height="15" fill="rgb(215,42,17)" fg:x="1359" fg:w="2"/><text x="56.5699%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.08%)</title><rect x="56.4443%" y="805" width="0.0829%" height="15" fill="rgb(207,44,46)" fg:x="1362" fg:w="2"/><text x="56.6943%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="56.4857%" y="789" width="0.0414%" height="15" fill="rgb(211,206,28)" fg:x="1363" fg:w="1"/><text x="56.7357%" y="799.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.37%)</title><rect x="56.1956%" y="869" width="0.3730%" height="15" fill="rgb(237,167,16)" fg:x="1356" fg:w="9"/><text x="56.4456%" y="879.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.25%)</title><rect x="56.3199%" y="853" width="0.2487%" height="15" fill="rgb(233,66,6)" fg:x="1359" fg:w="6"/><text x="56.5699%" y="863.50"></text></g><g><title>core::str::validations::next_code_point (4 samples, 0.17%)</title><rect x="56.4028%" y="837" width="0.1658%" height="15" fill="rgb(246,123,29)" fg:x="1361" fg:w="4"/><text x="56.6528%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="56.4443%" y="821" width="0.1243%" height="15" fill="rgb(209,62,40)" fg:x="1362" fg:w="3"/><text x="56.6943%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="56.5271%" y="805" width="0.0414%" height="15" fill="rgb(218,4,25)" fg:x="1364" fg:w="1"/><text x="56.7771%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.54%)</title><rect x="56.1127%" y="885" width="0.5387%" height="15" fill="rgb(253,91,49)" fg:x="1354" fg:w="13"/><text x="56.3627%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (2 samples, 0.08%)</title><rect x="56.5686%" y="869" width="0.0829%" height="15" fill="rgb(228,155,29)" fg:x="1365" fg:w="2"/><text x="56.8186%" y="879.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1::{{closure}} (2 samples, 0.08%)</title><rect x="56.5686%" y="853" width="0.0829%" height="15" fill="rgb(243,57,37)" fg:x="1365" fg:w="2"/><text x="56.8186%" y="863.50"></text></g><g><title>nom::nom::digit1::{{closure}} (1 samples, 0.04%)</title><rect x="56.6100%" y="837" width="0.0414%" height="15" fill="rgb(244,167,17)" fg:x="1366" fg:w="1"/><text x="56.8600%" y="847.50"></text></g><g><title>&lt;char as nom::traits::AsChar&gt;::is_dec_digit (1 samples, 0.04%)</title><rect x="56.6100%" y="821" width="0.0414%" height="15" fill="rgb(207,181,38)" fg:x="1366" fg:w="1"/><text x="56.8600%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (14 samples, 0.58%)</title><rect x="56.1127%" y="901" width="0.5802%" height="15" fill="rgb(211,8,23)" fg:x="1354" fg:w="14"/><text x="56.3627%" y="911.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (1 samples, 0.04%)</title><rect x="56.6515%" y="885" width="0.0414%" height="15" fill="rgb(235,11,44)" fg:x="1367" fg:w="1"/><text x="56.9015%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="56.6929%" y="837" width="0.0414%" height="15" fill="rgb(248,18,52)" fg:x="1368" fg:w="1"/><text x="56.9429%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="56.6929%" y="821" width="0.0414%" height="15" fill="rgb(208,4,7)" fg:x="1368" fg:w="1"/><text x="56.9429%" y="831.50"></text></g><g><title>core::str::&lt;impl str&gt;::char_indices (2 samples, 0.08%)</title><rect x="56.6929%" y="901" width="0.0829%" height="15" fill="rgb(240,17,39)" fg:x="1368" fg:w="2"/><text x="56.9429%" y="911.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (2 samples, 0.08%)</title><rect x="56.6929%" y="885" width="0.0829%" height="15" fill="rgb(207,170,3)" fg:x="1368" fg:w="2"/><text x="56.9429%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.08%)</title><rect x="56.6929%" y="869" width="0.0829%" height="15" fill="rgb(236,100,52)" fg:x="1368" fg:w="2"/><text x="56.9429%" y="879.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (2 samples, 0.08%)</title><rect x="56.6929%" y="853" width="0.0829%" height="15" fill="rgb(246,78,51)" fg:x="1368" fg:w="2"/><text x="56.9429%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (1 samples, 0.04%)</title><rect x="56.7344%" y="837" width="0.0414%" height="15" fill="rgb(211,17,15)" fg:x="1369" fg:w="1"/><text x="56.9844%" y="847.50"></text></g><g><title>core::str::&lt;impl str&gt;::len (1 samples, 0.04%)</title><rect x="56.7758%" y="869" width="0.0414%" height="15" fill="rgb(209,59,46)" fg:x="1370" fg:w="1"/><text x="57.0258%" y="879.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (2 samples, 0.08%)</title><rect x="56.8587%" y="853" width="0.0829%" height="15" fill="rgb(210,92,25)" fg:x="1372" fg:w="2"/><text x="57.1087%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="56.9001%" y="837" width="0.0414%" height="15" fill="rgb(238,174,52)" fg:x="1373" fg:w="1"/><text x="57.1501%" y="847.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="56.9001%" y="821" width="0.0414%" height="15" fill="rgb(230,73,7)" fg:x="1373" fg:w="1"/><text x="57.1501%" y="831.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="56.9001%" y="805" width="0.0414%" height="15" fill="rgb(243,124,40)" fg:x="1373" fg:w="1"/><text x="57.1501%" y="815.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (5 samples, 0.21%)</title><rect x="56.7758%" y="885" width="0.2072%" height="15" fill="rgb(244,170,11)" fg:x="1370" fg:w="5"/><text x="57.0258%" y="895.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (4 samples, 0.17%)</title><rect x="56.8172%" y="869" width="0.1658%" height="15" fill="rgb(207,114,54)" fg:x="1371" fg:w="4"/><text x="57.0672%" y="879.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="56.9416%" y="853" width="0.0414%" height="15" fill="rgb(205,42,20)" fg:x="1374" fg:w="1"/><text x="57.1916%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::len (1 samples, 0.04%)</title><rect x="56.9416%" y="837" width="0.0414%" height="15" fill="rgb(230,30,28)" fg:x="1374" fg:w="1"/><text x="57.1916%" y="847.50"></text></g><g><title>core::ptr::metadata::metadata (1 samples, 0.04%)</title><rect x="56.9416%" y="821" width="0.0414%" height="15" fill="rgb(205,73,54)" fg:x="1374" fg:w="1"/><text x="57.1916%" y="831.50"></text></g><g><title>ansi_parser::parsers::parse_int (26 samples, 1.08%)</title><rect x="55.9884%" y="965" width="1.0775%" height="15" fill="rgb(254,227,23)" fg:x="1351" fg:w="26"/><text x="56.2384%" y="975.50"></text></g><g><title>nom::nom::digit (23 samples, 0.95%)</title><rect x="56.1127%" y="949" width="0.9532%" height="15" fill="rgb(228,202,34)" fg:x="1354" fg:w="23"/><text x="56.3627%" y="959.50"></text></g><g><title>nom::nom::digit1 (23 samples, 0.95%)</title><rect x="56.1127%" y="933" width="0.9532%" height="15" fill="rgb(222,225,37)" fg:x="1354" fg:w="23"/><text x="56.3627%" y="943.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1 (23 samples, 0.95%)</title><rect x="56.1127%" y="917" width="0.9532%" height="15" fill="rgb(221,14,54)" fg:x="1354" fg:w="23"/><text x="56.3627%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (7 samples, 0.29%)</title><rect x="56.7758%" y="901" width="0.2901%" height="15" fill="rgb(254,102,2)" fg:x="1370" fg:w="7"/><text x="57.0258%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (2 samples, 0.08%)</title><rect x="56.9830%" y="885" width="0.0829%" height="15" fill="rgb(232,104,17)" fg:x="1375" fg:w="2"/><text x="57.2330%" y="895.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (2 samples, 0.08%)</title><rect x="56.9830%" y="869" width="0.0829%" height="15" fill="rgb(250,220,14)" fg:x="1375" fg:w="2"/><text x="57.2330%" y="879.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.04%)</title><rect x="57.0245%" y="853" width="0.0414%" height="15" fill="rgb(241,158,9)" fg:x="1376" fg:w="1"/><text x="57.2745%" y="863.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for &amp;T&gt;::clone (1 samples, 0.04%)</title><rect x="57.0659%" y="965" width="0.0414%" height="15" fill="rgb(246,9,43)" fg:x="1377" fg:w="1"/><text x="57.3159%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="57.1488%" y="917" width="0.0829%" height="15" fill="rgb(206,73,33)" fg:x="1379" fg:w="2"/><text x="57.3988%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="57.1488%" y="901" width="0.0829%" height="15" fill="rgb(222,79,8)" fg:x="1379" fg:w="2"/><text x="57.3988%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.08%)</title><rect x="57.1488%" y="885" width="0.0829%" height="15" fill="rgb(234,8,54)" fg:x="1379" fg:w="2"/><text x="57.3988%" y="895.50"></text></g><g><title>core::slice::iter::&lt;impl core::iter::traits::collect::IntoIterator for &amp;[T]&gt;::into_iter (1 samples, 0.04%)</title><rect x="57.2317%" y="917" width="0.0414%" height="15" fill="rgb(209,134,38)" fg:x="1381" fg:w="1"/><text x="57.4817%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="57.2317%" y="901" width="0.0414%" height="15" fill="rgb(230,127,29)" fg:x="1381" fg:w="1"/><text x="57.4817%" y="911.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="57.2317%" y="885" width="0.0414%" height="15" fill="rgb(242,44,41)" fg:x="1381" fg:w="1"/><text x="57.4817%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="57.2317%" y="869" width="0.0414%" height="15" fill="rgb(222,56,43)" fg:x="1381" fg:w="1"/><text x="57.4817%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="57.2317%" y="853" width="0.0414%" height="15" fill="rgb(238,39,47)" fg:x="1381" fg:w="1"/><text x="57.4817%" y="863.50"></text></g><g><title>heapless::vec::Vec&lt;T,N&gt;::extend_from_slice (6 samples, 0.25%)</title><rect x="57.1073%" y="949" width="0.2487%" height="15" fill="rgb(226,79,43)" fg:x="1378" fg:w="6"/><text x="57.3573%" y="959.50"></text></g><g><title>heapless::vec::&lt;impl heapless::i::Vec&lt;generic_array::GenericArray&lt;T,N&gt;&gt;&gt;::extend_from_slice (6 samples, 0.25%)</title><rect x="57.1073%" y="933" width="0.2487%" height="15" fill="rgb(242,105,53)" fg:x="1378" fg:w="6"/><text x="57.3573%" y="943.50"></text></g><g><title>heapless::vec::&lt;impl heapless::i::Vec&lt;generic_array::GenericArray&lt;T,N&gt;&gt;&gt;::capacity (2 samples, 0.08%)</title><rect x="57.2731%" y="917" width="0.0829%" height="15" fill="rgb(251,132,46)" fg:x="1382" fg:w="2"/><text x="57.5231%" y="927.50"></text></g><g><title>&lt;typenum::uint::UInt&lt;U,B&gt; as typenum::marker_traits::Unsigned&gt;::to_usize (2 samples, 0.08%)</title><rect x="57.2731%" y="901" width="0.0829%" height="15" fill="rgb(231,77,14)" fg:x="1382" fg:w="2"/><text x="57.5231%" y="911.50"></text></g><g><title>ansi_parser::parsers::graphics_mode1 (108 samples, 4.48%)</title><rect x="53.0460%" y="981" width="4.4758%" height="15" fill="rgb(240,135,9)" fg:x="1280" fg:w="108"/><text x="53.2960%" y="991.50">ansi_..</text></g><g><title>heapless::vec::Vec&lt;T,N&gt;::from_slice (10 samples, 0.41%)</title><rect x="57.1073%" y="965" width="0.4144%" height="15" fill="rgb(248,109,14)" fg:x="1378" fg:w="10"/><text x="57.3573%" y="975.50"></text></g><g><title>heapless::vec::Vec&lt;T,N&gt;::new (4 samples, 0.17%)</title><rect x="57.3560%" y="949" width="0.1658%" height="15" fill="rgb(227,146,52)" fg:x="1384" fg:w="4"/><text x="57.6060%" y="959.50"></text></g><g><title>heapless::vec::&lt;impl heapless::i::Vec&lt;A&gt;&gt;::new (1 samples, 0.04%)</title><rect x="57.4803%" y="933" width="0.0414%" height="15" fill="rgb(232,54,3)" fg:x="1387" fg:w="1"/><text x="57.7303%" y="943.50"></text></g><g><title>ansi_parser::parsers::combined (584 samples, 24.20%)</title><rect x="33.3610%" y="1013" width="24.2022%" height="15" fill="rgb(229,201,43)" fg:x="805" fg:w="584"/><text x="33.6110%" y="1023.50">ansi_parser::parsers::combined</text></g><g><title>ansi_parser::parsers::graphics_mode (112 samples, 4.64%)</title><rect x="52.9217%" y="997" width="4.6415%" height="15" fill="rgb(252,161,33)" fg:x="1277" fg:w="112"/><text x="53.1717%" y="1007.50">ansi_..</text></g><g><title>ansi_parser::parsers::graphics_mode2 (1 samples, 0.04%)</title><rect x="57.5218%" y="981" width="0.0414%" height="15" fill="rgb(226,146,40)" fg:x="1388" fg:w="1"/><text x="57.7718%" y="991.50"></text></g><g><title>ansi_parser::parsers::parse_int (1 samples, 0.04%)</title><rect x="57.5218%" y="965" width="0.0414%" height="15" fill="rgb(219,47,25)" fg:x="1388" fg:w="1"/><text x="57.7718%" y="975.50"></text></g><g><title>nom::nom::digit (1 samples, 0.04%)</title><rect x="57.5218%" y="949" width="0.0414%" height="15" fill="rgb(250,135,13)" fg:x="1388" fg:w="1"/><text x="57.7718%" y="959.50"></text></g><g><title>nom::nom::digit1 (1 samples, 0.04%)</title><rect x="57.5218%" y="933" width="0.0414%" height="15" fill="rgb(219,229,18)" fg:x="1388" fg:w="1"/><text x="57.7718%" y="943.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position1 (1 samples, 0.04%)</title><rect x="57.5218%" y="917" width="0.0414%" height="15" fill="rgb(217,152,27)" fg:x="1388" fg:w="1"/><text x="57.7718%" y="927.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.04%)</title><rect x="57.5218%" y="901" width="0.0414%" height="15" fill="rgb(225,71,47)" fg:x="1388" fg:w="1"/><text x="57.7718%" y="911.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.04%)</title><rect x="57.5218%" y="885" width="0.0414%" height="15" fill="rgb(220,139,14)" fg:x="1388" fg:w="1"/><text x="57.7718%" y="895.50"></text></g><g><title>ansi_parser::parsers::cursor_restore (1 samples, 0.04%)</title><rect x="57.5632%" y="1013" width="0.0414%" height="15" fill="rgb(247,54,32)" fg:x="1389" fg:w="1"/><text x="57.8132%" y="1023.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (1 samples, 0.04%)</title><rect x="57.5632%" y="997" width="0.0414%" height="15" fill="rgb(252,131,39)" fg:x="1389" fg:w="1"/><text x="57.8132%" y="1007.50"></text></g><g><title>ansi_parser::parsers::graphics_mode (1 samples, 0.04%)</title><rect x="57.6046%" y="1013" width="0.0414%" height="15" fill="rgb(210,108,39)" fg:x="1390" fg:w="1"/><text x="57.8546%" y="1023.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (2 samples, 0.08%)</title><rect x="57.6461%" y="1013" width="0.0829%" height="15" fill="rgb(205,23,29)" fg:x="1391" fg:w="2"/><text x="57.8961%" y="1023.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int::_unify (1 samples, 0.04%)</title><rect x="57.7290%" y="1013" width="0.0414%" height="15" fill="rgb(246,139,46)" fg:x="1393" fg:w="1"/><text x="57.9790%" y="1023.50"></text></g><g><title>ansi_parser::parsers::parse_escape (1 samples, 0.04%)</title><rect x="57.7704%" y="1013" width="0.0414%" height="15" fill="rgb(250,81,26)" fg:x="1394" fg:w="1"/><text x="58.0204%" y="1023.50"></text></g><g><title>ansi_str::begin_ansi_sequences (1 samples, 0.04%)</title><rect x="57.8119%" y="1013" width="0.0414%" height="15" fill="rgb(214,104,7)" fg:x="1395" fg:w="1"/><text x="58.0619%" y="1023.50"></text></g><g><title>core::alloc::layout::Layout::align (2 samples, 0.08%)</title><rect x="57.8533%" y="1013" width="0.0829%" height="15" fill="rgb(233,189,8)" fg:x="1396" fg:w="2"/><text x="58.1033%" y="1023.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="57.9362%" y="1013" width="0.0414%" height="15" fill="rgb(228,141,17)" fg:x="1398" fg:w="1"/><text x="58.1862%" y="1023.50"></text></g><g><title>core::alloc::layout::Layout::size (2 samples, 0.08%)</title><rect x="57.9776%" y="1013" width="0.0829%" height="15" fill="rgb(247,157,1)" fg:x="1399" fg:w="2"/><text x="58.2276%" y="1023.50"></text></g><g><title>core::char::convert::from_u32_unchecked (2 samples, 0.08%)</title><rect x="58.0605%" y="1013" width="0.0829%" height="15" fill="rgb(249,225,5)" fg:x="1401" fg:w="2"/><text x="58.3105%" y="1023.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (1 samples, 0.04%)</title><rect x="58.1434%" y="1013" width="0.0414%" height="15" fill="rgb(242,55,13)" fg:x="1403" fg:w="1"/><text x="58.3934%" y="1023.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_digit (2 samples, 0.08%)</title><rect x="58.1848%" y="1013" width="0.0829%" height="15" fill="rgb(230,49,50)" fg:x="1404" fg:w="2"/><text x="58.4348%" y="1023.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.04%)</title><rect x="58.2677%" y="1013" width="0.0414%" height="15" fill="rgb(241,111,38)" fg:x="1406" fg:w="1"/><text x="58.5177%" y="1023.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for &amp;T&gt;::clone (3 samples, 0.12%)</title><rect x="58.3092%" y="1013" width="0.1243%" height="15" fill="rgb(252,155,4)" fg:x="1407" fg:w="3"/><text x="58.5592%" y="1023.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="58.4335%" y="1013" width="0.0414%" height="15" fill="rgb(212,69,32)" fg:x="1410" fg:w="1"/><text x="58.6835%" y="1023.50"></text></g><g><title>core::cmp::Ord::min (2 samples, 0.08%)</title><rect x="58.4749%" y="1013" width="0.0829%" height="15" fill="rgb(243,107,47)" fg:x="1411" fg:w="2"/><text x="58.7249%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.04%)</title><rect x="58.5578%" y="1013" width="0.0414%" height="15" fill="rgb(247,130,12)" fg:x="1413" fg:w="1"/><text x="58.8078%" y="1023.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.04%)</title><rect x="58.5993%" y="1013" width="0.0414%" height="15" fill="rgb(233,74,16)" fg:x="1414" fg:w="1"/><text x="58.8493%" y="1023.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.04%)</title><rect x="58.6407%" y="1013" width="0.0414%" height="15" fill="rgb(208,58,18)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="1023.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="58.6407%" y="997" width="0.0414%" height="15" fill="rgb(242,225,1)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="1007.50"></text></g><g><title>&lt;papergrid::Grid as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="58.6407%" y="981" width="0.0414%" height="15" fill="rgb(249,39,40)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="991.50"></text></g><g><title>papergrid::cells_content (1 samples, 0.04%)</title><rect x="58.6407%" y="965" width="0.0414%" height="15" fill="rgb(207,72,44)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="975.50"></text></g><g><title>papergrid::string_width_tab (1 samples, 0.04%)</title><rect x="58.6407%" y="949" width="0.0414%" height="15" fill="rgb(215,193,12)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="959.50"></text></g><g><title>papergrid::string_width (1 samples, 0.04%)</title><rect x="58.6407%" y="933" width="0.0414%" height="15" fill="rgb(248,41,39)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="943.50"></text></g><g><title>strip_ansi_escapes::strip (1 samples, 0.04%)</title><rect x="58.6407%" y="917" width="0.0414%" height="15" fill="rgb(253,85,4)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="927.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.04%)</title><rect x="58.6407%" y="901" width="0.0414%" height="15" fill="rgb(243,70,31)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="911.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="58.6407%" y="885" width="0.0414%" height="15" fill="rgb(253,195,26)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="895.50"></text></g><g><title>vte::Parser::advance (1 samples, 0.04%)</title><rect x="58.6407%" y="869" width="0.0414%" height="15" fill="rgb(243,42,11)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="879.50"></text></g><g><title>vte::Parser::perform_state_change (1 samples, 0.04%)</title><rect x="58.6407%" y="853" width="0.0414%" height="15" fill="rgb(239,66,17)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="863.50"></text></g><g><title>vte::Parser::perform_action (1 samples, 0.04%)</title><rect x="58.6407%" y="837" width="0.0414%" height="15" fill="rgb(217,132,21)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="847.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::print (1 samples, 0.04%)</title><rect x="58.6407%" y="821" width="0.0414%" height="15" fill="rgb(252,202,21)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="831.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_fmt (1 samples, 0.04%)</title><rect x="58.6407%" y="805" width="0.0414%" height="15" fill="rgb(233,98,36)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="815.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.04%)</title><rect x="58.6407%" y="789" width="0.0414%" height="15" fill="rgb(216,153,54)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="799.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="58.6407%" y="773" width="0.0414%" height="15" fill="rgb(250,99,7)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="783.50"></text></g><g><title>core::fmt::Write::write_char (1 samples, 0.04%)</title><rect x="58.6407%" y="757" width="0.0414%" height="15" fill="rgb(207,56,50)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="767.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (1 samples, 0.04%)</title><rect x="58.6407%" y="741" width="0.0414%" height="15" fill="rgb(244,61,34)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="751.50"></text></g><g><title>core::char::methods::encode_utf8_raw (1 samples, 0.04%)</title><rect x="58.6407%" y="725" width="0.0414%" height="15" fill="rgb(241,50,38)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="735.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.04%)</title><rect x="58.6407%" y="709" width="0.0414%" height="15" fill="rgb(212,166,30)" fg:x="1415" fg:w="1"/><text x="58.8907%" y="719.50"></text></g><g><title>core::fmt::Write::write_char (1 samples, 0.04%)</title><rect x="58.6821%" y="1013" width="0.0414%" height="15" fill="rgb(249,127,32)" fg:x="1416" fg:w="1"/><text x="58.9321%" y="1023.50"></text></g><g><title>std::io::buffered::linewritershim::LineWriterShim&lt;W&gt;::flush_if_completed_line (1 samples, 0.04%)</title><rect x="58.7236%" y="725" width="0.0414%" height="15" fill="rgb(209,103,0)" fg:x="1417" fg:w="1"/><text x="58.9736%" y="735.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (1 samples, 0.04%)</title><rect x="58.7236%" y="709" width="0.0414%" height="15" fill="rgb(238,209,51)" fg:x="1417" fg:w="1"/><text x="58.9736%" y="719.50"></text></g><g><title>core::fmt::write (2 samples, 0.08%)</title><rect x="58.7236%" y="1013" width="0.0829%" height="15" fill="rgb(237,56,23)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="1023.50"></text></g><g><title>&lt;papergrid::Grid as core::fmt::Display&gt;::fmt (2 samples, 0.08%)</title><rect x="58.7236%" y="997" width="0.0829%" height="15" fill="rgb(215,153,46)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="1007.50"></text></g><g><title>papergrid::cells_content (2 samples, 0.08%)</title><rect x="58.7236%" y="981" width="0.0829%" height="15" fill="rgb(224,49,31)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="991.50"></text></g><g><title>papergrid::string_width_tab (2 samples, 0.08%)</title><rect x="58.7236%" y="965" width="0.0829%" height="15" fill="rgb(250,18,42)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="975.50"></text></g><g><title>papergrid::string_width (2 samples, 0.08%)</title><rect x="58.7236%" y="949" width="0.0829%" height="15" fill="rgb(215,176,39)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="959.50"></text></g><g><title>strip_ansi_escapes::strip (2 samples, 0.08%)</title><rect x="58.7236%" y="933" width="0.0829%" height="15" fill="rgb(223,77,29)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="943.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.08%)</title><rect x="58.7236%" y="917" width="0.0829%" height="15" fill="rgb(234,94,52)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="927.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.08%)</title><rect x="58.7236%" y="901" width="0.0829%" height="15" fill="rgb(220,154,50)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="911.50"></text></g><g><title>vte::Parser::advance (2 samples, 0.08%)</title><rect x="58.7236%" y="885" width="0.0829%" height="15" fill="rgb(212,11,10)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="895.50"></text></g><g><title>vte::Parser::perform_state_change (2 samples, 0.08%)</title><rect x="58.7236%" y="869" width="0.0829%" height="15" fill="rgb(205,166,19)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="879.50"></text></g><g><title>vte::Parser::perform_action (2 samples, 0.08%)</title><rect x="58.7236%" y="853" width="0.0829%" height="15" fill="rgb(244,198,16)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="863.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::print (2 samples, 0.08%)</title><rect x="58.7236%" y="837" width="0.0829%" height="15" fill="rgb(219,69,12)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="847.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_fmt (2 samples, 0.08%)</title><rect x="58.7236%" y="821" width="0.0829%" height="15" fill="rgb(245,30,7)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="831.50"></text></g><g><title>std::io::Write::write_fmt (2 samples, 0.08%)</title><rect x="58.7236%" y="805" width="0.0829%" height="15" fill="rgb(218,221,48)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="815.50"></text></g><g><title>core::fmt::write (2 samples, 0.08%)</title><rect x="58.7236%" y="789" width="0.0829%" height="15" fill="rgb(216,66,15)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="799.50"></text></g><g><title>core::fmt::Write::write_char (2 samples, 0.08%)</title><rect x="58.7236%" y="773" width="0.0829%" height="15" fill="rgb(226,122,50)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="783.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.08%)</title><rect x="58.7236%" y="757" width="0.0829%" height="15" fill="rgb(239,156,16)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="767.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.08%)</title><rect x="58.7236%" y="741" width="0.0829%" height="15" fill="rgb(224,27,38)" fg:x="1417" fg:w="2"/><text x="58.9736%" y="751.50"></text></g><g><title>std::sys_common::memchr::memrchr (1 samples, 0.04%)</title><rect x="58.7650%" y="725" width="0.0414%" height="15" fill="rgb(224,39,27)" fg:x="1418" fg:w="1"/><text x="59.0150%" y="735.50"></text></g><g><title>std::sys::unix::memchr::memrchr (1 samples, 0.04%)</title><rect x="58.7650%" y="709" width="0.0414%" height="15" fill="rgb(215,92,29)" fg:x="1418" fg:w="1"/><text x="59.0150%" y="719.50"></text></g><g><title>std::sys::unix::memchr::memrchr::memrchr_specific (1 samples, 0.04%)</title><rect x="58.7650%" y="693" width="0.0414%" height="15" fill="rgb(207,159,16)" fg:x="1418" fg:w="1"/><text x="59.0150%" y="703.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="58.7650%" y="677" width="0.0414%" height="15" fill="rgb(238,163,47)" fg:x="1418" fg:w="1"/><text x="59.0150%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="58.8065%" y="1013" width="0.0414%" height="15" fill="rgb(219,91,49)" fg:x="1419" fg:w="1"/><text x="59.0565%" y="1023.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="58.8479%" y="1013" width="0.0414%" height="15" fill="rgb(227,167,31)" fg:x="1420" fg:w="1"/><text x="59.0979%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (1 samples, 0.04%)</title><rect x="58.8893%" y="1013" width="0.0414%" height="15" fill="rgb(234,80,54)" fg:x="1421" fg:w="1"/><text x="59.1393%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position::check::{{closure}} (2 samples, 0.08%)</title><rect x="58.9308%" y="1013" width="0.0829%" height="15" fill="rgb(212,114,2)" fg:x="1422" fg:w="2"/><text x="59.1808%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.04%)</title><rect x="59.0137%" y="1013" width="0.0414%" height="15" fill="rgb(234,50,24)" fg:x="1424" fg:w="1"/><text x="59.2637%" y="1023.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="59.0551%" y="1013" width="0.0414%" height="15" fill="rgb(221,68,8)" fg:x="1425" fg:w="1"/><text x="59.3051%" y="1023.50"></text></g><g><title>core::mem::size_of_val (2 samples, 0.08%)</title><rect x="59.0966%" y="1013" width="0.0829%" height="15" fill="rgb(254,180,31)" fg:x="1426" fg:w="2"/><text x="59.3466%" y="1023.50"></text></g><g><title>core::num::dec2flt::common::ByteSlice::eq_ignore_case::{{closure}} (1 samples, 0.04%)</title><rect x="59.1794%" y="1013" width="0.0414%" height="15" fill="rgb(247,130,50)" fg:x="1428" fg:w="1"/><text x="59.4294%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.17%)</title><rect x="59.2209%" y="1013" width="0.1658%" height="15" fill="rgb(211,109,4)" fg:x="1429" fg:w="4"/><text x="59.4709%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.04%)</title><rect x="59.3867%" y="1013" width="0.0414%" height="15" fill="rgb(238,50,21)" fg:x="1433" fg:w="1"/><text x="59.6367%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.04%)</title><rect x="59.4281%" y="1013" width="0.0414%" height="15" fill="rgb(225,57,45)" fg:x="1434" fg:w="1"/><text x="59.6781%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.04%)</title><rect x="59.4695%" y="1013" width="0.0414%" height="15" fill="rgb(209,196,50)" fg:x="1435" fg:w="1"/><text x="59.7195%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (2 samples, 0.08%)</title><rect x="59.5110%" y="1013" width="0.0829%" height="15" fill="rgb(242,140,13)" fg:x="1436" fg:w="2"/><text x="59.7610%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (2 samples, 0.08%)</title><rect x="59.5939%" y="1013" width="0.0829%" height="15" fill="rgb(217,111,7)" fg:x="1438" fg:w="2"/><text x="59.8439%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="59.6768%" y="1013" width="0.0414%" height="15" fill="rgb(253,193,51)" fg:x="1440" fg:w="1"/><text x="59.9268%" y="1023.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (1 samples, 0.04%)</title><rect x="59.7182%" y="1013" width="0.0414%" height="15" fill="rgb(252,70,29)" fg:x="1441" fg:w="1"/><text x="59.9682%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;(nu_protocol::ast::expression::Expression,core::option::Option&lt;nu_parser::errors::ParseError&gt;)&gt; (1 samples, 0.04%)</title><rect x="59.7596%" y="1013" width="0.0414%" height="15" fill="rgb(232,127,12)" fg:x="1442" fg:w="1"/><text x="60.0096%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="59.8011%" y="1013" width="0.0414%" height="15" fill="rgb(211,180,21)" fg:x="1443" fg:w="1"/><text x="60.0511%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_parser::errors::ParseError&gt; (1 samples, 0.04%)</title><rect x="59.8425%" y="1013" width="0.0414%" height="15" fill="rgb(229,72,13)" fg:x="1444" fg:w="1"/><text x="60.0925%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="59.8840%" y="1013" width="0.0414%" height="15" fill="rgb(240,211,49)" fg:x="1445" fg:w="1"/><text x="60.1340%" y="1023.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.08%)</title><rect x="59.9254%" y="1013" width="0.0829%" height="15" fill="rgb(219,149,40)" fg:x="1446" fg:w="2"/><text x="60.1754%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.08%)</title><rect x="60.0083%" y="1013" width="0.0829%" height="15" fill="rgb(210,127,46)" fg:x="1448" fg:w="2"/><text x="60.2583%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="60.0912%" y="1013" width="0.0829%" height="15" fill="rgb(220,106,7)" fg:x="1450" fg:w="2"/><text x="60.3412%" y="1023.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (7 samples, 0.29%)</title><rect x="60.1741%" y="1013" width="0.2901%" height="15" fill="rgb(249,31,22)" fg:x="1452" fg:w="7"/><text x="60.4241%" y="1023.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (2 samples, 0.08%)</title><rect x="60.4642%" y="1013" width="0.0829%" height="15" fill="rgb(253,1,49)" fg:x="1459" fg:w="2"/><text x="60.7142%" y="1023.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="60.5470%" y="1013" width="0.0414%" height="15" fill="rgb(227,144,33)" fg:x="1461" fg:w="1"/><text x="60.7970%" y="1023.50"></text></g><g><title>core::ptr::slice_from_raw_parts (10 samples, 0.41%)</title><rect x="60.5885%" y="1013" width="0.4144%" height="15" fill="rgb(249,163,44)" fg:x="1462" fg:w="10"/><text x="60.8385%" y="1023.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (4 samples, 0.17%)</title><rect x="61.0029%" y="1013" width="0.1658%" height="15" fill="rgb(234,15,39)" fg:x="1472" fg:w="4"/><text x="61.2529%" y="1023.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (1 samples, 0.04%)</title><rect x="61.1687%" y="1013" width="0.0414%" height="15" fill="rgb(207,66,16)" fg:x="1476" fg:w="1"/><text x="61.4187%" y="1023.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="61.2101%" y="1013" width="0.0414%" height="15" fill="rgb(233,112,24)" fg:x="1477" fg:w="1"/><text x="61.4601%" y="1023.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="61.2516%" y="1013" width="0.0414%" height="15" fill="rgb(230,90,22)" fg:x="1478" fg:w="1"/><text x="61.5016%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (4 samples, 0.17%)</title><rect x="61.2930%" y="1013" width="0.1658%" height="15" fill="rgb(229,61,13)" fg:x="1479" fg:w="4"/><text x="61.5430%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (11 samples, 0.46%)</title><rect x="61.4588%" y="1013" width="0.4559%" height="15" fill="rgb(225,57,24)" fg:x="1483" fg:w="11"/><text x="61.7088%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::is_empty (2 samples, 0.08%)</title><rect x="61.9146%" y="1013" width="0.0829%" height="15" fill="rgb(208,169,48)" fg:x="1494" fg:w="2"/><text x="62.1646%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (4 samples, 0.17%)</title><rect x="61.9975%" y="1013" width="0.1658%" height="15" fill="rgb(244,218,51)" fg:x="1496" fg:w="4"/><text x="62.2475%" y="1023.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.04%)</title><rect x="62.1633%" y="1013" width="0.0414%" height="15" fill="rgb(214,148,10)" fg:x="1500" fg:w="1"/><text x="62.4133%" y="1023.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (3 samples, 0.12%)</title><rect x="62.2047%" y="1013" width="0.1243%" height="15" fill="rgb(225,174,27)" fg:x="1501" fg:w="3"/><text x="62.4547%" y="1023.50"></text></g><g><title>core::slice::raw::debug_check_data_len (1 samples, 0.04%)</title><rect x="62.3291%" y="1013" width="0.0414%" height="15" fill="rgb(230,96,26)" fg:x="1504" fg:w="1"/><text x="62.5791%" y="1023.50"></text></g><g><title>core::slice::raw::from_raw_parts (6 samples, 0.25%)</title><rect x="62.3705%" y="1013" width="0.2487%" height="15" fill="rgb(232,10,30)" fg:x="1505" fg:w="6"/><text x="62.6205%" y="1023.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (4 samples, 0.17%)</title><rect x="62.6191%" y="1013" width="0.1658%" height="15" fill="rgb(222,8,50)" fg:x="1511" fg:w="4"/><text x="62.8691%" y="1023.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (4 samples, 0.17%)</title><rect x="62.7849%" y="1013" width="0.1658%" height="15" fill="rgb(213,81,27)" fg:x="1515" fg:w="4"/><text x="63.0349%" y="1023.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.04%)</title><rect x="62.9507%" y="1013" width="0.0414%" height="15" fill="rgb(245,50,10)" fg:x="1519" fg:w="1"/><text x="63.2007%" y="1023.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (3 samples, 0.12%)</title><rect x="62.9921%" y="1013" width="0.1243%" height="15" fill="rgb(216,100,18)" fg:x="1520" fg:w="3"/><text x="63.2421%" y="1023.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (2 samples, 0.08%)</title><rect x="63.1165%" y="1013" width="0.0829%" height="15" fill="rgb(236,147,54)" fg:x="1523" fg:w="2"/><text x="63.3665%" y="1023.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="63.1993%" y="1013" width="0.0829%" height="15" fill="rgb(205,143,26)" fg:x="1525" fg:w="2"/><text x="63.4493%" y="1023.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (3 samples, 0.12%)</title><rect x="63.2822%" y="1013" width="0.1243%" height="15" fill="rgb(236,26,9)" fg:x="1527" fg:w="3"/><text x="63.5322%" y="1023.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="63.4065%" y="1013" width="0.0414%" height="15" fill="rgb(221,165,53)" fg:x="1530" fg:w="1"/><text x="63.6565%" y="1023.50"></text></g><g><title>core::str::validations::next_code_point (8 samples, 0.33%)</title><rect x="63.4480%" y="1013" width="0.3315%" height="15" fill="rgb(214,110,17)" fg:x="1531" fg:w="8"/><text x="63.6980%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.04%)</title><rect x="63.7795%" y="1013" width="0.0414%" height="15" fill="rgb(237,197,12)" fg:x="1539" fg:w="1"/><text x="64.0295%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.04%)</title><rect x="63.8210%" y="1013" width="0.0414%" height="15" fill="rgb(205,84,17)" fg:x="1540" fg:w="1"/><text x="64.0710%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.04%)</title><rect x="63.8624%" y="1013" width="0.0414%" height="15" fill="rgb(237,18,45)" fg:x="1541" fg:w="1"/><text x="64.1124%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="63.9039%" y="1013" width="0.0414%" height="15" fill="rgb(221,87,14)" fg:x="1542" fg:w="1"/><text x="64.1539%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket_ptr (1 samples, 0.04%)</title><rect x="63.9453%" y="1013" width="0.0414%" height="15" fill="rgb(238,186,15)" fg:x="1543" fg:w="1"/><text x="64.1953%" y="1023.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.04%)</title><rect x="63.9867%" y="1013" width="0.0414%" height="15" fill="rgb(208,115,11)" fg:x="1544" fg:w="1"/><text x="64.2367%" y="1023.50"></text></g><g><title>heapless::vec::Vec&lt;T,N&gt;::new (1 samples, 0.04%)</title><rect x="64.0282%" y="1013" width="0.0414%" height="15" fill="rgb(254,175,0)" fg:x="1545" fg:w="1"/><text x="64.2782%" y="1023.50"></text></g><g><title>nom::nom::digit0::{{closure}} (2 samples, 0.08%)</title><rect x="64.0696%" y="1013" width="0.0829%" height="15" fill="rgb(227,24,42)" fg:x="1546" fg:w="2"/><text x="64.3196%" y="1023.50"></text></g><g><title>nom::nom::digit1::{{closure}} (1 samples, 0.04%)</title><rect x="64.1525%" y="1013" width="0.0414%" height="15" fill="rgb(223,211,37)" fg:x="1548" fg:w="1"/><text x="64.4025%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::engine::engine_state::EngineState&gt; (1 samples, 0.04%)</title><rect x="64.1939%" y="997" width="0.0414%" height="15" fill="rgb(235,49,27)" fg:x="1549" fg:w="1"/><text x="64.4439%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::boxed::Box&lt;dyn nu_protocol::engine::command::Command&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="64.1939%" y="981" width="0.0414%" height="15" fill="rgb(254,97,51)" fg:x="1549" fg:w="1"/><text x="64.4439%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.1939%" y="965" width="0.0414%" height="15" fill="rgb(249,51,40)" fg:x="1549" fg:w="1"/><text x="64.4439%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::boxed::Box&lt;dyn nu_protocol::engine::command::Command&gt;]&gt; (1 samples, 0.04%)</title><rect x="64.1939%" y="949" width="0.0414%" height="15" fill="rgb(210,128,45)" fg:x="1549" fg:w="1"/><text x="64.4439%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn nu_protocol::engine::command::Command&gt;&gt; (1 samples, 0.04%)</title><rect x="64.1939%" y="933" width="0.0414%" height="15" fill="rgb(224,137,50)" fg:x="1549" fg:w="1"/><text x="64.4439%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.2354%" y="117" width="0.0414%" height="15" fill="rgb(242,15,9)" fg:x="1550" fg:w="1"/><text x="64.4854%" y="127.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.04%)</title><rect x="64.2354%" y="101" width="0.0414%" height="15" fill="rgb(233,187,41)" fg:x="1550" fg:w="1"/><text x="64.4854%" y="111.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="64.2354%" y="85" width="0.0414%" height="15" fill="rgb(227,2,29)" fg:x="1550" fg:w="1"/><text x="64.4854%" y="95.50"></text></g><g><title>nu_cli::eval_file::evaluate_file (2 samples, 0.08%)</title><rect x="64.2354%" y="997" width="0.0829%" height="15" fill="rgb(222,70,3)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;(nu_protocol::ast::block::Block,core::option::Option&lt;nu_parser::errors::ParseError&gt;)&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="981" width="0.0829%" height="15" fill="rgb(213,11,42)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::block::Block&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="965" width="0.0829%" height="15" fill="rgb(225,150,9)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::pipeline::Pipeline&gt;&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="949" width="0.0829%" height="15" fill="rgb(230,162,45)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="64.2354%" y="933" width="0.0829%" height="15" fill="rgb(222,14,52)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::ast::pipeline::Pipeline]&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="917" width="0.0829%" height="15" fill="rgb(254,198,14)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::pipeline::Pipeline&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="901" width="0.0829%" height="15" fill="rgb(220,217,30)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="885" width="0.0829%" height="15" fill="rgb(215,146,41)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="64.2354%" y="869" width="0.0829%" height="15" fill="rgb(217,27,36)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::ast::expression::Expression]&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="853" width="0.0829%" height="15" fill="rgb(219,218,39)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="837" width="0.0829%" height="15" fill="rgb(219,4,42)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="821" width="0.0829%" height="15" fill="rgb(249,119,36)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;nu_protocol::ast::cell_path::FullCellPath&gt;&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="805" width="0.0829%" height="15" fill="rgb(209,23,33)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::cell_path::FullCellPath&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="789" width="0.0829%" height="15" fill="rgb(211,10,0)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="773" width="0.0829%" height="15" fill="rgb(208,99,37)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="757" width="0.0829%" height="15" fill="rgb(213,132,31)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="741" width="0.0829%" height="15" fill="rgb(243,129,40)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="64.2354%" y="725" width="0.0829%" height="15" fill="rgb(210,66,33)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::ast::expression::Expression]&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="709" width="0.0829%" height="15" fill="rgb(209,189,4)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="693" width="0.0829%" height="15" fill="rgb(214,107,37)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="677" width="0.0829%" height="15" fill="rgb(245,88,54)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;nu_protocol::ast::cell_path::FullCellPath&gt;&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="661" width="0.0829%" height="15" fill="rgb(205,146,20)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::cell_path::FullCellPath&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="645" width="0.0829%" height="15" fill="rgb(220,161,25)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="629" width="0.0829%" height="15" fill="rgb(215,152,15)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="613" width="0.0829%" height="15" fill="rgb(233,192,44)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt;&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="597" width="0.0829%" height="15" fill="rgb(240,170,46)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="64.2354%" y="581" width="0.0829%" height="15" fill="rgb(207,104,33)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)]&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="565" width="0.0829%" height="15" fill="rgb(219,21,39)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="549" width="0.0829%" height="15" fill="rgb(214,133,29)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="533" width="0.0829%" height="15" fill="rgb(226,93,6)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="517" width="0.0829%" height="15" fill="rgb(252,222,34)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;nu_protocol::ast::cell_path::FullCellPath&gt;&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="501" width="0.0829%" height="15" fill="rgb(252,92,48)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::cell_path::FullCellPath&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="485" width="0.0829%" height="15" fill="rgb(245,223,24)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="469" width="0.0829%" height="15" fill="rgb(205,176,3)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="453" width="0.0829%" height="15" fill="rgb(235,151,15)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="437" width="0.0829%" height="15" fill="rgb(237,209,11)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="64.2354%" y="421" width="0.0829%" height="15" fill="rgb(243,227,24)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;]&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="405" width="0.0829%" height="15" fill="rgb(239,193,16)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="389" width="0.0829%" height="15" fill="rgb(231,27,9)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="64.2354%" y="373" width="0.0829%" height="15" fill="rgb(219,169,10)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::ast::expression::Expression]&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="357" width="0.0829%" height="15" fill="rgb(244,229,43)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="341" width="0.0829%" height="15" fill="rgb(254,38,20)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="325" width="0.0829%" height="15" fill="rgb(250,47,30)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;nu_protocol::ast::cell_path::FullCellPath&gt;&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="309" width="0.0829%" height="15" fill="rgb(224,124,36)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::cell_path::FullCellPath&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="293" width="0.0829%" height="15" fill="rgb(246,68,51)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="277" width="0.0829%" height="15" fill="rgb(253,43,49)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="261" width="0.0829%" height="15" fill="rgb(219,54,36)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt;&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="245" width="0.0829%" height="15" fill="rgb(227,133,34)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="64.2354%" y="229" width="0.0829%" height="15" fill="rgb(247,227,15)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)]&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="213" width="0.0829%" height="15" fill="rgb(229,96,14)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="197" width="0.0829%" height="15" fill="rgb(220,79,17)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="181" width="0.0829%" height="15" fill="rgb(205,131,53)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="165" width="0.0829%" height="15" fill="rgb(209,50,29)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="149" width="0.0829%" height="15" fill="rgb(245,86,46)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.08%)</title><rect x="64.2354%" y="133" width="0.0829%" height="15" fill="rgb(235,66,46)" fg:x="1550" fg:w="2"/><text x="64.4854%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="64.2768%" y="117" width="0.0414%" height="15" fill="rgb(232,148,31)" fg:x="1551" fg:w="1"/><text x="64.5268%" y="127.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.2768%" y="101" width="0.0414%" height="15" fill="rgb(217,149,8)" fg:x="1551" fg:w="1"/><text x="64.5268%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="64.2768%" y="85" width="0.0414%" height="15" fill="rgb(209,183,11)" fg:x="1551" fg:w="1"/><text x="64.5268%" y="95.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="64.2768%" y="69" width="0.0414%" height="15" fill="rgb(208,55,20)" fg:x="1551" fg:w="1"/><text x="64.5268%" y="79.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="64.2768%" y="53" width="0.0414%" height="15" fill="rgb(218,39,14)" fg:x="1551" fg:w="1"/><text x="64.5268%" y="63.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="64.2768%" y="37" width="0.0414%" height="15" fill="rgb(216,169,33)" fg:x="1551" fg:w="1"/><text x="64.5268%" y="47.50"></text></g><g><title>nu::main (4 samples, 0.17%)</title><rect x="64.1939%" y="1013" width="0.1658%" height="15" fill="rgb(233,80,24)" fg:x="1549" fg:w="4"/><text x="64.4439%" y="1023.50"></text></g><g><title>nu_cli::util::gather_parent_env_vars (1 samples, 0.04%)</title><rect x="64.3183%" y="997" width="0.0414%" height="15" fill="rgb(213,179,31)" fg:x="1552" fg:w="1"/><text x="64.5683%" y="1007.50"></text></g><g><title>nu_cli::util::gather_env_vars (1 samples, 0.04%)</title><rect x="64.3183%" y="981" width="0.0414%" height="15" fill="rgb(209,19,5)" fg:x="1552" fg:w="1"/><text x="64.5683%" y="991.50"></text></g><g><title>nu_protocol::engine::engine_state::EngineState::add_env_var (1 samples, 0.04%)</title><rect x="64.3183%" y="965" width="0.0414%" height="15" fill="rgb(219,18,35)" fg:x="1552" fg:w="1"/><text x="64.5683%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.04%)</title><rect x="64.3183%" y="949" width="0.0414%" height="15" fill="rgb(209,169,16)" fg:x="1552" fg:w="1"/><text x="64.5683%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="64.3183%" y="933" width="0.0414%" height="15" fill="rgb(245,90,51)" fg:x="1552" fg:w="1"/><text x="64.5683%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.04%)</title><rect x="64.3183%" y="917" width="0.0414%" height="15" fill="rgb(220,99,45)" fg:x="1552" fg:w="1"/><text x="64.5683%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="64.3183%" y="901" width="0.0414%" height="15" fill="rgb(249,89,25)" fg:x="1552" fg:w="1"/><text x="64.5683%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.04%)</title><rect x="64.3183%" y="885" width="0.0414%" height="15" fill="rgb(239,193,0)" fg:x="1552" fg:w="1"/><text x="64.5683%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.04%)</title><rect x="64.3183%" y="869" width="0.0414%" height="15" fill="rgb(231,126,1)" fg:x="1552" fg:w="1"/><text x="64.5683%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.04%)</title><rect x="64.3183%" y="853" width="0.0414%" height="15" fill="rgb(243,166,3)" fg:x="1552" fg:w="1"/><text x="64.5683%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.04%)</title><rect x="64.3183%" y="837" width="0.0414%" height="15" fill="rgb(223,22,34)" fg:x="1552" fg:w="1"/><text x="64.5683%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="64.3183%" y="821" width="0.0414%" height="15" fill="rgb(251,52,51)" fg:x="1552" fg:w="1"/><text x="64.5683%" y="831.50"></text></g><g><title>nu_cli::util::eval_source (1 samples, 0.04%)</title><rect x="64.3597%" y="997" width="0.0414%" height="15" fill="rgb(221,165,28)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::block::Block&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="981" width="0.0414%" height="15" fill="rgb(218,121,47)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::pipeline::Pipeline&gt;&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="965" width="0.0414%" height="15" fill="rgb(209,120,9)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.3597%" y="949" width="0.0414%" height="15" fill="rgb(236,68,12)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::ast::pipeline::Pipeline]&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="933" width="0.0414%" height="15" fill="rgb(225,194,26)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::pipeline::Pipeline&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="917" width="0.0414%" height="15" fill="rgb(231,84,39)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="901" width="0.0414%" height="15" fill="rgb(210,11,45)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.3597%" y="885" width="0.0414%" height="15" fill="rgb(224,54,52)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::ast::expression::Expression]&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="869" width="0.0414%" height="15" fill="rgb(238,102,14)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="853" width="0.0414%" height="15" fill="rgb(243,160,52)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="837" width="0.0414%" height="15" fill="rgb(216,114,19)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;nu_protocol::ast::cell_path::FullCellPath&gt;&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="821" width="0.0414%" height="15" fill="rgb(244,166,37)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::cell_path::FullCellPath&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="805" width="0.0414%" height="15" fill="rgb(246,29,44)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="789" width="0.0414%" height="15" fill="rgb(215,56,53)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="773" width="0.0414%" height="15" fill="rgb(217,60,2)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="757" width="0.0414%" height="15" fill="rgb(207,26,24)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.3597%" y="741" width="0.0414%" height="15" fill="rgb(252,210,15)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::ast::expression::Expression]&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="725" width="0.0414%" height="15" fill="rgb(253,209,26)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="709" width="0.0414%" height="15" fill="rgb(238,170,14)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="693" width="0.0414%" height="15" fill="rgb(216,178,15)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;nu_protocol::ast::cell_path::FullCellPath&gt;&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="677" width="0.0414%" height="15" fill="rgb(250,197,2)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::cell_path::FullCellPath&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="661" width="0.0414%" height="15" fill="rgb(212,70,42)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="645" width="0.0414%" height="15" fill="rgb(227,213,9)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="629" width="0.0414%" height="15" fill="rgb(245,99,25)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt;&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="613" width="0.0414%" height="15" fill="rgb(250,82,29)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.3597%" y="597" width="0.0414%" height="15" fill="rgb(241,226,54)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)]&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="581" width="0.0414%" height="15" fill="rgb(221,99,41)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="565" width="0.0414%" height="15" fill="rgb(213,90,21)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="549" width="0.0414%" height="15" fill="rgb(205,208,24)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="533" width="0.0414%" height="15" fill="rgb(246,31,12)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;nu_protocol::ast::cell_path::FullCellPath&gt;&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="517" width="0.0414%" height="15" fill="rgb(213,154,6)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::cell_path::FullCellPath&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="501" width="0.0414%" height="15" fill="rgb(222,163,29)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="485" width="0.0414%" height="15" fill="rgb(227,201,8)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="469" width="0.0414%" height="15" fill="rgb(233,9,32)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="453" width="0.0414%" height="15" fill="rgb(217,54,24)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.3597%" y="437" width="0.0414%" height="15" fill="rgb(235,192,0)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;]&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="421" width="0.0414%" height="15" fill="rgb(235,45,9)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="405" width="0.0414%" height="15" fill="rgb(246,42,40)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.3597%" y="389" width="0.0414%" height="15" fill="rgb(248,111,24)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::ast::expression::Expression]&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="373" width="0.0414%" height="15" fill="rgb(249,65,22)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="357" width="0.0414%" height="15" fill="rgb(238,111,51)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="341" width="0.0414%" height="15" fill="rgb(250,118,22)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;nu_protocol::ast::cell_path::FullCellPath&gt;&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="325" width="0.0414%" height="15" fill="rgb(234,84,26)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::cell_path::FullCellPath&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="309" width="0.0414%" height="15" fill="rgb(243,172,12)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="293" width="0.0414%" height="15" fill="rgb(236,150,49)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="277" width="0.0414%" height="15" fill="rgb(225,197,26)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt;&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="261" width="0.0414%" height="15" fill="rgb(214,17,42)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.3597%" y="245" width="0.0414%" height="15" fill="rgb(224,165,40)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)]&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="229" width="0.0414%" height="15" fill="rgb(246,100,4)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="213" width="0.0414%" height="15" fill="rgb(222,103,0)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="197" width="0.0414%" height="15" fill="rgb(227,189,26)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="181" width="0.0414%" height="15" fill="rgb(214,202,17)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="165" width="0.0414%" height="15" fill="rgb(229,111,3)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="149" width="0.0414%" height="15" fill="rgb(229,172,15)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="64.3597%" y="133" width="0.0414%" height="15" fill="rgb(230,224,35)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="143.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.3597%" y="117" width="0.0414%" height="15" fill="rgb(251,141,6)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="64.3597%" y="101" width="0.0414%" height="15" fill="rgb(225,208,6)" fg:x="1553" fg:w="1"/><text x="64.6097%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="64.5255%" y="949" width="0.0829%" height="15" fill="rgb(246,181,16)" fg:x="1557" fg:w="2"/><text x="64.7755%" y="959.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="64.5669%" y="933" width="0.0414%" height="15" fill="rgb(227,129,36)" fg:x="1558" fg:w="1"/><text x="64.8169%" y="943.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="64.5669%" y="917" width="0.0414%" height="15" fill="rgb(248,117,24)" fg:x="1558" fg:w="1"/><text x="64.8169%" y="927.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="64.5669%" y="901" width="0.0414%" height="15" fill="rgb(214,185,35)" fg:x="1558" fg:w="1"/><text x="64.8169%" y="911.50"></text></g><g><title>nu_cli::eval_file::evaluate_file (9 samples, 0.37%)</title><rect x="64.3597%" y="1013" width="0.3730%" height="15" fill="rgb(236,150,34)" fg:x="1553" fg:w="9"/><text x="64.6097%" y="1023.50"></text></g><g><title>nu_parser::parser::parse (8 samples, 0.33%)</title><rect x="64.4012%" y="997" width="0.3315%" height="15" fill="rgb(243,228,27)" fg:x="1554" fg:w="8"/><text x="64.6512%" y="1007.50"></text></g><g><title>nu_parser::lex::lex (8 samples, 0.33%)</title><rect x="64.4012%" y="981" width="0.3315%" height="15" fill="rgb(245,77,44)" fg:x="1554" fg:w="8"/><text x="64.6512%" y="991.50"></text></g><g><title>nu_parser::lex::lex_item (8 samples, 0.33%)</title><rect x="64.4012%" y="965" width="0.3315%" height="15" fill="rgb(235,214,42)" fg:x="1554" fg:w="8"/><text x="64.6512%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (3 samples, 0.12%)</title><rect x="64.6084%" y="949" width="0.1243%" height="15" fill="rgb(221,74,3)" fg:x="1559" fg:w="3"/><text x="64.8584%" y="959.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (3 samples, 0.12%)</title><rect x="64.6084%" y="933" width="0.1243%" height="15" fill="rgb(206,121,29)" fg:x="1559" fg:w="3"/><text x="64.8584%" y="943.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="64.6913%" y="917" width="0.0414%" height="15" fill="rgb(249,131,53)" fg:x="1561" fg:w="1"/><text x="64.9413%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::block::Block&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="997" width="0.0414%" height="15" fill="rgb(236,170,29)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::pipeline::Pipeline&gt;&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="981" width="0.0414%" height="15" fill="rgb(247,96,15)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.7327%" y="965" width="0.0414%" height="15" fill="rgb(211,210,7)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::ast::pipeline::Pipeline]&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="949" width="0.0414%" height="15" fill="rgb(240,88,50)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::pipeline::Pipeline&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="933" width="0.0414%" height="15" fill="rgb(209,229,26)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="917" width="0.0414%" height="15" fill="rgb(210,68,23)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.7327%" y="901" width="0.0414%" height="15" fill="rgb(229,180,13)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::ast::expression::Expression]&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="885" width="0.0414%" height="15" fill="rgb(236,53,44)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="869" width="0.0414%" height="15" fill="rgb(244,214,29)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="853" width="0.0414%" height="15" fill="rgb(220,75,29)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;nu_protocol::ast::cell_path::FullCellPath&gt;&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="837" width="0.0414%" height="15" fill="rgb(214,183,37)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::cell_path::FullCellPath&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="821" width="0.0414%" height="15" fill="rgb(239,117,29)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="805" width="0.0414%" height="15" fill="rgb(237,171,35)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="789" width="0.0414%" height="15" fill="rgb(229,178,53)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="773" width="0.0414%" height="15" fill="rgb(210,102,19)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.7327%" y="757" width="0.0414%" height="15" fill="rgb(235,127,22)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::ast::expression::Expression]&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="741" width="0.0414%" height="15" fill="rgb(244,31,31)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="725" width="0.0414%" height="15" fill="rgb(231,43,21)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="709" width="0.0414%" height="15" fill="rgb(217,131,35)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;nu_protocol::ast::cell_path::FullCellPath&gt;&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="693" width="0.0414%" height="15" fill="rgb(221,149,4)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::cell_path::FullCellPath&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="677" width="0.0414%" height="15" fill="rgb(232,170,28)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="661" width="0.0414%" height="15" fill="rgb(238,56,10)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="645" width="0.0414%" height="15" fill="rgb(235,196,14)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt;&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="629" width="0.0414%" height="15" fill="rgb(216,45,48)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.7327%" y="613" width="0.0414%" height="15" fill="rgb(238,213,17)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)]&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="597" width="0.0414%" height="15" fill="rgb(212,13,2)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="581" width="0.0414%" height="15" fill="rgb(240,114,20)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="565" width="0.0414%" height="15" fill="rgb(228,41,40)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="549" width="0.0414%" height="15" fill="rgb(244,132,35)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;nu_protocol::ast::cell_path::FullCellPath&gt;&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="533" width="0.0414%" height="15" fill="rgb(253,189,4)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::cell_path::FullCellPath&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="517" width="0.0414%" height="15" fill="rgb(224,37,19)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="501" width="0.0414%" height="15" fill="rgb(235,223,18)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="485" width="0.0414%" height="15" fill="rgb(235,163,25)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="469" width="0.0414%" height="15" fill="rgb(217,145,28)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.7327%" y="453" width="0.0414%" height="15" fill="rgb(223,223,32)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;]&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="437" width="0.0414%" height="15" fill="rgb(227,189,39)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="421" width="0.0414%" height="15" fill="rgb(248,10,22)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.7327%" y="405" width="0.0414%" height="15" fill="rgb(248,46,39)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::ast::expression::Expression]&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="389" width="0.0414%" height="15" fill="rgb(248,113,48)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="373" width="0.0414%" height="15" fill="rgb(245,16,25)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="357" width="0.0414%" height="15" fill="rgb(249,152,16)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;nu_protocol::ast::cell_path::FullCellPath&gt;&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="341" width="0.0414%" height="15" fill="rgb(250,16,1)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::cell_path::FullCellPath&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="325" width="0.0414%" height="15" fill="rgb(249,138,3)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="309" width="0.0414%" height="15" fill="rgb(227,71,41)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="293" width="0.0414%" height="15" fill="rgb(209,184,23)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt;&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="277" width="0.0414%" height="15" fill="rgb(223,215,31)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.7327%" y="261" width="0.0414%" height="15" fill="rgb(210,146,28)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)]&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="245" width="0.0414%" height="15" fill="rgb(209,183,41)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="229" width="0.0414%" height="15" fill="rgb(209,224,45)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="213" width="0.0414%" height="15" fill="rgb(224,209,51)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="197" width="0.0414%" height="15" fill="rgb(223,17,39)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="181" width="0.0414%" height="15" fill="rgb(234,204,37)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="165" width="0.0414%" height="15" fill="rgb(236,120,5)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="64.7327%" y="149" width="0.0414%" height="15" fill="rgb(248,97,27)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="159.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="64.7327%" y="133" width="0.0414%" height="15" fill="rgb(240,66,17)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="64.7327%" y="117" width="0.0414%" height="15" fill="rgb(210,79,3)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="127.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="64.7327%" y="101" width="0.0414%" height="15" fill="rgb(214,176,27)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="111.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="64.7327%" y="85" width="0.0414%" height="15" fill="rgb(235,185,3)" fg:x="1562" fg:w="1"/><text x="64.9827%" y="95.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (4 samples, 0.17%)</title><rect x="64.7741%" y="949" width="0.1658%" height="15" fill="rgb(227,24,12)" fg:x="1563" fg:w="4"/><text x="65.0241%" y="959.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (2 samples, 0.08%)</title><rect x="64.8570%" y="933" width="0.0829%" height="15" fill="rgb(252,169,48)" fg:x="1565" fg:w="2"/><text x="65.1070%" y="943.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="64.8985%" y="917" width="0.0414%" height="15" fill="rgb(212,65,1)" fg:x="1566" fg:w="1"/><text x="65.1485%" y="927.50"></text></g><g><title>nu_parser::lex::lex (5 samples, 0.21%)</title><rect x="64.7741%" y="981" width="0.2072%" height="15" fill="rgb(242,39,24)" fg:x="1563" fg:w="5"/><text x="65.0241%" y="991.50"></text></g><g><title>nu_parser::lex::lex_item (5 samples, 0.21%)</title><rect x="64.7741%" y="965" width="0.2072%" height="15" fill="rgb(249,32,23)" fg:x="1563" fg:w="5"/><text x="65.0241%" y="975.50"></text></g><g><title>nu_parser::lex::is_item_terminator (1 samples, 0.04%)</title><rect x="64.9399%" y="949" width="0.0414%" height="15" fill="rgb(251,195,23)" fg:x="1567" fg:w="1"/><text x="65.1899%" y="959.50"></text></g><g><title>nu_cli::util::eval_source (7 samples, 0.29%)</title><rect x="64.7327%" y="1013" width="0.2901%" height="15" fill="rgb(236,174,8)" fg:x="1562" fg:w="7"/><text x="64.9827%" y="1023.50"></text></g><g><title>nu_parser::parser::parse (6 samples, 0.25%)</title><rect x="64.7741%" y="997" width="0.2487%" height="15" fill="rgb(220,197,8)" fg:x="1563" fg:w="6"/><text x="65.0241%" y="1007.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::add_file (1 samples, 0.04%)</title><rect x="64.9814%" y="981" width="0.0414%" height="15" fill="rgb(240,108,37)" fg:x="1568" fg:w="1"/><text x="65.2314%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="64.9814%" y="965" width="0.0414%" height="15" fill="rgb(232,176,24)" fg:x="1568" fg:w="1"/><text x="65.2314%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="64.9814%" y="949" width="0.0414%" height="15" fill="rgb(243,35,29)" fg:x="1568" fg:w="1"/><text x="65.2314%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="64.9814%" y="933" width="0.0414%" height="15" fill="rgb(210,37,18)" fg:x="1568" fg:w="1"/><text x="65.2314%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="64.9814%" y="917" width="0.0414%" height="15" fill="rgb(224,184,40)" fg:x="1568" fg:w="1"/><text x="65.2314%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="64.9814%" y="901" width="0.0414%" height="15" fill="rgb(236,39,29)" fg:x="1568" fg:w="1"/><text x="65.2314%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="64.9814%" y="885" width="0.0414%" height="15" fill="rgb(232,48,39)" fg:x="1568" fg:w="1"/><text x="65.2314%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="64.9814%" y="869" width="0.0414%" height="15" fill="rgb(236,34,42)" fg:x="1568" fg:w="1"/><text x="65.2314%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="64.9814%" y="853" width="0.0414%" height="15" fill="rgb(243,106,37)" fg:x="1568" fg:w="1"/><text x="65.2314%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="64.9814%" y="837" width="0.0414%" height="15" fill="rgb(218,96,6)" fg:x="1568" fg:w="1"/><text x="65.2314%" y="847.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="64.9814%" y="821" width="0.0414%" height="15" fill="rgb(235,130,12)" fg:x="1568" fg:w="1"/><text x="65.2314%" y="831.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="64.9814%" y="805" width="0.0414%" height="15" fill="rgb(231,95,0)" fg:x="1568" fg:w="1"/><text x="65.2314%" y="815.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="64.9814%" y="789" width="0.0414%" height="15" fill="rgb(228,12,23)" fg:x="1568" fg:w="1"/><text x="65.2314%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="64.9814%" y="773" width="0.0414%" height="15" fill="rgb(216,12,1)" fg:x="1568" fg:w="1"/><text x="65.2314%" y="783.50"></text></g><g><title>nu_cli::util::gather_env_vars (1 samples, 0.04%)</title><rect x="65.0228%" y="1013" width="0.0414%" height="15" fill="rgb(219,59,3)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="1023.50"></text></g><g><title>nu_protocol::engine::engine_state::EngineState::add_env_var (1 samples, 0.04%)</title><rect x="65.0228%" y="997" width="0.0414%" height="15" fill="rgb(215,208,46)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.04%)</title><rect x="65.0228%" y="981" width="0.0414%" height="15" fill="rgb(254,224,29)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="65.0228%" y="965" width="0.0414%" height="15" fill="rgb(232,14,29)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.04%)</title><rect x="65.0228%" y="949" width="0.0414%" height="15" fill="rgb(208,45,52)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="65.0228%" y="933" width="0.0414%" height="15" fill="rgb(234,191,28)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.04%)</title><rect x="65.0228%" y="917" width="0.0414%" height="15" fill="rgb(244,67,43)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.04%)</title><rect x="65.0228%" y="901" width="0.0414%" height="15" fill="rgb(236,189,24)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.04%)</title><rect x="65.0228%" y="885" width="0.0414%" height="15" fill="rgb(239,214,33)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.04%)</title><rect x="65.0228%" y="869" width="0.0414%" height="15" fill="rgb(226,176,41)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.04%)</title><rect x="65.0228%" y="853" width="0.0414%" height="15" fill="rgb(248,47,8)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.04%)</title><rect x="65.0228%" y="837" width="0.0414%" height="15" fill="rgb(218,81,44)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="847.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.04%)</title><rect x="65.0228%" y="821" width="0.0414%" height="15" fill="rgb(213,98,6)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="65.0228%" y="805" width="0.0414%" height="15" fill="rgb(222,85,22)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="65.0228%" y="789" width="0.0414%" height="15" fill="rgb(239,46,39)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="799.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="65.0228%" y="773" width="0.0414%" height="15" fill="rgb(237,12,29)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="783.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="65.0228%" y="757" width="0.0414%" height="15" fill="rgb(214,77,8)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="65.0228%" y="741" width="0.0414%" height="15" fill="rgb(217,168,37)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="65.0228%" y="725" width="0.0414%" height="15" fill="rgb(221,217,23)" fg:x="1569" fg:w="1"/><text x="65.2728%" y="735.50"></text></g><g><title>nu_protocol::engine::engine_state::EngineState::merge_delta (1 samples, 0.04%)</title><rect x="65.0642%" y="997" width="0.0414%" height="15" fill="rgb(243,229,36)" fg:x="1570" fg:w="1"/><text x="65.3142%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="65.0642%" y="981" width="0.0414%" height="15" fill="rgb(251,163,40)" fg:x="1570" fg:w="1"/><text x="65.3142%" y="991.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="65.0642%" y="965" width="0.0414%" height="15" fill="rgb(237,222,12)" fg:x="1570" fg:w="1"/><text x="65.3142%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="65.0642%" y="949" width="0.0414%" height="15" fill="rgb(248,132,6)" fg:x="1570" fg:w="1"/><text x="65.3142%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::read (1 samples, 0.04%)</title><rect x="65.0642%" y="933" width="0.0414%" height="15" fill="rgb(227,167,50)" fg:x="1570" fg:w="1"/><text x="65.3142%" y="943.50"></text></g><g><title>nu_protocol::engine::engine_state::EngineState::new (1 samples, 0.04%)</title><rect x="65.1057%" y="997" width="0.0414%" height="15" fill="rgb(242,84,37)" fg:x="1571" fg:w="1"/><text x="65.3557%" y="1007.50"></text></g><g><title>&lt;nu_protocol::config::Config as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="65.1057%" y="981" width="0.0414%" height="15" fill="rgb(212,4,50)" fg:x="1571" fg:w="1"/><text x="65.3557%" y="991.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="65.1057%" y="965" width="0.0414%" height="15" fill="rgb(230,228,32)" fg:x="1571" fg:w="1"/><text x="65.3557%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.04%)</title><rect x="65.1057%" y="949" width="0.0414%" height="15" fill="rgb(248,217,23)" fg:x="1571" fg:w="1"/><text x="65.3557%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.04%)</title><rect x="65.1057%" y="933" width="0.0414%" height="15" fill="rgb(238,197,32)" fg:x="1571" fg:w="1"/><text x="65.3557%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.04%)</title><rect x="65.1057%" y="917" width="0.0414%" height="15" fill="rgb(236,106,1)" fg:x="1571" fg:w="1"/><text x="65.3557%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.04%)</title><rect x="65.1057%" y="901" width="0.0414%" height="15" fill="rgb(219,228,13)" fg:x="1571" fg:w="1"/><text x="65.3557%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="65.1057%" y="885" width="0.0414%" height="15" fill="rgb(238,30,35)" fg:x="1571" fg:w="1"/><text x="65.3557%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="65.1057%" y="869" width="0.0414%" height="15" fill="rgb(236,70,23)" fg:x="1571" fg:w="1"/><text x="65.3557%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="65.1057%" y="853" width="0.0414%" height="15" fill="rgb(249,104,48)" fg:x="1571" fg:w="1"/><text x="65.3557%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.04%)</title><rect x="65.1057%" y="837" width="0.0414%" height="15" fill="rgb(254,117,50)" fg:x="1571" fg:w="1"/><text x="65.3557%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="65.1057%" y="821" width="0.0414%" height="15" fill="rgb(223,152,4)" fg:x="1571" fg:w="1"/><text x="65.3557%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="65.1057%" y="805" width="0.0414%" height="15" fill="rgb(245,6,2)" fg:x="1571" fg:w="1"/><text x="65.3557%" y="815.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.04%)</title><rect x="65.1471%" y="949" width="0.0414%" height="15" fill="rgb(249,150,24)" fg:x="1572" fg:w="1"/><text x="65.3971%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.04%)</title><rect x="65.1471%" y="933" width="0.0414%" height="15" fill="rgb(228,185,42)" fg:x="1572" fg:w="1"/><text x="65.3971%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.04%)</title><rect x="65.1471%" y="917" width="0.0414%" height="15" fill="rgb(226,39,33)" fg:x="1572" fg:w="1"/><text x="65.3971%" y="927.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.04%)</title><rect x="65.1471%" y="901" width="0.0414%" height="15" fill="rgb(221,166,19)" fg:x="1572" fg:w="1"/><text x="65.3971%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="65.1471%" y="885" width="0.0414%" height="15" fill="rgb(209,109,2)" fg:x="1572" fg:w="1"/><text x="65.3971%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (1 samples, 0.04%)</title><rect x="65.1886%" y="869" width="0.0414%" height="15" fill="rgb(252,216,26)" fg:x="1573" fg:w="1"/><text x="65.4386%" y="879.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.04%)</title><rect x="65.1886%" y="853" width="0.0414%" height="15" fill="rgb(227,173,36)" fg:x="1573" fg:w="1"/><text x="65.4386%" y="863.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="65.1886%" y="837" width="0.0414%" height="15" fill="rgb(209,90,7)" fg:x="1573" fg:w="1"/><text x="65.4386%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.04%)</title><rect x="65.1886%" y="821" width="0.0414%" height="15" fill="rgb(250,194,11)" fg:x="1573" fg:w="1"/><text x="65.4386%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="65.1886%" y="805" width="0.0414%" height="15" fill="rgb(220,72,50)" fg:x="1573" fg:w="1"/><text x="65.4386%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="65.1886%" y="789" width="0.0414%" height="15" fill="rgb(222,106,48)" fg:x="1573" fg:w="1"/><text x="65.4386%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="65.1886%" y="773" width="0.0414%" height="15" fill="rgb(216,220,45)" fg:x="1573" fg:w="1"/><text x="65.4386%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="65.1886%" y="757" width="0.0414%" height="15" fill="rgb(234,112,18)" fg:x="1573" fg:w="1"/><text x="65.4386%" y="767.50"></text></g><g><title>nu_command::default_context::create_default_context (5 samples, 0.21%)</title><rect x="65.0642%" y="1013" width="0.2072%" height="15" fill="rgb(206,179,9)" fg:x="1570" fg:w="5"/><text x="65.3142%" y="1023.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::add_decl (3 samples, 0.12%)</title><rect x="65.1471%" y="997" width="0.1243%" height="15" fill="rgb(215,115,40)" fg:x="1572" fg:w="3"/><text x="65.3971%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (3 samples, 0.12%)</title><rect x="65.1471%" y="981" width="0.1243%" height="15" fill="rgb(222,69,34)" fg:x="1572" fg:w="3"/><text x="65.3971%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.12%)</title><rect x="65.1471%" y="965" width="0.1243%" height="15" fill="rgb(209,161,10)" fg:x="1572" fg:w="3"/><text x="65.3971%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.08%)</title><rect x="65.1886%" y="949" width="0.0829%" height="15" fill="rgb(217,6,38)" fg:x="1573" fg:w="2"/><text x="65.4386%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.08%)</title><rect x="65.1886%" y="933" width="0.0829%" height="15" fill="rgb(229,229,48)" fg:x="1573" fg:w="2"/><text x="65.4386%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.08%)</title><rect x="65.1886%" y="917" width="0.0829%" height="15" fill="rgb(225,21,28)" fg:x="1573" fg:w="2"/><text x="65.4386%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (2 samples, 0.08%)</title><rect x="65.1886%" y="901" width="0.0829%" height="15" fill="rgb(206,33,13)" fg:x="1573" fg:w="2"/><text x="65.4386%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (2 samples, 0.08%)</title><rect x="65.1886%" y="885" width="0.0829%" height="15" fill="rgb(242,178,17)" fg:x="1573" fg:w="2"/><text x="65.4386%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.04%)</title><rect x="65.2300%" y="869" width="0.0414%" height="15" fill="rgb(220,162,5)" fg:x="1574" fg:w="1"/><text x="65.4800%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.04%)</title><rect x="65.2300%" y="853" width="0.0414%" height="15" fill="rgb(210,33,43)" fg:x="1574" fg:w="1"/><text x="65.4800%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.04%)</title><rect x="65.2300%" y="837" width="0.0414%" height="15" fill="rgb(216,116,54)" fg:x="1574" fg:w="1"/><text x="65.4800%" y="847.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.04%)</title><rect x="65.2300%" y="821" width="0.0414%" height="15" fill="rgb(249,92,24)" fg:x="1574" fg:w="1"/><text x="65.4800%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="65.2300%" y="805" width="0.0414%" height="15" fill="rgb(231,189,14)" fg:x="1574" fg:w="1"/><text x="65.4800%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="65.2300%" y="789" width="0.0414%" height="15" fill="rgb(230,8,41)" fg:x="1574" fg:w="1"/><text x="65.4800%" y="799.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="65.2300%" y="773" width="0.0414%" height="15" fill="rgb(249,7,27)" fg:x="1574" fg:w="1"/><text x="65.4800%" y="783.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="65.2300%" y="757" width="0.0414%" height="15" fill="rgb(232,86,5)" fg:x="1574" fg:w="1"/><text x="65.4800%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="65.2300%" y="741" width="0.0414%" height="15" fill="rgb(224,175,18)" fg:x="1574" fg:w="1"/><text x="65.4800%" y="751.50"></text></g><g><title>&lt;tabled::alignment::Alignment as tabled::table::CellOption&gt;::change_cell (1 samples, 0.04%)</title><rect x="65.2714%" y="965" width="0.0414%" height="15" fill="rgb(220,129,12)" fg:x="1575" fg:w="1"/><text x="65.5214%" y="975.50"></text></g><g><title>papergrid::Settings::alignment (1 samples, 0.04%)</title><rect x="65.2714%" y="949" width="0.0414%" height="15" fill="rgb(210,19,36)" fg:x="1575" fg:w="1"/><text x="65.5214%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="65.2714%" y="933" width="0.0414%" height="15" fill="rgb(219,96,14)" fg:x="1575" fg:w="1"/><text x="65.5214%" y="943.50"></text></g><g><title>&lt;tabled::modify::ModifyList&lt;O,S&gt; as tabled::table::TableOption&gt;::change (2 samples, 0.08%)</title><rect x="65.2714%" y="981" width="0.0829%" height="15" fill="rgb(249,106,1)" fg:x="1575" fg:w="2"/><text x="65.5214%" y="991.50"></text></g><g><title>&lt;tabled::object::CellIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="65.3129%" y="965" width="0.0414%" height="15" fill="rgb(249,155,20)" fg:x="1576" fg:w="1"/><text x="65.5629%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.04%)</title><rect x="65.3129%" y="949" width="0.0414%" height="15" fill="rgb(244,168,9)" fg:x="1576" fg:w="1"/><text x="65.5629%" y="959.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="65.3129%" y="933" width="0.0414%" height="15" fill="rgb(216,23,50)" fg:x="1576" fg:w="1"/><text x="65.5629%" y="943.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="65.3129%" y="917" width="0.0414%" height="15" fill="rgb(224,219,20)" fg:x="1576" fg:w="1"/><text x="65.5629%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="65.3543%" y="933" width="0.0414%" height="15" fill="rgb(222,156,15)" fg:x="1577" fg:w="1"/><text x="65.6043%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.04%)</title><rect x="65.3543%" y="917" width="0.0414%" height="15" fill="rgb(231,97,17)" fg:x="1577" fg:w="1"/><text x="65.6043%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="65.3543%" y="901" width="0.0414%" height="15" fill="rgb(218,70,48)" fg:x="1577" fg:w="1"/><text x="65.6043%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="65.3543%" y="885" width="0.0414%" height="15" fill="rgb(212,196,52)" fg:x="1577" fg:w="1"/><text x="65.6043%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="65.3543%" y="869" width="0.0414%" height="15" fill="rgb(243,203,18)" fg:x="1577" fg:w="1"/><text x="65.6043%" y="879.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.04%)</title><rect x="65.3958%" y="869" width="0.0414%" height="15" fill="rgb(252,125,41)" fg:x="1578" fg:w="1"/><text x="65.6458%" y="879.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.04%)</title><rect x="65.3958%" y="853" width="0.0414%" height="15" fill="rgb(223,180,33)" fg:x="1578" fg:w="1"/><text x="65.6458%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="65.3958%" y="837" width="0.0414%" height="15" fill="rgb(254,159,46)" fg:x="1578" fg:w="1"/><text x="65.6458%" y="847.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="65.3958%" y="821" width="0.0414%" height="15" fill="rgb(254,38,10)" fg:x="1578" fg:w="1"/><text x="65.6458%" y="831.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="65.3958%" y="805" width="0.0414%" height="15" fill="rgb(208,217,32)" fg:x="1578" fg:w="1"/><text x="65.6458%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (1 samples, 0.04%)</title><rect x="65.3958%" y="789" width="0.0414%" height="15" fill="rgb(221,120,13)" fg:x="1578" fg:w="1"/><text x="65.6458%" y="799.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="65.3958%" y="901" width="0.0829%" height="15" fill="rgb(246,54,52)" fg:x="1578" fg:w="2"/><text x="65.6458%" y="911.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (2 samples, 0.08%)</title><rect x="65.3958%" y="885" width="0.0829%" height="15" fill="rgb(242,34,25)" fg:x="1578" fg:w="2"/><text x="65.6458%" y="895.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::get_end (1 samples, 0.04%)</title><rect x="65.4372%" y="869" width="0.0414%" height="15" fill="rgb(247,209,9)" fg:x="1579" fg:w="1"/><text x="65.6872%" y="879.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="65.4372%" y="853" width="0.0414%" height="15" fill="rgb(228,71,26)" fg:x="1579" fg:w="1"/><text x="65.6872%" y="863.50"></text></g><g><title>ansi_str::begin_ansi_sequences (1 samples, 0.04%)</title><rect x="65.4787%" y="901" width="0.0414%" height="15" fill="rgb(222,145,49)" fg:x="1580" fg:w="1"/><text x="65.7287%" y="911.50"></text></g><g><title>alloc::string::String::push (1 samples, 0.04%)</title><rect x="65.4787%" y="885" width="0.0414%" height="15" fill="rgb(218,121,17)" fg:x="1580" fg:w="1"/><text x="65.7287%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="65.4787%" y="869" width="0.0414%" height="15" fill="rgb(244,50,7)" fg:x="1580" fg:w="1"/><text x="65.7287%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="65.4787%" y="853" width="0.0414%" height="15" fill="rgb(246,229,37)" fg:x="1580" fg:w="1"/><text x="65.7287%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="65.4787%" y="837" width="0.0414%" height="15" fill="rgb(225,18,5)" fg:x="1580" fg:w="1"/><text x="65.7287%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="65.3958%" y="933" width="0.1658%" height="15" fill="rgb(213,204,8)" fg:x="1578" fg:w="4"/><text x="65.6458%" y="943.50"></text></g><g><title>&lt;ansi_str::AnsiSplit as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="65.3958%" y="917" width="0.1658%" height="15" fill="rgb(238,103,6)" fg:x="1578" fg:w="4"/><text x="65.6458%" y="927.50"></text></g><g><title>ansi_str::is_ansi_state_set (1 samples, 0.04%)</title><rect x="65.5201%" y="901" width="0.0414%" height="15" fill="rgb(222,25,35)" fg:x="1581" fg:w="1"/><text x="65.7701%" y="911.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.04%)</title><rect x="65.5615%" y="933" width="0.0414%" height="15" fill="rgb(213,203,35)" fg:x="1582" fg:w="1"/><text x="65.8115%" y="943.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.04%)</title><rect x="65.5615%" y="917" width="0.0414%" height="15" fill="rgb(221,79,53)" fg:x="1582" fg:w="1"/><text x="65.8115%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="65.5615%" y="901" width="0.0414%" height="15" fill="rgb(243,200,35)" fg:x="1582" fg:w="1"/><text x="65.8115%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="65.5615%" y="885" width="0.0414%" height="15" fill="rgb(248,60,25)" fg:x="1582" fg:w="1"/><text x="65.8115%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="65.5615%" y="869" width="0.0414%" height="15" fill="rgb(227,53,46)" fg:x="1582" fg:w="1"/><text x="65.8115%" y="879.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="65.5615%" y="853" width="0.0414%" height="15" fill="rgb(216,120,32)" fg:x="1582" fg:w="1"/><text x="65.8115%" y="863.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.04%)</title><rect x="65.5615%" y="837" width="0.0414%" height="15" fill="rgb(220,134,1)" fg:x="1582" fg:w="1"/><text x="65.8115%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.04%)</title><rect x="65.5615%" y="821" width="0.0414%" height="15" fill="rgb(237,168,5)" fg:x="1582" fg:w="1"/><text x="65.8115%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="65.6030%" y="837" width="0.0414%" height="15" fill="rgb(231,100,33)" fg:x="1583" fg:w="1"/><text x="65.8530%" y="847.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="65.6030%" y="853" width="0.0829%" height="15" fill="rgb(236,177,47)" fg:x="1583" fg:w="2"/><text x="65.8530%" y="863.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="65.6444%" y="837" width="0.0414%" height="15" fill="rgb(235,7,49)" fg:x="1584" fg:w="1"/><text x="65.8944%" y="847.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_fmt (2 samples, 0.08%)</title><rect x="65.7273%" y="789" width="0.0829%" height="15" fill="rgb(232,119,22)" fg:x="1586" fg:w="2"/><text x="65.9773%" y="799.50"></text></g><g><title>std::io::Write::write_fmt (2 samples, 0.08%)</title><rect x="65.7273%" y="773" width="0.0829%" height="15" fill="rgb(254,73,53)" fg:x="1586" fg:w="2"/><text x="65.9773%" y="783.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="65.7688%" y="757" width="0.0414%" height="15" fill="rgb(251,35,20)" fg:x="1587" fg:w="1"/><text x="66.0188%" y="767.50"></text></g><g><title>core::fmt::Write::write_char (1 samples, 0.04%)</title><rect x="65.7688%" y="741" width="0.0414%" height="15" fill="rgb(241,119,20)" fg:x="1587" fg:w="1"/><text x="66.0188%" y="751.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="65.7688%" y="725" width="0.0414%" height="15" fill="rgb(207,102,14)" fg:x="1587" fg:w="1"/><text x="66.0188%" y="735.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="65.7688%" y="709" width="0.0414%" height="15" fill="rgb(248,201,50)" fg:x="1587" fg:w="1"/><text x="66.0188%" y="719.50"></text></g><g><title>core::fmt::ArgumentV1::new_display (2 samples, 0.08%)</title><rect x="65.8102%" y="789" width="0.0829%" height="15" fill="rgb(222,185,44)" fg:x="1588" fg:w="2"/><text x="66.0602%" y="799.50"></text></g><g><title>core::fmt::ArgumentV1::new (2 samples, 0.08%)</title><rect x="65.8102%" y="773" width="0.0829%" height="15" fill="rgb(218,107,18)" fg:x="1588" fg:w="2"/><text x="66.0602%" y="783.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.33%)</title><rect x="65.6030%" y="885" width="0.3315%" height="15" fill="rgb(237,177,39)" fg:x="1583" fg:w="8"/><text x="65.8530%" y="895.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (8 samples, 0.33%)</title><rect x="65.6030%" y="869" width="0.3315%" height="15" fill="rgb(246,69,6)" fg:x="1583" fg:w="8"/><text x="65.8530%" y="879.50"></text></g><g><title>vte::Parser::advance (6 samples, 0.25%)</title><rect x="65.6859%" y="853" width="0.2487%" height="15" fill="rgb(234,208,37)" fg:x="1585" fg:w="6"/><text x="65.9359%" y="863.50"></text></g><g><title>vte::Parser::perform_state_change (5 samples, 0.21%)</title><rect x="65.7273%" y="837" width="0.2072%" height="15" fill="rgb(225,4,6)" fg:x="1586" fg:w="5"/><text x="65.9773%" y="847.50"></text></g><g><title>vte::Parser::perform_action (5 samples, 0.21%)</title><rect x="65.7273%" y="821" width="0.2072%" height="15" fill="rgb(233,45,0)" fg:x="1586" fg:w="5"/><text x="65.9773%" y="831.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::print (5 samples, 0.21%)</title><rect x="65.7273%" y="805" width="0.2072%" height="15" fill="rgb(226,136,5)" fg:x="1586" fg:w="5"/><text x="65.9773%" y="815.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::err (1 samples, 0.04%)</title><rect x="65.8931%" y="789" width="0.0414%" height="15" fill="rgb(211,91,47)" fg:x="1590" fg:w="1"/><text x="66.1431%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::result::Result&lt;(),std::io::error::Error&gt;&gt; (1 samples, 0.04%)</title><rect x="65.8931%" y="773" width="0.0414%" height="15" fill="rgb(242,88,51)" fg:x="1590" fg:w="1"/><text x="66.1431%" y="783.50"></text></g><g><title>papergrid::Grid::total_width (15 samples, 0.62%)</title><rect x="65.3543%" y="965" width="0.6216%" height="15" fill="rgb(230,91,28)" fg:x="1577" fg:w="15"/><text x="65.6043%" y="975.50"></text></g><g><title>papergrid::cells_content (15 samples, 0.62%)</title><rect x="65.3543%" y="949" width="0.6216%" height="15" fill="rgb(254,186,29)" fg:x="1577" fg:w="15"/><text x="65.6043%" y="959.50"></text></g><g><title>papergrid::string_width_tab (9 samples, 0.37%)</title><rect x="65.6030%" y="933" width="0.3730%" height="15" fill="rgb(238,6,4)" fg:x="1583" fg:w="9"/><text x="65.8530%" y="943.50"></text></g><g><title>papergrid::string_width (9 samples, 0.37%)</title><rect x="65.6030%" y="917" width="0.3730%" height="15" fill="rgb(221,151,16)" fg:x="1583" fg:w="9"/><text x="65.8530%" y="927.50"></text></g><g><title>strip_ansi_escapes::strip (9 samples, 0.37%)</title><rect x="65.6030%" y="901" width="0.3730%" height="15" fill="rgb(251,143,52)" fg:x="1583" fg:w="9"/><text x="65.8530%" y="911.50"></text></g><g><title>strip_ansi_escapes::Writer&lt;W&gt;::new (1 samples, 0.04%)</title><rect x="65.9345%" y="885" width="0.0414%" height="15" fill="rgb(206,90,15)" fg:x="1591" fg:w="1"/><text x="66.1845%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="65.9345%" y="869" width="0.0414%" height="15" fill="rgb(218,35,8)" fg:x="1591" fg:w="1"/><text x="66.1845%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="65.9760%" y="821" width="0.0414%" height="15" fill="rgb(239,215,6)" fg:x="1592" fg:w="1"/><text x="66.2260%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="65.9760%" y="805" width="0.0414%" height="15" fill="rgb(245,116,39)" fg:x="1592" fg:w="1"/><text x="66.2260%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="65.9760%" y="789" width="0.0414%" height="15" fill="rgb(242,65,28)" fg:x="1592" fg:w="1"/><text x="66.2260%" y="799.50"></text></g><g><title>papergrid::Grid::get_cell_content_styled (2 samples, 0.08%)</title><rect x="65.9760%" y="933" width="0.0829%" height="15" fill="rgb(252,132,53)" fg:x="1592" fg:w="2"/><text x="66.2260%" y="943.50"></text></g><g><title>papergrid::replace_tab (2 samples, 0.08%)</title><rect x="65.9760%" y="917" width="0.0829%" height="15" fill="rgb(224,159,50)" fg:x="1592" fg:w="2"/><text x="66.2260%" y="927.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (2 samples, 0.08%)</title><rect x="65.9760%" y="901" width="0.0829%" height="15" fill="rgb(224,93,4)" fg:x="1592" fg:w="2"/><text x="66.2260%" y="911.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.08%)</title><rect x="65.9760%" y="885" width="0.0829%" height="15" fill="rgb(208,81,34)" fg:x="1592" fg:w="2"/><text x="66.2260%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.08%)</title><rect x="65.9760%" y="869" width="0.0829%" height="15" fill="rgb(233,92,54)" fg:x="1592" fg:w="2"/><text x="66.2260%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.08%)</title><rect x="65.9760%" y="853" width="0.0829%" height="15" fill="rgb(237,21,14)" fg:x="1592" fg:w="2"/><text x="66.2260%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.08%)</title><rect x="65.9760%" y="837" width="0.0829%" height="15" fill="rgb(249,128,51)" fg:x="1592" fg:w="2"/><text x="66.2260%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="66.0174%" y="821" width="0.0414%" height="15" fill="rgb(223,129,24)" fg:x="1593" fg:w="1"/><text x="66.2674%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="66.0174%" y="805" width="0.0414%" height="15" fill="rgb(231,168,25)" fg:x="1593" fg:w="1"/><text x="66.2674%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="66.0174%" y="789" width="0.0414%" height="15" fill="rgb(224,39,20)" fg:x="1593" fg:w="1"/><text x="66.2674%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="66.0174%" y="773" width="0.0414%" height="15" fill="rgb(225,152,53)" fg:x="1593" fg:w="1"/><text x="66.2674%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="66.0174%" y="757" width="0.0414%" height="15" fill="rgb(252,17,24)" fg:x="1593" fg:w="1"/><text x="66.2674%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="66.0174%" y="741" width="0.0414%" height="15" fill="rgb(250,114,30)" fg:x="1593" fg:w="1"/><text x="66.2674%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="66.0174%" y="725" width="0.0414%" height="15" fill="rgb(229,5,4)" fg:x="1593" fg:w="1"/><text x="66.2674%" y="735.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="66.0174%" y="709" width="0.0414%" height="15" fill="rgb(225,176,49)" fg:x="1593" fg:w="1"/><text x="66.2674%" y="719.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="66.0174%" y="693" width="0.0414%" height="15" fill="rgb(224,221,49)" fg:x="1593" fg:w="1"/><text x="66.2674%" y="703.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="66.1003%" y="805" width="0.0414%" height="15" fill="rgb(253,169,27)" fg:x="1595" fg:w="1"/><text x="66.3503%" y="815.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.04%)</title><rect x="66.1003%" y="789" width="0.0414%" height="15" fill="rgb(211,206,16)" fg:x="1595" fg:w="1"/><text x="66.3503%" y="799.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::get_end (1 samples, 0.04%)</title><rect x="66.1003%" y="773" width="0.0414%" height="15" fill="rgb(244,87,35)" fg:x="1595" fg:w="1"/><text x="66.3503%" y="783.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="66.1003%" y="837" width="0.0829%" height="15" fill="rgb(246,28,10)" fg:x="1595" fg:w="2"/><text x="66.3503%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="66.1003%" y="821" width="0.0829%" height="15" fill="rgb(229,12,44)" fg:x="1595" fg:w="2"/><text x="66.3503%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="66.1417%" y="805" width="0.0414%" height="15" fill="rgb(210,145,37)" fg:x="1596" fg:w="1"/><text x="66.3917%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.04%)</title><rect x="66.1417%" y="789" width="0.0414%" height="15" fill="rgb(227,112,52)" fg:x="1596" fg:w="1"/><text x="66.3917%" y="799.50"></text></g><g><title>&lt;core::str::LinesAnyMap as core::ops::function::FnMut&lt;(&amp;str,)&gt;&gt;::call_mut (1 samples, 0.04%)</title><rect x="66.1417%" y="773" width="0.0414%" height="15" fill="rgb(238,155,34)" fg:x="1596" fg:w="1"/><text x="66.3917%" y="783.50"></text></g><g><title>&lt;core::str::LinesAnyMap as core::ops::function::Fn&lt;(&amp;str,)&gt;&gt;::call (1 samples, 0.04%)</title><rect x="66.1417%" y="757" width="0.0414%" height="15" fill="rgb(239,226,36)" fg:x="1596" fg:w="1"/><text x="66.3917%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.17%)</title><rect x="66.1003%" y="869" width="0.1658%" height="15" fill="rgb(230,16,23)" fg:x="1595" fg:w="4"/><text x="66.3503%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.17%)</title><rect x="66.1003%" y="853" width="0.1658%" height="15" fill="rgb(236,171,36)" fg:x="1595" fg:w="4"/><text x="66.3503%" y="863.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.08%)</title><rect x="66.1832%" y="837" width="0.0829%" height="15" fill="rgb(221,22,14)" fg:x="1597" fg:w="2"/><text x="66.4332%" y="847.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.08%)</title><rect x="66.1832%" y="821" width="0.0829%" height="15" fill="rgb(242,43,11)" fg:x="1597" fg:w="2"/><text x="66.4332%" y="831.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width (2 samples, 0.08%)</title><rect x="66.1832%" y="805" width="0.0829%" height="15" fill="rgb(232,69,23)" fg:x="1597" fg:w="2"/><text x="66.4332%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.08%)</title><rect x="66.1832%" y="789" width="0.0829%" height="15" fill="rgb(216,180,54)" fg:x="1597" fg:w="2"/><text x="66.4332%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.08%)</title><rect x="66.1832%" y="773" width="0.0829%" height="15" fill="rgb(216,5,24)" fg:x="1597" fg:w="2"/><text x="66.4332%" y="783.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="66.1832%" y="757" width="0.0829%" height="15" fill="rgb(225,89,9)" fg:x="1597" fg:w="2"/><text x="66.4332%" y="767.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.08%)</title><rect x="66.1832%" y="741" width="0.0829%" height="15" fill="rgb(243,75,33)" fg:x="1597" fg:w="2"/><text x="66.4332%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="66.2246%" y="725" width="0.0414%" height="15" fill="rgb(247,141,45)" fg:x="1598" fg:w="1"/><text x="66.4746%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (5 samples, 0.21%)</title><rect x="66.1003%" y="917" width="0.2072%" height="15" fill="rgb(232,177,36)" fg:x="1595" fg:w="5"/><text x="66.3503%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (5 samples, 0.21%)</title><rect x="66.1003%" y="901" width="0.2072%" height="15" fill="rgb(219,125,36)" fg:x="1595" fg:w="5"/><text x="66.3503%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (5 samples, 0.21%)</title><rect x="66.1003%" y="885" width="0.2072%" height="15" fill="rgb(227,94,9)" fg:x="1595" fg:w="5"/><text x="66.3503%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="66.2661%" y="869" width="0.0414%" height="15" fill="rgb(240,34,52)" fg:x="1599" fg:w="1"/><text x="66.5161%" y="879.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="66.2661%" y="853" width="0.0414%" height="15" fill="rgb(216,45,12)" fg:x="1599" fg:w="1"/><text x="66.5161%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="66.2661%" y="837" width="0.0414%" height="15" fill="rgb(246,21,19)" fg:x="1599" fg:w="1"/><text x="66.5161%" y="847.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="66.2661%" y="821" width="0.0414%" height="15" fill="rgb(213,98,42)" fg:x="1599" fg:w="1"/><text x="66.5161%" y="831.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.04%)</title><rect x="66.2661%" y="805" width="0.0414%" height="15" fill="rgb(250,136,47)" fg:x="1599" fg:w="1"/><text x="66.5161%" y="815.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.04%)</title><rect x="66.2661%" y="789" width="0.0414%" height="15" fill="rgb(251,124,27)" fg:x="1599" fg:w="1"/><text x="66.5161%" y="799.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (1 samples, 0.04%)</title><rect x="66.2661%" y="773" width="0.0414%" height="15" fill="rgb(229,180,14)" fg:x="1599" fg:w="1"/><text x="66.5161%" y="783.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="66.2661%" y="757" width="0.0414%" height="15" fill="rgb(245,216,25)" fg:x="1599" fg:w="1"/><text x="66.5161%" y="767.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="66.2661%" y="741" width="0.0414%" height="15" fill="rgb(251,43,5)" fg:x="1599" fg:w="1"/><text x="66.5161%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="66.2661%" y="725" width="0.0414%" height="15" fill="rgb(250,128,24)" fg:x="1599" fg:w="1"/><text x="66.5161%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="66.2661%" y="709" width="0.0414%" height="15" fill="rgb(217,117,27)" fg:x="1599" fg:w="1"/><text x="66.5161%" y="719.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="66.2661%" y="693" width="0.0414%" height="15" fill="rgb(245,147,4)" fg:x="1599" fg:w="1"/><text x="66.5161%" y="703.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="66.4733%" y="869" width="0.0829%" height="15" fill="rgb(242,201,35)" fg:x="1604" fg:w="2"/><text x="66.7233%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="66.5147%" y="853" width="0.0414%" height="15" fill="rgb(218,181,1)" fg:x="1605" fg:w="1"/><text x="66.7647%" y="863.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::execute (1 samples, 0.04%)</title><rect x="66.8462%" y="821" width="0.0414%" height="15" fill="rgb(222,6,29)" fg:x="1613" fg:w="1"/><text x="67.0962%" y="831.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_fmt (1 samples, 0.04%)</title><rect x="66.8462%" y="805" width="0.0414%" height="15" fill="rgb(208,186,3)" fg:x="1613" fg:w="1"/><text x="67.0962%" y="815.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.04%)</title><rect x="66.8462%" y="789" width="0.0414%" height="15" fill="rgb(216,36,26)" fg:x="1613" fg:w="1"/><text x="67.0962%" y="799.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="66.8462%" y="773" width="0.0414%" height="15" fill="rgb(248,201,23)" fg:x="1613" fg:w="1"/><text x="67.0962%" y="783.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="66.8462%" y="757" width="0.0414%" height="15" fill="rgb(251,170,31)" fg:x="1613" fg:w="1"/><text x="67.0962%" y="767.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="66.8462%" y="741" width="0.0414%" height="15" fill="rgb(207,110,25)" fg:x="1613" fg:w="1"/><text x="67.0962%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (1 samples, 0.04%)</title><rect x="66.8462%" y="725" width="0.0414%" height="15" fill="rgb(250,54,15)" fg:x="1613" fg:w="1"/><text x="67.0962%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.04%)</title><rect x="66.8462%" y="709" width="0.0414%" height="15" fill="rgb(227,68,33)" fg:x="1613" fg:w="1"/><text x="67.0962%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="66.8462%" y="693" width="0.0414%" height="15" fill="rgb(238,34,41)" fg:x="1613" fg:w="1"/><text x="67.0962%" y="703.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="66.8462%" y="677" width="0.0414%" height="15" fill="rgb(220,11,15)" fg:x="1613" fg:w="1"/><text x="67.0962%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="66.8877%" y="789" width="0.0414%" height="15" fill="rgb(246,111,35)" fg:x="1614" fg:w="1"/><text x="67.1377%" y="799.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::print (2 samples, 0.08%)</title><rect x="66.8877%" y="821" width="0.0829%" height="15" fill="rgb(209,88,53)" fg:x="1614" fg:w="2"/><text x="67.1377%" y="831.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_fmt (2 samples, 0.08%)</title><rect x="66.8877%" y="805" width="0.0829%" height="15" fill="rgb(231,185,47)" fg:x="1614" fg:w="2"/><text x="67.1377%" y="815.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.04%)</title><rect x="66.9291%" y="789" width="0.0414%" height="15" fill="rgb(233,154,1)" fg:x="1615" fg:w="1"/><text x="67.1791%" y="799.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="66.9291%" y="773" width="0.0414%" height="15" fill="rgb(225,15,46)" fg:x="1615" fg:w="1"/><text x="67.1791%" y="783.50"></text></g><g><title>&lt;char as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="66.9291%" y="757" width="0.0414%" height="15" fill="rgb(211,135,41)" fg:x="1615" fg:w="1"/><text x="67.1791%" y="767.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_char (1 samples, 0.04%)</title><rect x="66.9291%" y="741" width="0.0414%" height="15" fill="rgb(208,54,0)" fg:x="1615" fg:w="1"/><text x="67.1791%" y="751.50"></text></g><g><title>vte::Parser::perform_state_change (8 samples, 0.33%)</title><rect x="66.6805%" y="853" width="0.3315%" height="15" fill="rgb(244,136,14)" fg:x="1609" fg:w="8"/><text x="66.9305%" y="863.50"></text></g><g><title>vte::Parser::perform_action (7 samples, 0.29%)</title><rect x="66.7219%" y="837" width="0.2901%" height="15" fill="rgb(241,56,14)" fg:x="1610" fg:w="7"/><text x="66.9719%" y="847.50"></text></g><g><title>vte::Parser::intermediates (1 samples, 0.04%)</title><rect x="66.9706%" y="821" width="0.0414%" height="15" fill="rgb(205,80,24)" fg:x="1616" fg:w="1"/><text x="67.2206%" y="831.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (1 samples, 0.04%)</title><rect x="66.9706%" y="805" width="0.0414%" height="15" fill="rgb(220,57,4)" fg:x="1616" fg:w="1"/><text x="67.2206%" y="815.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="66.9706%" y="789" width="0.0414%" height="15" fill="rgb(226,193,50)" fg:x="1616" fg:w="1"/><text x="67.2206%" y="799.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="66.9706%" y="773" width="0.0414%" height="15" fill="rgb(231,168,22)" fg:x="1616" fg:w="1"/><text x="67.2206%" y="783.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="66.9706%" y="757" width="0.0414%" height="15" fill="rgb(254,215,14)" fg:x="1616" fg:w="1"/><text x="67.2206%" y="767.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="66.9706%" y="741" width="0.0414%" height="15" fill="rgb(211,115,16)" fg:x="1616" fg:w="1"/><text x="67.2206%" y="751.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="66.9706%" y="725" width="0.0414%" height="15" fill="rgb(236,210,16)" fg:x="1616" fg:w="1"/><text x="67.2206%" y="735.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="66.9706%" y="709" width="0.0414%" height="15" fill="rgb(221,94,12)" fg:x="1616" fg:w="1"/><text x="67.2206%" y="719.50"></text></g><g><title>papergrid::string_width_multiline (24 samples, 0.99%)</title><rect x="66.0588%" y="933" width="0.9946%" height="15" fill="rgb(235,218,49)" fg:x="1594" fg:w="24"/><text x="66.3088%" y="943.50"></text></g><g><title>strip_ansi_escapes::strip (18 samples, 0.75%)</title><rect x="66.3075%" y="917" width="0.7460%" height="15" fill="rgb(217,114,14)" fg:x="1600" fg:w="18"/><text x="66.5575%" y="927.50"></text></g><g><title>std::io::Write::write_all (18 samples, 0.75%)</title><rect x="66.3075%" y="901" width="0.7460%" height="15" fill="rgb(216,145,22)" fg:x="1600" fg:w="18"/><text x="66.5575%" y="911.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (18 samples, 0.75%)</title><rect x="66.3075%" y="885" width="0.7460%" height="15" fill="rgb(217,112,39)" fg:x="1600" fg:w="18"/><text x="66.5575%" y="895.50"></text></g><g><title>vte::Parser::advance (12 samples, 0.50%)</title><rect x="66.5562%" y="869" width="0.4973%" height="15" fill="rgb(225,85,32)" fg:x="1606" fg:w="12"/><text x="66.8062%" y="879.50"></text></g><g><title>vte::definitions::unpack (1 samples, 0.04%)</title><rect x="67.0120%" y="853" width="0.0414%" height="15" fill="rgb(245,209,47)" fg:x="1617" fg:w="1"/><text x="67.2620%" y="863.50"></text></g><g><title>&lt;[T] as core::convert::AsRef&lt;[T]&gt;&gt;::as_ref (1 samples, 0.04%)</title><rect x="67.0535%" y="853" width="0.0414%" height="15" fill="rgb(218,220,15)" fg:x="1618" fg:w="1"/><text x="67.3035%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (2 samples, 0.08%)</title><rect x="67.0535%" y="901" width="0.0829%" height="15" fill="rgb(222,202,31)" fg:x="1618" fg:w="2"/><text x="67.3035%" y="911.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (2 samples, 0.08%)</title><rect x="67.0535%" y="885" width="0.0829%" height="15" fill="rgb(243,203,4)" fg:x="1618" fg:w="2"/><text x="67.3035%" y="895.50"></text></g><g><title>alloc::str::join_generic_copy (2 samples, 0.08%)</title><rect x="67.0535%" y="869" width="0.0829%" height="15" fill="rgb(237,92,17)" fg:x="1618" fg:w="2"/><text x="67.3035%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::len (1 samples, 0.04%)</title><rect x="67.0949%" y="853" width="0.0414%" height="15" fill="rgb(231,119,7)" fg:x="1619" fg:w="1"/><text x="67.3449%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (2 samples, 0.08%)</title><rect x="67.1363%" y="901" width="0.0829%" height="15" fill="rgb(237,82,41)" fg:x="1620" fg:w="2"/><text x="67.3863%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="67.1363%" y="885" width="0.0829%" height="15" fill="rgb(226,81,48)" fg:x="1620" fg:w="2"/><text x="67.3863%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (2 samples, 0.08%)</title><rect x="67.1363%" y="869" width="0.0829%" height="15" fill="rgb(234,70,51)" fg:x="1620" fg:w="2"/><text x="67.3863%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.08%)</title><rect x="67.1363%" y="853" width="0.0829%" height="15" fill="rgb(251,86,4)" fg:x="1620" fg:w="2"/><text x="67.3863%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.08%)</title><rect x="67.1363%" y="837" width="0.0829%" height="15" fill="rgb(244,144,28)" fg:x="1620" fg:w="2"/><text x="67.3863%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.08%)</title><rect x="67.1363%" y="821" width="0.0829%" height="15" fill="rgb(232,161,39)" fg:x="1620" fg:w="2"/><text x="67.3863%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="67.1363%" y="805" width="0.0829%" height="15" fill="rgb(247,34,51)" fg:x="1620" fg:w="2"/><text x="67.3863%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.08%)</title><rect x="67.1363%" y="789" width="0.0829%" height="15" fill="rgb(225,132,2)" fg:x="1620" fg:w="2"/><text x="67.3863%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="67.1778%" y="773" width="0.0414%" height="15" fill="rgb(209,159,44)" fg:x="1621" fg:w="1"/><text x="67.4278%" y="783.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="67.1778%" y="757" width="0.0414%" height="15" fill="rgb(251,214,1)" fg:x="1621" fg:w="1"/><text x="67.4278%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="67.1778%" y="741" width="0.0414%" height="15" fill="rgb(247,84,47)" fg:x="1621" fg:w="1"/><text x="67.4278%" y="751.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="67.2607%" y="821" width="0.0414%" height="15" fill="rgb(240,111,43)" fg:x="1623" fg:w="1"/><text x="67.5107%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="67.5093%" y="709" width="0.0414%" height="15" fill="rgb(215,214,35)" fg:x="1629" fg:w="1"/><text x="67.7593%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (5 samples, 0.21%)</title><rect x="67.4264%" y="789" width="0.2072%" height="15" fill="rgb(248,207,23)" fg:x="1627" fg:w="5"/><text x="67.6764%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.21%)</title><rect x="67.4264%" y="773" width="0.2072%" height="15" fill="rgb(214,186,4)" fg:x="1627" fg:w="5"/><text x="67.6764%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.21%)</title><rect x="67.4264%" y="757" width="0.2072%" height="15" fill="rgb(220,133,22)" fg:x="1627" fg:w="5"/><text x="67.6764%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (5 samples, 0.21%)</title><rect x="67.4264%" y="741" width="0.2072%" height="15" fill="rgb(239,134,19)" fg:x="1627" fg:w="5"/><text x="67.6764%" y="751.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="67.5093%" y="725" width="0.1243%" height="15" fill="rgb(250,140,9)" fg:x="1629" fg:w="3"/><text x="67.7593%" y="735.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.08%)</title><rect x="67.5508%" y="709" width="0.0829%" height="15" fill="rgb(225,59,14)" fg:x="1630" fg:w="2"/><text x="67.8008%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="67.5508%" y="693" width="0.0829%" height="15" fill="rgb(214,152,51)" fg:x="1630" fg:w="2"/><text x="67.8008%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="67.5922%" y="677" width="0.0414%" height="15" fill="rgb(251,227,43)" fg:x="1631" fg:w="1"/><text x="67.8422%" y="687.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="67.5922%" y="661" width="0.0414%" height="15" fill="rgb(241,96,17)" fg:x="1631" fg:w="1"/><text x="67.8422%" y="671.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (8 samples, 0.33%)</title><rect x="67.3850%" y="805" width="0.3315%" height="15" fill="rgb(234,198,43)" fg:x="1626" fg:w="8"/><text x="67.6350%" y="815.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (2 samples, 0.08%)</title><rect x="67.6337%" y="789" width="0.0829%" height="15" fill="rgb(220,108,29)" fg:x="1632" fg:w="2"/><text x="67.8837%" y="799.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="67.6751%" y="773" width="0.0414%" height="15" fill="rgb(226,163,33)" fg:x="1633" fg:w="1"/><text x="67.9251%" y="783.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="67.6751%" y="757" width="0.0414%" height="15" fill="rgb(205,194,45)" fg:x="1633" fg:w="1"/><text x="67.9251%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.04%)</title><rect x="67.7165%" y="773" width="0.0414%" height="15" fill="rgb(206,143,44)" fg:x="1634" fg:w="1"/><text x="67.9665%" y="783.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.04%)</title><rect x="67.7165%" y="757" width="0.0414%" height="15" fill="rgb(236,136,36)" fg:x="1634" fg:w="1"/><text x="67.9665%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="67.7165%" y="741" width="0.0414%" height="15" fill="rgb(249,172,42)" fg:x="1634" fg:w="1"/><text x="67.9665%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::len (1 samples, 0.04%)</title><rect x="67.7165%" y="725" width="0.0414%" height="15" fill="rgb(216,139,23)" fg:x="1634" fg:w="1"/><text x="67.9665%" y="735.50"></text></g><g><title>ansi_parser::parsers::parse_escape (13 samples, 0.54%)</title><rect x="67.3021%" y="821" width="0.5387%" height="15" fill="rgb(207,166,20)" fg:x="1624" fg:w="13"/><text x="67.5521%" y="831.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTake&gt;::take_split (3 samples, 0.12%)</title><rect x="67.7165%" y="805" width="0.1243%" height="15" fill="rgb(210,209,22)" fg:x="1634" fg:w="3"/><text x="67.9665%" y="815.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (3 samples, 0.12%)</title><rect x="67.7165%" y="789" width="0.1243%" height="15" fill="rgb(232,118,20)" fg:x="1634" fg:w="3"/><text x="67.9665%" y="799.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (2 samples, 0.08%)</title><rect x="67.7580%" y="773" width="0.0829%" height="15" fill="rgb(238,113,42)" fg:x="1635" fg:w="2"/><text x="68.0080%" y="783.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (1 samples, 0.04%)</title><rect x="67.7994%" y="757" width="0.0414%" height="15" fill="rgb(231,42,5)" fg:x="1636" fg:w="1"/><text x="68.0494%" y="767.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.04%)</title><rect x="67.7994%" y="741" width="0.0414%" height="15" fill="rgb(243,166,24)" fg:x="1636" fg:w="1"/><text x="68.0494%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="67.7994%" y="725" width="0.0414%" height="15" fill="rgb(237,226,12)" fg:x="1636" fg:w="1"/><text x="68.0494%" y="735.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="67.7994%" y="709" width="0.0414%" height="15" fill="rgb(229,133,24)" fg:x="1636" fg:w="1"/><text x="68.0494%" y="719.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="67.7994%" y="693" width="0.0414%" height="15" fill="rgb(238,33,43)" fg:x="1636" fg:w="1"/><text x="68.0494%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="67.8823%" y="789" width="0.0414%" height="15" fill="rgb(227,59,38)" fg:x="1638" fg:w="1"/><text x="68.1323%" y="799.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="67.8823%" y="773" width="0.0414%" height="15" fill="rgb(230,97,0)" fg:x="1638" fg:w="1"/><text x="68.1323%" y="783.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="67.8823%" y="757" width="0.0414%" height="15" fill="rgb(250,173,50)" fg:x="1638" fg:w="1"/><text x="68.1323%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="67.8823%" y="741" width="0.0414%" height="15" fill="rgb(240,15,50)" fg:x="1638" fg:w="1"/><text x="68.1323%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.12%)</title><rect x="67.8409%" y="821" width="0.1243%" height="15" fill="rgb(221,93,22)" fg:x="1637" fg:w="3"/><text x="68.0909%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.08%)</title><rect x="67.8823%" y="805" width="0.0829%" height="15" fill="rgb(245,180,53)" fg:x="1638" fg:w="2"/><text x="68.1323%" y="815.50"></text></g><g><title>core::str::&lt;impl str&gt;::as_bytes (1 samples, 0.04%)</title><rect x="67.9237%" y="789" width="0.0414%" height="15" fill="rgb(231,88,51)" fg:x="1639" fg:w="1"/><text x="68.1737%" y="799.50"></text></g><g><title>core::char::methods::encode_utf8_raw (1 samples, 0.04%)</title><rect x="67.9652%" y="773" width="0.0414%" height="15" fill="rgb(240,58,21)" fg:x="1640" fg:w="1"/><text x="68.2152%" y="783.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.04%)</title><rect x="67.9652%" y="757" width="0.0414%" height="15" fill="rgb(237,21,10)" fg:x="1640" fg:w="1"/><text x="68.2152%" y="767.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="67.9652%" y="741" width="0.0414%" height="15" fill="rgb(218,43,11)" fg:x="1640" fg:w="1"/><text x="68.2152%" y="751.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="67.9652%" y="725" width="0.0414%" height="15" fill="rgb(218,221,29)" fg:x="1640" fg:w="1"/><text x="68.2152%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.04%)</title><rect x="67.9652%" y="709" width="0.0414%" height="15" fill="rgb(214,118,42)" fg:x="1640" fg:w="1"/><text x="68.2152%" y="719.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.04%)</title><rect x="67.9652%" y="693" width="0.0414%" height="15" fill="rgb(251,200,26)" fg:x="1640" fg:w="1"/><text x="68.2152%" y="703.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="67.9652%" y="677" width="0.0414%" height="15" fill="rgb(237,101,39)" fg:x="1640" fg:w="1"/><text x="68.2152%" y="687.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::into_searcher (2 samples, 0.08%)</title><rect x="67.9652%" y="805" width="0.0829%" height="15" fill="rgb(251,117,11)" fg:x="1640" fg:w="2"/><text x="68.2152%" y="815.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (2 samples, 0.08%)</title><rect x="67.9652%" y="789" width="0.0829%" height="15" fill="rgb(216,223,23)" fg:x="1640" fg:w="2"/><text x="68.2152%" y="799.50"></text></g><g><title>core::str::converts::from_utf8_unchecked_mut (1 samples, 0.04%)</title><rect x="68.0066%" y="773" width="0.0414%" height="15" fill="rgb(251,54,12)" fg:x="1641" fg:w="1"/><text x="68.2566%" y="783.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (1 samples, 0.04%)</title><rect x="68.1724%" y="789" width="0.0414%" height="15" fill="rgb(254,176,54)" fg:x="1645" fg:w="1"/><text x="68.4224%" y="799.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="68.1724%" y="773" width="0.0414%" height="15" fill="rgb(210,32,8)" fg:x="1645" fg:w="1"/><text x="68.4224%" y="783.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="68.1724%" y="757" width="0.0414%" height="15" fill="rgb(235,52,38)" fg:x="1645" fg:w="1"/><text x="68.4224%" y="767.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="68.1724%" y="741" width="0.0414%" height="15" fill="rgb(231,4,44)" fg:x="1645" fg:w="1"/><text x="68.4224%" y="751.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="68.1724%" y="725" width="0.0414%" height="15" fill="rgb(249,2,32)" fg:x="1645" fg:w="1"/><text x="68.4224%" y="735.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="68.1724%" y="709" width="0.0414%" height="15" fill="rgb(224,65,26)" fg:x="1645" fg:w="1"/><text x="68.4224%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.08%)</title><rect x="68.2138%" y="789" width="0.0829%" height="15" fill="rgb(250,73,40)" fg:x="1646" fg:w="2"/><text x="68.4638%" y="799.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.08%)</title><rect x="68.2138%" y="773" width="0.0829%" height="15" fill="rgb(253,177,16)" fg:x="1646" fg:w="2"/><text x="68.4638%" y="783.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.08%)</title><rect x="68.2138%" y="757" width="0.0829%" height="15" fill="rgb(217,32,34)" fg:x="1646" fg:w="2"/><text x="68.4638%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="68.2553%" y="741" width="0.0414%" height="15" fill="rgb(212,7,10)" fg:x="1647" fg:w="1"/><text x="68.5053%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="68.2967%" y="789" width="0.0414%" height="15" fill="rgb(245,89,8)" fg:x="1648" fg:w="1"/><text x="68.5467%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="68.2967%" y="773" width="0.0414%" height="15" fill="rgb(237,16,53)" fg:x="1648" fg:w="1"/><text x="68.5467%" y="783.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="68.2967%" y="757" width="0.0414%" height="15" fill="rgb(250,204,30)" fg:x="1648" fg:w="1"/><text x="68.5467%" y="767.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="68.2967%" y="741" width="0.0414%" height="15" fill="rgb(208,77,27)" fg:x="1648" fg:w="1"/><text x="68.5467%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="68.3382%" y="789" width="0.0414%" height="15" fill="rgb(250,204,28)" fg:x="1649" fg:w="1"/><text x="68.5882%" y="799.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 1.16%)</title><rect x="67.2607%" y="837" width="1.1604%" height="15" fill="rgb(244,63,21)" fg:x="1623" fg:w="28"/><text x="67.5107%" y="847.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (11 samples, 0.46%)</title><rect x="67.9652%" y="821" width="0.4559%" height="15" fill="rgb(236,85,44)" fg:x="1640" fg:w="11"/><text x="68.2152%" y="831.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (9 samples, 0.37%)</title><rect x="68.0481%" y="805" width="0.3730%" height="15" fill="rgb(215,98,4)" fg:x="1642" fg:w="9"/><text x="68.2981%" y="815.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.04%)</title><rect x="68.3796%" y="789" width="0.0414%" height="15" fill="rgb(235,38,11)" fg:x="1650" fg:w="1"/><text x="68.6296%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.04%)</title><rect x="68.3796%" y="773" width="0.0414%" height="15" fill="rgb(254,186,25)" fg:x="1650" fg:w="1"/><text x="68.6296%" y="783.50"></text></g><g><title>&lt;ansi_str::AnsiState as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="68.4211%" y="837" width="0.0414%" height="15" fill="rgb(225,55,31)" fg:x="1651" fg:w="1"/><text x="68.6711%" y="847.50"></text></g><g><title>&lt;bool as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="68.4211%" y="821" width="0.0414%" height="15" fill="rgb(211,15,21)" fg:x="1651" fg:w="1"/><text x="68.6711%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.04%)</title><rect x="68.4625%" y="709" width="0.0414%" height="15" fill="rgb(215,187,41)" fg:x="1652" fg:w="1"/><text x="68.7125%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="68.5039%" y="709" width="0.0414%" height="15" fill="rgb(248,69,32)" fg:x="1653" fg:w="1"/><text x="68.7539%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="68.5039%" y="693" width="0.0414%" height="15" fill="rgb(252,102,52)" fg:x="1653" fg:w="1"/><text x="68.7539%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="68.5039%" y="677" width="0.0414%" height="15" fill="rgb(253,140,32)" fg:x="1653" fg:w="1"/><text x="68.7539%" y="687.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="68.5039%" y="661" width="0.0414%" height="15" fill="rgb(216,56,42)" fg:x="1653" fg:w="1"/><text x="68.7539%" y="671.50"></text></g><g><title>realloc (1 samples, 0.04%)</title><rect x="68.5039%" y="645" width="0.0414%" height="15" fill="rgb(216,184,14)" fg:x="1653" fg:w="1"/><text x="68.7539%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="68.5454%" y="693" width="0.0414%" height="15" fill="rgb(237,187,27)" fg:x="1654" fg:w="1"/><text x="68.7954%" y="703.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.17%)</title><rect x="68.4625%" y="837" width="0.1658%" height="15" fill="rgb(219,65,3)" fg:x="1652" fg:w="4"/><text x="68.7125%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.17%)</title><rect x="68.4625%" y="821" width="0.1658%" height="15" fill="rgb(245,83,25)" fg:x="1652" fg:w="4"/><text x="68.7125%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.17%)</title><rect x="68.4625%" y="805" width="0.1658%" height="15" fill="rgb(214,205,45)" fg:x="1652" fg:w="4"/><text x="68.7125%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.17%)</title><rect x="68.4625%" y="789" width="0.1658%" height="15" fill="rgb(241,20,18)" fg:x="1652" fg:w="4"/><text x="68.7125%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.17%)</title><rect x="68.4625%" y="773" width="0.1658%" height="15" fill="rgb(232,163,23)" fg:x="1652" fg:w="4"/><text x="68.7125%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.17%)</title><rect x="68.4625%" y="757" width="0.1658%" height="15" fill="rgb(214,5,46)" fg:x="1652" fg:w="4"/><text x="68.7125%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.17%)</title><rect x="68.4625%" y="741" width="0.1658%" height="15" fill="rgb(229,78,17)" fg:x="1652" fg:w="4"/><text x="68.7125%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.17%)</title><rect x="68.4625%" y="725" width="0.1658%" height="15" fill="rgb(248,89,10)" fg:x="1652" fg:w="4"/><text x="68.7125%" y="735.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.08%)</title><rect x="68.5454%" y="709" width="0.0829%" height="15" fill="rgb(248,54,15)" fg:x="1654" fg:w="2"/><text x="68.7954%" y="719.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="68.5868%" y="693" width="0.0414%" height="15" fill="rgb(223,116,6)" fg:x="1655" fg:w="1"/><text x="68.8368%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.17%)</title><rect x="68.6697%" y="757" width="0.1658%" height="15" fill="rgb(205,125,38)" fg:x="1657" fg:w="4"/><text x="68.9197%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.17%)</title><rect x="68.6697%" y="741" width="0.1658%" height="15" fill="rgb(251,78,38)" fg:x="1657" fg:w="4"/><text x="68.9197%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.12%)</title><rect x="68.7111%" y="725" width="0.1243%" height="15" fill="rgb(253,78,28)" fg:x="1658" fg:w="3"/><text x="68.9611%" y="735.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.12%)</title><rect x="68.7111%" y="709" width="0.1243%" height="15" fill="rgb(209,120,3)" fg:x="1658" fg:w="3"/><text x="68.9611%" y="719.50"></text></g><g><title>malloc (3 samples, 0.12%)</title><rect x="68.7111%" y="693" width="0.1243%" height="15" fill="rgb(238,229,9)" fg:x="1658" fg:w="3"/><text x="68.9611%" y="703.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="68.8355%" y="757" width="0.0414%" height="15" fill="rgb(253,159,18)" fg:x="1661" fg:w="1"/><text x="69.0855%" y="767.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="68.8355%" y="741" width="0.0414%" height="15" fill="rgb(244,42,34)" fg:x="1661" fg:w="1"/><text x="69.0855%" y="751.50"></text></g><g><title>core::cmp::max (1 samples, 0.04%)</title><rect x="68.8769%" y="757" width="0.0414%" height="15" fill="rgb(224,8,7)" fg:x="1662" fg:w="1"/><text x="69.1269%" y="767.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="68.8769%" y="741" width="0.0414%" height="15" fill="rgb(210,201,45)" fg:x="1662" fg:w="1"/><text x="69.1269%" y="751.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.04%)</title><rect x="68.8769%" y="725" width="0.0414%" height="15" fill="rgb(252,185,21)" fg:x="1662" fg:w="1"/><text x="69.1269%" y="735.50"></text></g><g><title>alloc::string::String::push (8 samples, 0.33%)</title><rect x="68.6283%" y="821" width="0.3315%" height="15" fill="rgb(223,131,1)" fg:x="1656" fg:w="8"/><text x="68.8783%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.33%)</title><rect x="68.6283%" y="805" width="0.3315%" height="15" fill="rgb(245,141,16)" fg:x="1656" fg:w="8"/><text x="68.8783%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (8 samples, 0.33%)</title><rect x="68.6283%" y="789" width="0.3315%" height="15" fill="rgb(229,55,45)" fg:x="1656" fg:w="8"/><text x="68.8783%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.33%)</title><rect x="68.6283%" y="773" width="0.3315%" height="15" fill="rgb(208,92,15)" fg:x="1656" fg:w="8"/><text x="68.8783%" y="783.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.04%)</title><rect x="68.9184%" y="757" width="0.0414%" height="15" fill="rgb(234,185,47)" fg:x="1663" fg:w="1"/><text x="69.1684%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="68.9598%" y="677" width="0.0414%" height="15" fill="rgb(253,104,50)" fg:x="1664" fg:w="1"/><text x="69.2098%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="68.9598%" y="661" width="0.0414%" height="15" fill="rgb(205,70,7)" fg:x="1664" fg:w="1"/><text x="69.2098%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="68.9598%" y="645" width="0.0414%" height="15" fill="rgb(240,178,43)" fg:x="1664" fg:w="1"/><text x="69.2098%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="68.9598%" y="629" width="0.0414%" height="15" fill="rgb(214,112,2)" fg:x="1664" fg:w="1"/><text x="69.2098%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.08%)</title><rect x="68.9598%" y="741" width="0.0829%" height="15" fill="rgb(206,46,17)" fg:x="1664" fg:w="2"/><text x="69.2098%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.08%)</title><rect x="68.9598%" y="725" width="0.0829%" height="15" fill="rgb(225,220,16)" fg:x="1664" fg:w="2"/><text x="69.2098%" y="735.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.08%)</title><rect x="68.9598%" y="709" width="0.0829%" height="15" fill="rgb(238,65,40)" fg:x="1664" fg:w="2"/><text x="69.2098%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.08%)</title><rect x="68.9598%" y="693" width="0.0829%" height="15" fill="rgb(230,151,21)" fg:x="1664" fg:w="2"/><text x="69.2098%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="69.0012%" y="677" width="0.0414%" height="15" fill="rgb(218,58,49)" fg:x="1665" fg:w="1"/><text x="69.2512%" y="687.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="69.0012%" y="661" width="0.0414%" height="15" fill="rgb(219,179,14)" fg:x="1665" fg:w="1"/><text x="69.2512%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (1 samples, 0.04%)</title><rect x="69.0012%" y="645" width="0.0414%" height="15" fill="rgb(223,72,1)" fg:x="1665" fg:w="1"/><text x="69.2512%" y="655.50"></text></g><g><title>ansi_str::begin_ansi_sequences (11 samples, 0.46%)</title><rect x="68.6283%" y="837" width="0.4559%" height="15" fill="rgb(238,126,10)" fg:x="1656" fg:w="11"/><text x="68.8783%" y="847.50"></text></g><g><title>ansi_str::emit_ansi_color (3 samples, 0.12%)</title><rect x="68.9598%" y="821" width="0.1243%" height="15" fill="rgb(224,206,38)" fg:x="1664" fg:w="3"/><text x="69.2098%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.12%)</title><rect x="68.9598%" y="805" width="0.1243%" height="15" fill="rgb(212,201,54)" fg:x="1664" fg:w="3"/><text x="69.2098%" y="815.50"></text></g><g><title>core::fmt::write (3 samples, 0.12%)</title><rect x="68.9598%" y="789" width="0.1243%" height="15" fill="rgb(218,154,48)" fg:x="1664" fg:w="3"/><text x="69.2098%" y="799.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u8&gt;::fmt (3 samples, 0.12%)</title><rect x="68.9598%" y="773" width="0.1243%" height="15" fill="rgb(232,93,24)" fg:x="1664" fg:w="3"/><text x="69.2098%" y="783.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (3 samples, 0.12%)</title><rect x="68.9598%" y="757" width="0.1243%" height="15" fill="rgb(245,30,21)" fg:x="1664" fg:w="3"/><text x="69.2098%" y="767.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.04%)</title><rect x="69.0427%" y="741" width="0.0414%" height="15" fill="rgb(242,148,29)" fg:x="1666" fg:w="1"/><text x="69.2927%" y="751.50"></text></g><g><title>ansi_str::complete_ansi_sequences (1 samples, 0.04%)</title><rect x="69.0841%" y="837" width="0.0414%" height="15" fill="rgb(244,153,54)" fg:x="1667" fg:w="1"/><text x="69.3341%" y="847.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.04%)</title><rect x="69.0841%" y="821" width="0.0414%" height="15" fill="rgb(252,87,22)" fg:x="1667" fg:w="1"/><text x="69.3341%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.04%)</title><rect x="69.0841%" y="805" width="0.0414%" height="15" fill="rgb(210,51,29)" fg:x="1667" fg:w="1"/><text x="69.3341%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="69.0841%" y="789" width="0.0414%" height="15" fill="rgb(242,136,47)" fg:x="1667" fg:w="1"/><text x="69.3341%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="69.0841%" y="773" width="0.0414%" height="15" fill="rgb(238,68,4)" fg:x="1667" fg:w="1"/><text x="69.3341%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="69.0841%" y="757" width="0.0414%" height="15" fill="rgb(242,161,30)" fg:x="1667" fg:w="1"/><text x="69.3341%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="69.0841%" y="741" width="0.0414%" height="15" fill="rgb(218,58,44)" fg:x="1667" fg:w="1"/><text x="69.3341%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.04%)</title><rect x="69.0841%" y="725" width="0.0414%" height="15" fill="rgb(252,125,32)" fg:x="1667" fg:w="1"/><text x="69.3341%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="69.0841%" y="709" width="0.0414%" height="15" fill="rgb(219,178,0)" fg:x="1667" fg:w="1"/><text x="69.3341%" y="719.50"></text></g><g><title>core::cmp::max (1 samples, 0.04%)</title><rect x="69.0841%" y="693" width="0.0414%" height="15" fill="rgb(213,152,7)" fg:x="1667" fg:w="1"/><text x="69.3341%" y="703.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="69.0841%" y="677" width="0.0414%" height="15" fill="rgb(249,109,34)" fg:x="1667" fg:w="1"/><text x="69.3341%" y="687.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.04%)</title><rect x="69.0841%" y="661" width="0.0414%" height="15" fill="rgb(232,96,21)" fg:x="1667" fg:w="1"/><text x="69.3341%" y="671.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="69.0841%" y="645" width="0.0414%" height="15" fill="rgb(228,27,39)" fg:x="1667" fg:w="1"/><text x="69.3341%" y="655.50"></text></g><g><title>&lt;alloc::string::String as ansi_str::AnsiStr&gt;::ansi_split_at (48 samples, 1.99%)</title><rect x="67.2192%" y="885" width="1.9892%" height="15" fill="rgb(211,182,52)" fg:x="1622" fg:w="48"/><text x="67.4692%" y="895.50">&lt;..</text></g><g><title>&lt;str as ansi_str::AnsiStr&gt;::ansi_split_at (48 samples, 1.99%)</title><rect x="67.2192%" y="869" width="1.9892%" height="15" fill="rgb(234,178,38)" fg:x="1622" fg:w="48"/><text x="67.4692%" y="879.50">&lt;..</text></g><g><title>ansi_str::split_at (48 samples, 1.99%)</title><rect x="67.2192%" y="853" width="1.9892%" height="15" fill="rgb(221,111,3)" fg:x="1622" fg:w="48"/><text x="67.4692%" y="863.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;heapless::vec::Vec&lt;u8,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;&gt;&gt; (2 samples, 0.08%)</title><rect x="69.1256%" y="837" width="0.0829%" height="15" fill="rgb(228,175,21)" fg:x="1668" fg:w="2"/><text x="69.3756%" y="847.50"></text></g><g><title>&lt;heapless::vec::Vec&lt;T,N&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="69.1256%" y="821" width="0.0829%" height="15" fill="rgb(228,174,43)" fg:x="1668" fg:w="2"/><text x="69.3756%" y="831.50"></text></g><g><title>&lt;heapless::vec::Vec&lt;T,N&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.08%)</title><rect x="69.1256%" y="805" width="0.0829%" height="15" fill="rgb(211,191,0)" fg:x="1668" fg:w="2"/><text x="69.3756%" y="815.50"></text></g><g><title>heapless::vec::&lt;impl heapless::i::Vec&lt;generic_array::GenericArray&lt;T,N&gt;&gt;&gt;::as_mut_slice (2 samples, 0.08%)</title><rect x="69.1256%" y="789" width="0.0829%" height="15" fill="rgb(253,117,3)" fg:x="1668" fg:w="2"/><text x="69.3756%" y="799.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (2 samples, 0.08%)</title><rect x="69.1256%" y="773" width="0.0829%" height="15" fill="rgb(241,127,19)" fg:x="1668" fg:w="2"/><text x="69.3756%" y="783.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (2 samples, 0.08%)</title><rect x="69.1256%" y="757" width="0.0829%" height="15" fill="rgb(218,103,12)" fg:x="1668" fg:w="2"/><text x="69.3756%" y="767.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="69.1670%" y="741" width="0.0414%" height="15" fill="rgb(236,214,43)" fg:x="1669" fg:w="1"/><text x="69.4170%" y="751.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="69.4157%" y="725" width="0.0414%" height="15" fill="rgb(244,144,19)" fg:x="1675" fg:w="1"/><text x="69.6657%" y="735.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (5 samples, 0.21%)</title><rect x="69.3742%" y="805" width="0.2072%" height="15" fill="rgb(246,188,10)" fg:x="1674" fg:w="5"/><text x="69.6242%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (5 samples, 0.21%)</title><rect x="69.3742%" y="789" width="0.2072%" height="15" fill="rgb(212,193,33)" fg:x="1674" fg:w="5"/><text x="69.6242%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.21%)</title><rect x="69.3742%" y="773" width="0.2072%" height="15" fill="rgb(241,51,29)" fg:x="1674" fg:w="5"/><text x="69.6242%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.21%)</title><rect x="69.3742%" y="757" width="0.2072%" height="15" fill="rgb(211,58,19)" fg:x="1674" fg:w="5"/><text x="69.6242%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (5 samples, 0.21%)</title><rect x="69.3742%" y="741" width="0.2072%" height="15" fill="rgb(229,111,26)" fg:x="1674" fg:w="5"/><text x="69.6242%" y="751.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="69.4571%" y="725" width="0.1243%" height="15" fill="rgb(213,115,40)" fg:x="1676" fg:w="3"/><text x="69.7071%" y="735.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.12%)</title><rect x="69.4571%" y="709" width="0.1243%" height="15" fill="rgb(209,56,44)" fg:x="1676" fg:w="3"/><text x="69.7071%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="69.4985%" y="693" width="0.0829%" height="15" fill="rgb(230,108,32)" fg:x="1677" fg:w="2"/><text x="69.7485%" y="703.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.08%)</title><rect x="69.4985%" y="677" width="0.0829%" height="15" fill="rgb(216,165,31)" fg:x="1677" fg:w="2"/><text x="69.7485%" y="687.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="69.5400%" y="661" width="0.0414%" height="15" fill="rgb(218,122,21)" fg:x="1678" fg:w="1"/><text x="69.7900%" y="671.50"></text></g><g><title>ansi_parser::parsers::parse_escape (7 samples, 0.29%)</title><rect x="69.3328%" y="821" width="0.2901%" height="15" fill="rgb(223,224,47)" fg:x="1673" fg:w="7"/><text x="69.5828%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="69.5814%" y="805" width="0.0414%" height="15" fill="rgb(238,102,44)" fg:x="1679" fg:w="1"/><text x="69.8314%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="69.6229%" y="821" width="0.0414%" height="15" fill="rgb(236,46,40)" fg:x="1680" fg:w="1"/><text x="69.8729%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.04%)</title><rect x="69.6229%" y="805" width="0.0414%" height="15" fill="rgb(247,202,50)" fg:x="1680" fg:w="1"/><text x="69.8729%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="69.6229%" y="789" width="0.0414%" height="15" fill="rgb(209,99,20)" fg:x="1680" fg:w="1"/><text x="69.8729%" y="799.50"></text></g><g><title>core::array::&lt;impl core::ops::index::Index&lt;I&gt; for [T: N]&gt;::index (1 samples, 0.04%)</title><rect x="69.6643%" y="789" width="0.0414%" height="15" fill="rgb(252,27,34)" fg:x="1681" fg:w="1"/><text x="69.9143%" y="799.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="69.6643%" y="773" width="0.0414%" height="15" fill="rgb(215,206,23)" fg:x="1681" fg:w="1"/><text x="69.9143%" y="783.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="69.6643%" y="757" width="0.0414%" height="15" fill="rgb(212,135,36)" fg:x="1681" fg:w="1"/><text x="69.9143%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (2 samples, 0.08%)</title><rect x="69.7058%" y="789" width="0.0829%" height="15" fill="rgb(240,189,1)" fg:x="1682" fg:w="2"/><text x="69.9558%" y="799.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="69.7472%" y="773" width="0.0414%" height="15" fill="rgb(242,56,20)" fg:x="1683" fg:w="1"/><text x="69.9972%" y="783.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (5 samples, 0.21%)</title><rect x="69.6643%" y="821" width="0.2072%" height="15" fill="rgb(247,132,33)" fg:x="1681" fg:w="5"/><text x="69.9143%" y="831.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (5 samples, 0.21%)</title><rect x="69.6643%" y="805" width="0.2072%" height="15" fill="rgb(208,149,11)" fg:x="1681" fg:w="5"/><text x="69.9143%" y="815.50"></text></g><g><title>core::slice::memchr::memchr (2 samples, 0.08%)</title><rect x="69.7886%" y="789" width="0.0829%" height="15" fill="rgb(211,33,11)" fg:x="1684" fg:w="2"/><text x="70.0386%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (2 samples, 0.08%)</title><rect x="69.7886%" y="773" width="0.0829%" height="15" fill="rgb(221,29,38)" fg:x="1684" fg:w="2"/><text x="70.0386%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="69.7886%" y="757" width="0.0829%" height="15" fill="rgb(206,182,49)" fg:x="1684" fg:w="2"/><text x="70.0386%" y="767.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="69.8301%" y="741" width="0.0414%" height="15" fill="rgb(216,140,1)" fg:x="1685" fg:w="1"/><text x="70.0801%" y="751.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.62%)</title><rect x="69.3328%" y="837" width="0.6216%" height="15" fill="rgb(232,57,40)" fg:x="1673" fg:w="15"/><text x="69.5828%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2 samples, 0.08%)</title><rect x="69.8715%" y="821" width="0.0829%" height="15" fill="rgb(224,186,18)" fg:x="1686" fg:w="2"/><text x="70.1215%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (2 samples, 0.08%)</title><rect x="69.8715%" y="805" width="0.0829%" height="15" fill="rgb(215,121,11)" fg:x="1686" fg:w="2"/><text x="70.1215%" y="815.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (2 samples, 0.08%)</title><rect x="69.8715%" y="789" width="0.0829%" height="15" fill="rgb(245,147,10)" fg:x="1686" fg:w="2"/><text x="70.1215%" y="799.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="69.8715%" y="773" width="0.0829%" height="15" fill="rgb(238,153,13)" fg:x="1686" fg:w="2"/><text x="70.1215%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::len (1 samples, 0.04%)</title><rect x="69.9130%" y="757" width="0.0414%" height="15" fill="rgb(233,108,0)" fg:x="1687" fg:w="1"/><text x="70.1630%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="69.9544%" y="709" width="0.0414%" height="15" fill="rgb(212,157,17)" fg:x="1688" fg:w="1"/><text x="70.2044%" y="719.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="69.9959%" y="709" width="0.0414%" height="15" fill="rgb(225,213,38)" fg:x="1689" fg:w="1"/><text x="70.2459%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.04%)</title><rect x="69.9959%" y="693" width="0.0414%" height="15" fill="rgb(248,16,11)" fg:x="1689" fg:w="1"/><text x="70.2459%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.04%)</title><rect x="69.9959%" y="677" width="0.0414%" height="15" fill="rgb(241,33,4)" fg:x="1689" fg:w="1"/><text x="70.2459%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.12%)</title><rect x="69.9544%" y="725" width="0.1243%" height="15" fill="rgb(222,26,43)" fg:x="1688" fg:w="3"/><text x="70.2044%" y="735.50"></text></g><g><title>core::cmp::max (1 samples, 0.04%)</title><rect x="70.0373%" y="709" width="0.0414%" height="15" fill="rgb(243,29,36)" fg:x="1690" fg:w="1"/><text x="70.2873%" y="719.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="70.0373%" y="693" width="0.0414%" height="15" fill="rgb(241,9,27)" fg:x="1690" fg:w="1"/><text x="70.2873%" y="703.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.04%)</title><rect x="70.0373%" y="677" width="0.0414%" height="15" fill="rgb(205,117,26)" fg:x="1690" fg:w="1"/><text x="70.2873%" y="687.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="70.0373%" y="661" width="0.0414%" height="15" fill="rgb(209,80,39)" fg:x="1690" fg:w="1"/><text x="70.2873%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.04%)</title><rect x="70.0373%" y="645" width="0.0414%" height="15" fill="rgb(239,155,6)" fg:x="1690" fg:w="1"/><text x="70.2873%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.17%)</title><rect x="69.9544%" y="773" width="0.1658%" height="15" fill="rgb(212,104,12)" fg:x="1688" fg:w="4"/><text x="70.2044%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.17%)</title><rect x="69.9544%" y="757" width="0.1658%" height="15" fill="rgb(234,204,3)" fg:x="1688" fg:w="4"/><text x="70.2044%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.17%)</title><rect x="69.9544%" y="741" width="0.1658%" height="15" fill="rgb(251,218,7)" fg:x="1688" fg:w="4"/><text x="70.2044%" y="751.50"></text></g><g><title>alloc::raw_vec::handle_reserve (1 samples, 0.04%)</title><rect x="70.0787%" y="725" width="0.0414%" height="15" fill="rgb(221,81,32)" fg:x="1691" fg:w="1"/><text x="70.3287%" y="735.50"></text></g><g><title>alloc::string::String::push_str (5 samples, 0.21%)</title><rect x="69.9544%" y="837" width="0.2072%" height="15" fill="rgb(214,152,26)" fg:x="1688" fg:w="5"/><text x="70.2044%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.21%)</title><rect x="69.9544%" y="821" width="0.2072%" height="15" fill="rgb(223,22,3)" fg:x="1688" fg:w="5"/><text x="70.2044%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.21%)</title><rect x="69.9544%" y="805" width="0.2072%" height="15" fill="rgb(207,174,7)" fg:x="1688" fg:w="5"/><text x="70.2044%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.21%)</title><rect x="69.9544%" y="789" width="0.2072%" height="15" fill="rgb(224,19,52)" fg:x="1688" fg:w="5"/><text x="70.2044%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="70.1202%" y="773" width="0.0414%" height="15" fill="rgb(228,24,14)" fg:x="1692" fg:w="1"/><text x="70.3702%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="70.1202%" y="757" width="0.0414%" height="15" fill="rgb(230,153,43)" fg:x="1692" fg:w="1"/><text x="70.3702%" y="767.50"></text></g><g><title>&lt;alloc::string::String as ansi_str::AnsiStr&gt;::ansi_strip (24 samples, 0.99%)</title><rect x="69.2085%" y="885" width="0.9946%" height="15" fill="rgb(231,106,12)" fg:x="1670" fg:w="24"/><text x="69.4585%" y="895.50"></text></g><g><title>&lt;str as ansi_str::AnsiStr&gt;::ansi_strip (24 samples, 0.99%)</title><rect x="69.2085%" y="869" width="0.9946%" height="15" fill="rgb(215,92,2)" fg:x="1670" fg:w="24"/><text x="69.4585%" y="879.50"></text></g><g><title>ansi_str::strip_ansi_sequences (24 samples, 0.99%)</title><rect x="69.2085%" y="853" width="0.9946%" height="15" fill="rgb(249,143,25)" fg:x="1670" fg:w="24"/><text x="69.4585%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;ansi_parser::enums::Output&gt; (1 samples, 0.04%)</title><rect x="70.1616%" y="837" width="0.0414%" height="15" fill="rgb(252,7,35)" fg:x="1693" fg:w="1"/><text x="70.4116%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;ansi_parser::enums::AnsiSequence&gt; (1 samples, 0.04%)</title><rect x="70.1616%" y="821" width="0.0414%" height="15" fill="rgb(216,69,40)" fg:x="1693" fg:w="1"/><text x="70.4116%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;heapless::vec::Vec&lt;u8,typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UInt&lt;typenum::uint::UTerm,typenum::bit::B1&gt;,typenum::bit::B0&gt;,typenum::bit::B1&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="70.1616%" y="805" width="0.0414%" height="15" fill="rgb(240,36,33)" fg:x="1693" fg:w="1"/><text x="70.4116%" y="815.50"></text></g><g><title>&lt;heapless::vec::Vec&lt;T,N&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="70.1616%" y="789" width="0.0414%" height="15" fill="rgb(231,128,14)" fg:x="1693" fg:w="1"/><text x="70.4116%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.04%)</title><rect x="70.2031%" y="837" width="0.0414%" height="15" fill="rgb(245,143,14)" fg:x="1694" fg:w="1"/><text x="70.4531%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.04%)</title><rect x="70.2031%" y="821" width="0.0414%" height="15" fill="rgb(222,130,28)" fg:x="1694" fg:w="1"/><text x="70.4531%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.08%)</title><rect x="70.2031%" y="885" width="0.0829%" height="15" fill="rgb(212,10,48)" fg:x="1694" fg:w="2"/><text x="70.4531%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.08%)</title><rect x="70.2031%" y="869" width="0.0829%" height="15" fill="rgb(254,118,45)" fg:x="1694" fg:w="2"/><text x="70.4531%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.08%)</title><rect x="70.2031%" y="853" width="0.0829%" height="15" fill="rgb(228,6,45)" fg:x="1694" fg:w="2"/><text x="70.4531%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="70.2445%" y="837" width="0.0414%" height="15" fill="rgb(241,18,35)" fg:x="1695" fg:w="1"/><text x="70.4945%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="70.2445%" y="821" width="0.0414%" height="15" fill="rgb(227,214,53)" fg:x="1695" fg:w="1"/><text x="70.4945%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="70.2445%" y="805" width="0.0414%" height="15" fill="rgb(224,107,51)" fg:x="1695" fg:w="1"/><text x="70.4945%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="70.2445%" y="789" width="0.0414%" height="15" fill="rgb(248,60,28)" fg:x="1695" fg:w="1"/><text x="70.4945%" y="799.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.04%)</title><rect x="70.2445%" y="773" width="0.0414%" height="15" fill="rgb(249,101,23)" fg:x="1695" fg:w="1"/><text x="70.4945%" y="783.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="70.2445%" y="757" width="0.0414%" height="15" fill="rgb(228,51,19)" fg:x="1695" fg:w="1"/><text x="70.4945%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="70.2860%" y="821" width="0.0414%" height="15" fill="rgb(213,20,6)" fg:x="1696" fg:w="1"/><text x="70.5360%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="70.2860%" y="805" width="0.0414%" height="15" fill="rgb(212,124,10)" fg:x="1696" fg:w="1"/><text x="70.5360%" y="815.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="70.2860%" y="789" width="0.0414%" height="15" fill="rgb(248,3,40)" fg:x="1696" fg:w="1"/><text x="70.5360%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="70.2860%" y="773" width="0.0414%" height="15" fill="rgb(223,178,23)" fg:x="1696" fg:w="1"/><text x="70.5360%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.08%)</title><rect x="70.2860%" y="885" width="0.0829%" height="15" fill="rgb(240,132,45)" fg:x="1696" fg:w="2"/><text x="70.5360%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.08%)</title><rect x="70.2860%" y="869" width="0.0829%" height="15" fill="rgb(245,164,36)" fg:x="1696" fg:w="2"/><text x="70.5360%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.08%)</title><rect x="70.2860%" y="853" width="0.0829%" height="15" fill="rgb(231,188,53)" fg:x="1696" fg:w="2"/><text x="70.5360%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="70.2860%" y="837" width="0.0829%" height="15" fill="rgb(237,198,39)" fg:x="1696" fg:w="2"/><text x="70.5360%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="70.3274%" y="821" width="0.0414%" height="15" fill="rgb(223,120,35)" fg:x="1697" fg:w="1"/><text x="70.5774%" y="831.50"></text></g><g><title>&lt;char as unicode_width::UnicodeWidthChar&gt;::width (2 samples, 0.08%)</title><rect x="70.3688%" y="869" width="0.0829%" height="15" fill="rgb(253,107,49)" fg:x="1698" fg:w="2"/><text x="70.6188%" y="879.50"></text></g><g><title>unicode_width::tables::charwidth::width (2 samples, 0.08%)</title><rect x="70.3688%" y="853" width="0.0829%" height="15" fill="rgb(216,44,31)" fg:x="1698" fg:w="2"/><text x="70.6188%" y="863.50"></text></g><g><title>&lt;tabled::width::Wrap&lt;W&gt; as tabled::table::CellOption&gt;::change_cell (109 samples, 4.52%)</title><rect x="65.9760%" y="949" width="4.5172%" height="15" fill="rgb(253,87,21)" fg:x="1592" fg:w="109"/><text x="66.2260%" y="959.50">&lt;tabl..</text></g><g><title>papergrid::wrap_text (83 samples, 3.44%)</title><rect x="67.0535%" y="933" width="3.4397%" height="15" fill="rgb(226,18,2)" fg:x="1618" fg:w="83"/><text x="67.3035%" y="943.50">pap..</text></g><g><title>papergrid::split_by_lines (83 samples, 3.44%)</title><rect x="67.0535%" y="917" width="3.4397%" height="15" fill="rgb(216,8,46)" fg:x="1618" fg:w="83"/><text x="67.3035%" y="927.50">pap..</text></g><g><title>papergrid::chunks (79 samples, 3.27%)</title><rect x="67.2192%" y="901" width="3.2739%" height="15" fill="rgb(226,140,39)" fg:x="1622" fg:w="79"/><text x="67.4692%" y="911.50">pap..</text></g><g><title>papergrid::cut_str_to_min_length (3 samples, 0.12%)</title><rect x="70.3688%" y="885" width="0.1243%" height="15" fill="rgb(221,194,54)" fg:x="1698" fg:w="3"/><text x="70.6188%" y="895.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="70.4517%" y="869" width="0.0414%" height="15" fill="rgb(213,92,11)" fg:x="1700" fg:w="1"/><text x="70.7017%" y="879.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.04%)</title><rect x="70.4517%" y="853" width="0.0414%" height="15" fill="rgb(229,162,46)" fg:x="1700" fg:w="1"/><text x="70.7017%" y="863.50"></text></g><g><title>&lt;tabled::width::PriorityMax as tabled::width::ColumnPeaker&gt;::peak (1 samples, 0.04%)</title><rect x="70.4932%" y="933" width="0.0414%" height="15" fill="rgb(214,111,36)" fg:x="1701" fg:w="1"/><text x="70.7432%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by_key (1 samples, 0.04%)</title><rect x="70.4932%" y="917" width="0.0414%" height="15" fill="rgb(207,6,21)" fg:x="1701" fg:w="1"/><text x="70.7432%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (1 samples, 0.04%)</title><rect x="70.4932%" y="901" width="0.0414%" height="15" fill="rgb(213,127,38)" fg:x="1701" fg:w="1"/><text x="70.7432%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1 samples, 0.04%)</title><rect x="70.4932%" y="885" width="0.0414%" height="15" fill="rgb(238,118,32)" fg:x="1701" fg:w="1"/><text x="70.7432%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="70.4932%" y="869" width="0.0414%" height="15" fill="rgb(240,139,39)" fg:x="1701" fg:w="1"/><text x="70.7432%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="70.4932%" y="853" width="0.0414%" height="15" fill="rgb(235,10,37)" fg:x="1701" fg:w="1"/><text x="70.7432%" y="863.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="70.4932%" y="837" width="0.0414%" height="15" fill="rgb(249,171,38)" fg:x="1701" fg:w="1"/><text x="70.7432%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by::fold::{{closure}} (1 samples, 0.04%)</title><rect x="70.4932%" y="821" width="0.0414%" height="15" fill="rgb(242,144,32)" fg:x="1701" fg:w="1"/><text x="70.7432%" y="831.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.04%)</title><rect x="70.4932%" y="805" width="0.0414%" height="15" fill="rgb(217,117,21)" fg:x="1701" fg:w="1"/><text x="70.7432%" y="815.50"></text></g><g><title>ansi_parser::parsers::parse_escape (1 samples, 0.04%)</title><rect x="70.5346%" y="853" width="0.0414%" height="15" fill="rgb(249,87,1)" fg:x="1702" fg:w="1"/><text x="70.7846%" y="863.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (1 samples, 0.04%)</title><rect x="70.5346%" y="837" width="0.0414%" height="15" fill="rgb(248,196,48)" fg:x="1702" fg:w="1"/><text x="70.7846%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (1 samples, 0.04%)</title><rect x="70.5346%" y="821" width="0.0414%" height="15" fill="rgb(251,206,33)" fg:x="1702" fg:w="1"/><text x="70.7846%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.04%)</title><rect x="70.5346%" y="805" width="0.0414%" height="15" fill="rgb(232,141,28)" fg:x="1702" fg:w="1"/><text x="70.7846%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="70.5346%" y="789" width="0.0414%" height="15" fill="rgb(209,167,14)" fg:x="1702" fg:w="1"/><text x="70.7846%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.04%)</title><rect x="70.5346%" y="773" width="0.0414%" height="15" fill="rgb(225,11,50)" fg:x="1702" fg:w="1"/><text x="70.7846%" y="783.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="70.5346%" y="757" width="0.0414%" height="15" fill="rgb(209,50,20)" fg:x="1702" fg:w="1"/><text x="70.7846%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="70.5346%" y="741" width="0.0414%" height="15" fill="rgb(212,17,46)" fg:x="1702" fg:w="1"/><text x="70.7846%" y="751.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="70.5346%" y="869" width="0.0829%" height="15" fill="rgb(216,101,39)" fg:x="1702" fg:w="2"/><text x="70.7846%" y="879.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (1 samples, 0.04%)</title><rect x="70.5760%" y="853" width="0.0414%" height="15" fill="rgb(212,228,48)" fg:x="1703" fg:w="1"/><text x="70.8260%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="70.5760%" y="837" width="0.0414%" height="15" fill="rgb(250,6,50)" fg:x="1703" fg:w="1"/><text x="70.8260%" y="847.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="70.6175%" y="869" width="0.0829%" height="15" fill="rgb(250,160,48)" fg:x="1704" fg:w="2"/><text x="70.8675%" y="879.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (2 samples, 0.08%)</title><rect x="70.6175%" y="853" width="0.0829%" height="15" fill="rgb(244,216,33)" fg:x="1704" fg:w="2"/><text x="70.8675%" y="863.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.08%)</title><rect x="70.6175%" y="837" width="0.0829%" height="15" fill="rgb(207,157,5)" fg:x="1704" fg:w="2"/><text x="70.8675%" y="847.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.08%)</title><rect x="70.6175%" y="821" width="0.0829%" height="15" fill="rgb(228,199,8)" fg:x="1704" fg:w="2"/><text x="70.8675%" y="831.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="70.6589%" y="805" width="0.0414%" height="15" fill="rgb(227,80,20)" fg:x="1705" fg:w="1"/><text x="70.9089%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.21%)</title><rect x="70.5346%" y="901" width="0.2072%" height="15" fill="rgb(222,9,33)" fg:x="1702" fg:w="5"/><text x="70.7846%" y="911.50"></text></g><g><title>&lt;ansi_str::AnsiSplit as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.21%)</title><rect x="70.5346%" y="885" width="0.2072%" height="15" fill="rgb(239,44,28)" fg:x="1702" fg:w="5"/><text x="70.7846%" y="895.50"></text></g><g><title>ansi_str::begin_ansi_sequences (1 samples, 0.04%)</title><rect x="70.7004%" y="869" width="0.0414%" height="15" fill="rgb(249,187,43)" fg:x="1706" fg:w="1"/><text x="70.9504%" y="879.50"></text></g><g><title>ansi_str::emit_ansi_color (1 samples, 0.04%)</title><rect x="70.7004%" y="853" width="0.0414%" height="15" fill="rgb(216,141,28)" fg:x="1706" fg:w="1"/><text x="70.9504%" y="863.50"></text></g><g><title>core::fmt::ArgumentV1::new_display (1 samples, 0.04%)</title><rect x="70.7004%" y="837" width="0.0414%" height="15" fill="rgb(230,154,53)" fg:x="1706" fg:w="1"/><text x="70.9504%" y="847.50"></text></g><g><title>core::fmt::ArgumentV1::new (1 samples, 0.04%)</title><rect x="70.7004%" y="821" width="0.0414%" height="15" fill="rgb(227,82,4)" fg:x="1706" fg:w="1"/><text x="70.9504%" y="831.50"></text></g><g><title>bytecount::integer_simd::bytewise_equal (1 samples, 0.04%)</title><rect x="70.7418%" y="837" width="0.0414%" height="15" fill="rgb(220,107,16)" fg:x="1707" fg:w="1"/><text x="70.9918%" y="847.50"></text></g><g><title>papergrid::count_tabs (2 samples, 0.08%)</title><rect x="70.7418%" y="885" width="0.0829%" height="15" fill="rgb(207,187,2)" fg:x="1707" fg:w="2"/><text x="70.9918%" y="895.50"></text></g><g><title>bytecount::count (2 samples, 0.08%)</title><rect x="70.7418%" y="869" width="0.0829%" height="15" fill="rgb(210,162,52)" fg:x="1707" fg:w="2"/><text x="70.9918%" y="879.50"></text></g><g><title>bytecount::integer_simd::chunk_count (2 samples, 0.08%)</title><rect x="70.7418%" y="853" width="0.0829%" height="15" fill="rgb(217,216,49)" fg:x="1707" fg:w="2"/><text x="70.9918%" y="863.50"></text></g><g><title>bytecount::integer_simd::sum_usize (1 samples, 0.04%)</title><rect x="70.7833%" y="837" width="0.0414%" height="15" fill="rgb(218,146,49)" fg:x="1708" fg:w="1"/><text x="71.0333%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.04%)</title><rect x="70.8247%" y="805" width="0.0414%" height="15" fill="rgb(216,55,40)" fg:x="1709" fg:w="1"/><text x="71.0747%" y="815.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="70.8247%" y="821" width="0.0829%" height="15" fill="rgb(208,196,21)" fg:x="1709" fg:w="2"/><text x="71.0747%" y="831.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.04%)</title><rect x="70.8661%" y="805" width="0.0414%" height="15" fill="rgb(242,117,42)" fg:x="1710" fg:w="1"/><text x="71.1161%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="70.8661%" y="789" width="0.0414%" height="15" fill="rgb(210,11,23)" fg:x="1710" fg:w="1"/><text x="71.1161%" y="799.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width (3 samples, 0.12%)</title><rect x="70.8247%" y="869" width="0.1243%" height="15" fill="rgb(217,110,2)" fg:x="1709" fg:w="3"/><text x="71.0747%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.12%)</title><rect x="70.8247%" y="853" width="0.1243%" height="15" fill="rgb(229,77,54)" fg:x="1709" fg:w="3"/><text x="71.0747%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.12%)</title><rect x="70.8247%" y="837" width="0.1243%" height="15" fill="rgb(218,53,16)" fg:x="1709" fg:w="3"/><text x="71.0747%" y="847.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="70.9076%" y="821" width="0.0414%" height="15" fill="rgb(215,38,13)" fg:x="1711" fg:w="1"/><text x="71.1576%" y="831.50"></text></g><g><title>&lt;str as unicode_width::UnicodeWidthStr&gt;::width::{{closure}} (1 samples, 0.04%)</title><rect x="70.9076%" y="805" width="0.0414%" height="15" fill="rgb(235,42,18)" fg:x="1711" fg:w="1"/><text x="71.1576%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.04%)</title><rect x="70.9076%" y="789" width="0.0414%" height="15" fill="rgb(219,66,54)" fg:x="1711" fg:w="1"/><text x="71.1576%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="70.9490%" y="821" width="0.0829%" height="15" fill="rgb(222,205,4)" fg:x="1712" fg:w="2"/><text x="71.1990%" y="831.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.08%)</title><rect x="70.9490%" y="805" width="0.0829%" height="15" fill="rgb(227,213,46)" fg:x="1712" fg:w="2"/><text x="71.1990%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="70.9905%" y="789" width="0.0414%" height="15" fill="rgb(250,145,42)" fg:x="1713" fg:w="1"/><text x="71.2405%" y="799.50"></text></g><g><title>papergrid::cells_content (13 samples, 0.54%)</title><rect x="70.5346%" y="917" width="0.5387%" height="15" fill="rgb(219,15,2)" fg:x="1702" fg:w="13"/><text x="70.7846%" y="927.50"></text></g><g><title>papergrid::string_width_tab (8 samples, 0.33%)</title><rect x="70.7418%" y="901" width="0.3315%" height="15" fill="rgb(231,181,52)" fg:x="1707" fg:w="8"/><text x="70.9918%" y="911.50"></text></g><g><title>papergrid::string_width (6 samples, 0.25%)</title><rect x="70.8247%" y="885" width="0.2487%" height="15" fill="rgb(235,1,42)" fg:x="1709" fg:w="6"/><text x="71.0747%" y="895.50"></text></g><g><title>strip_ansi_escapes::strip (3 samples, 0.12%)</title><rect x="70.9490%" y="869" width="0.1243%" height="15" fill="rgb(249,88,27)" fg:x="1712" fg:w="3"/><text x="71.1990%" y="879.50"></text></g><g><title>std::io::Write::write_all (3 samples, 0.12%)</title><rect x="70.9490%" y="853" width="0.1243%" height="15" fill="rgb(235,145,16)" fg:x="1712" fg:w="3"/><text x="71.1990%" y="863.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (3 samples, 0.12%)</title><rect x="70.9490%" y="837" width="0.1243%" height="15" fill="rgb(237,114,19)" fg:x="1712" fg:w="3"/><text x="71.1990%" y="847.50"></text></g><g><title>vte::Parser::advance (1 samples, 0.04%)</title><rect x="71.0319%" y="821" width="0.0414%" height="15" fill="rgb(238,51,50)" fg:x="1714" fg:w="1"/><text x="71.2819%" y="831.50"></text></g><g><title>papergrid::Grid::build_widths (14 samples, 0.58%)</title><rect x="70.5346%" y="933" width="0.5802%" height="15" fill="rgb(205,194,25)" fg:x="1702" fg:w="14"/><text x="70.7846%" y="943.50"></text></g><g><title>papergrid::columns_width (1 samples, 0.04%)</title><rect x="71.0734%" y="917" width="0.0414%" height="15" fill="rgb(215,203,17)" fg:x="1715" fg:w="1"/><text x="71.3234%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (1 samples, 0.04%)</title><rect x="71.0734%" y="901" width="0.0414%" height="15" fill="rgb(233,112,49)" fg:x="1715" fg:w="1"/><text x="71.3234%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (1 samples, 0.04%)</title><rect x="71.0734%" y="885" width="0.0414%" height="15" fill="rgb(241,130,26)" fg:x="1715" fg:w="1"/><text x="71.3234%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1 samples, 0.04%)</title><rect x="71.0734%" y="869" width="0.0414%" height="15" fill="rgb(252,223,19)" fg:x="1715" fg:w="1"/><text x="71.3234%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="71.0734%" y="853" width="0.0414%" height="15" fill="rgb(211,95,25)" fg:x="1715" fg:w="1"/><text x="71.3234%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.04%)</title><rect x="71.0734%" y="837" width="0.0414%" height="15" fill="rgb(251,182,27)" fg:x="1715" fg:w="1"/><text x="71.3234%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.04%)</title><rect x="71.0734%" y="821" width="0.0414%" height="15" fill="rgb(238,24,4)" fg:x="1715" fg:w="1"/><text x="71.3234%" y="831.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1 samples, 0.04%)</title><rect x="71.0734%" y="805" width="0.0414%" height="15" fill="rgb(224,220,25)" fg:x="1715" fg:w="1"/><text x="71.3234%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.04%)</title><rect x="71.0734%" y="789" width="0.0414%" height="15" fill="rgb(239,133,26)" fg:x="1715" fg:w="1"/><text x="71.3234%" y="799.50"></text></g><g><title>papergrid::columns_width::{{closure}} (1 samples, 0.04%)</title><rect x="71.0734%" y="773" width="0.0414%" height="15" fill="rgb(211,94,48)" fg:x="1715" fg:w="1"/><text x="71.3234%" y="783.50"></text></g><g><title>papergrid::get_cell_width_cells (1 samples, 0.04%)</title><rect x="71.0734%" y="757" width="0.0414%" height="15" fill="rgb(239,87,6)" fg:x="1715" fg:w="1"/><text x="71.3234%" y="767.50"></text></g><g><title>papergrid::Grid::style (1 samples, 0.04%)</title><rect x="71.0734%" y="741" width="0.0414%" height="15" fill="rgb(227,62,0)" fg:x="1715" fg:w="1"/><text x="71.3234%" y="751.50"></text></g><g><title>papergrid::lookup_entity_value (1 samples, 0.04%)</title><rect x="71.0734%" y="725" width="0.0414%" height="15" fill="rgb(211,226,4)" fg:x="1715" fg:w="1"/><text x="71.3234%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.04%)</title><rect x="71.0734%" y="709" width="0.0414%" height="15" fill="rgb(253,38,52)" fg:x="1715" fg:w="1"/><text x="71.3234%" y="719.50"></text></g><g><title>papergrid::lookup_entity_value::{{closure}} (1 samples, 0.04%)</title><rect x="71.0734%" y="693" width="0.0414%" height="15" fill="rgb(229,126,40)" fg:x="1715" fg:w="1"/><text x="71.3234%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.04%)</title><rect x="71.1148%" y="933" width="0.0414%" height="15" fill="rgb(229,165,44)" fg:x="1716" fg:w="1"/><text x="71.3648%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="71.1148%" y="917" width="0.0414%" height="15" fill="rgb(247,95,47)" fg:x="1716" fg:w="1"/><text x="71.3648%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.04%)</title><rect x="71.1148%" y="901" width="0.0414%" height="15" fill="rgb(216,140,30)" fg:x="1716" fg:w="1"/><text x="71.3648%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.04%)</title><rect x="71.1148%" y="885" width="0.0414%" height="15" fill="rgb(246,214,8)" fg:x="1716" fg:w="1"/><text x="71.3648%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.04%)</title><rect x="71.1148%" y="869" width="0.0414%" height="15" fill="rgb(227,224,15)" fg:x="1716" fg:w="1"/><text x="71.3648%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.04%)</title><rect x="71.1148%" y="853" width="0.0414%" height="15" fill="rgb(233,175,4)" fg:x="1716" fg:w="1"/><text x="71.3648%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.04%)</title><rect x="71.1148%" y="837" width="0.0414%" height="15" fill="rgb(221,66,45)" fg:x="1716" fg:w="1"/><text x="71.3648%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (1 samples, 0.04%)</title><rect x="71.1148%" y="821" width="0.0414%" height="15" fill="rgb(221,178,18)" fg:x="1716" fg:w="1"/><text x="71.3648%" y="831.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.04%)</title><rect x="71.1148%" y="805" width="0.0414%" height="15" fill="rgb(213,81,29)" fg:x="1716" fg:w="1"/><text x="71.3648%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.04%)</title><rect x="71.1148%" y="789" width="0.0414%" height="15" fill="rgb(220,89,49)" fg:x="1716" fg:w="1"/><text x="71.3648%" y="799.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.04%)</title><rect x="71.1148%" y="773" width="0.0414%" height="15" fill="rgb(227,60,33)" fg:x="1716" fg:w="1"/><text x="71.3648%" y="783.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="71.1148%" y="757" width="0.0414%" height="15" fill="rgb(205,113,12)" fg:x="1716" fg:w="1"/><text x="71.3648%" y="767.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="71.1148%" y="741" width="0.0414%" height="15" fill="rgb(211,32,1)" fg:x="1716" fg:w="1"/><text x="71.3648%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="71.1148%" y="725" width="0.0414%" height="15" fill="rgb(246,2,12)" fg:x="1716" fg:w="1"/><text x="71.3648%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="71.1148%" y="709" width="0.0414%" height="15" fill="rgb(243,37,27)" fg:x="1716" fg:w="1"/><text x="71.3648%" y="719.50"></text></g><g><title>&lt;papergrid::Grid as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="71.1562%" y="917" width="0.0414%" height="15" fill="rgb(248,211,31)" fg:x="1717" fg:w="1"/><text x="71.4062%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="71.1562%" y="901" width="0.0414%" height="15" fill="rgb(242,146,47)" fg:x="1717" fg:w="1"/><text x="71.4062%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="71.1562%" y="885" width="0.0414%" height="15" fill="rgb(206,70,20)" fg:x="1717" fg:w="1"/><text x="71.4062%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="71.1562%" y="869" width="0.0414%" height="15" fill="rgb(215,10,51)" fg:x="1717" fg:w="1"/><text x="71.4062%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="71.1562%" y="853" width="0.0414%" height="15" fill="rgb(243,178,53)" fg:x="1717" fg:w="1"/><text x="71.4062%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="71.1562%" y="837" width="0.0414%" height="15" fill="rgb(233,221,20)" fg:x="1717" fg:w="1"/><text x="71.4062%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="71.1562%" y="821" width="0.0414%" height="15" fill="rgb(218,95,35)" fg:x="1717" fg:w="1"/><text x="71.4062%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="71.1562%" y="805" width="0.0414%" height="15" fill="rgb(229,13,5)" fg:x="1717" fg:w="1"/><text x="71.4062%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="71.1562%" y="789" width="0.0414%" height="15" fill="rgb(252,164,30)" fg:x="1717" fg:w="1"/><text x="71.4062%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="71.1562%" y="773" width="0.0414%" height="15" fill="rgb(232,68,36)" fg:x="1717" fg:w="1"/><text x="71.4062%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="71.1562%" y="757" width="0.0414%" height="15" fill="rgb(219,59,54)" fg:x="1717" fg:w="1"/><text x="71.4062%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="71.1562%" y="741" width="0.0414%" height="15" fill="rgb(250,92,33)" fg:x="1717" fg:w="1"/><text x="71.4062%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="71.1562%" y="725" width="0.0414%" height="15" fill="rgb(229,162,54)" fg:x="1717" fg:w="1"/><text x="71.4062%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="71.1977%" y="885" width="0.0414%" height="15" fill="rgb(244,114,52)" fg:x="1718" fg:w="1"/><text x="71.4477%" y="895.50"></text></g><g><title>nu_command::viewers::table::build_table (145 samples, 6.01%)</title><rect x="65.2714%" y="1013" width="6.0091%" height="15" fill="rgb(212,211,43)" fg:x="1575" fg:w="145"/><text x="65.5214%" y="1023.50">nu_comma..</text></g><g><title>tabled::table::Table::with (145 samples, 6.01%)</title><rect x="65.2714%" y="997" width="6.0091%" height="15" fill="rgb(226,147,8)" fg:x="1575" fg:w="145"/><text x="65.5214%" y="1007.50">tabled::..</text></g><g><title>&lt;tabled::width::Wrap&lt;W,P&gt; as tabled::table::TableOption&gt;::change (143 samples, 5.93%)</title><rect x="65.3543%" y="981" width="5.9262%" height="15" fill="rgb(226,23,13)" fg:x="1577" fg:w="143"/><text x="65.6043%" y="991.50">&lt;tabled:..</text></g><g><title>tabled::width::wrap_total_width (128 samples, 5.30%)</title><rect x="65.9760%" y="965" width="5.3046%" height="15" fill="rgb(240,63,4)" fg:x="1592" fg:w="128"/><text x="66.2260%" y="975.50">tabled..</text></g><g><title>tabled::width::decrease_total_width_fn (19 samples, 0.79%)</title><rect x="70.4932%" y="949" width="0.7874%" height="15" fill="rgb(221,1,32)" fg:x="1701" fg:w="19"/><text x="70.7432%" y="959.50"></text></g><g><title>tabled::width::build_min_widths (3 samples, 0.12%)</title><rect x="71.1562%" y="933" width="0.1243%" height="15" fill="rgb(242,117,10)" fg:x="1717" fg:w="3"/><text x="71.4062%" y="943.50"></text></g><g><title>papergrid::Grid::build_widths (2 samples, 0.08%)</title><rect x="71.1977%" y="917" width="0.0829%" height="15" fill="rgb(249,172,44)" fg:x="1718" fg:w="2"/><text x="71.4477%" y="927.50"></text></g><g><title>papergrid::cells_content (2 samples, 0.08%)</title><rect x="71.1977%" y="901" width="0.0829%" height="15" fill="rgb(244,46,45)" fg:x="1718" fg:w="2"/><text x="71.4477%" y="911.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.04%)</title><rect x="71.2391%" y="885" width="0.0414%" height="15" fill="rgb(206,43,17)" fg:x="1719" fg:w="1"/><text x="71.4891%" y="895.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.04%)</title><rect x="71.2391%" y="869" width="0.0414%" height="15" fill="rgb(239,218,39)" fg:x="1719" fg:w="1"/><text x="71.4891%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (1 samples, 0.04%)</title><rect x="71.2391%" y="853" width="0.0414%" height="15" fill="rgb(208,169,54)" fg:x="1719" fg:w="1"/><text x="71.4891%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="71.2391%" y="837" width="0.0414%" height="15" fill="rgb(247,25,42)" fg:x="1719" fg:w="1"/><text x="71.4891%" y="847.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.04%)</title><rect x="71.2806%" y="997" width="0.0414%" height="15" fill="rgb(226,23,31)" fg:x="1720" fg:w="1"/><text x="71.5306%" y="1007.50"></text></g><g><title>&lt;nu_protocol::ty::Type as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="71.2806%" y="981" width="0.0414%" height="15" fill="rgb(247,16,28)" fg:x="1720" fg:w="1"/><text x="71.5306%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::join (1 samples, 0.04%)</title><rect x="71.2806%" y="965" width="0.0414%" height="15" fill="rgb(231,147,38)" fg:x="1720" fg:w="1"/><text x="71.5306%" y="975.50"></text></g><g><title>alloc::str::&lt;impl alloc::slice::Join&lt;&amp;str&gt; for [S]&gt;::join (1 samples, 0.04%)</title><rect x="71.2806%" y="949" width="0.0414%" height="15" fill="rgb(253,81,48)" fg:x="1720" fg:w="1"/><text x="71.5306%" y="959.50"></text></g><g><title>alloc::str::join_generic_copy (1 samples, 0.04%)</title><rect x="71.2806%" y="933" width="0.0414%" height="15" fill="rgb(249,222,43)" fg:x="1720" fg:w="1"/><text x="71.5306%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.04%)</title><rect x="71.2806%" y="917" width="0.0414%" height="15" fill="rgb(221,3,27)" fg:x="1720" fg:w="1"/><text x="71.5306%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="71.2806%" y="901" width="0.0414%" height="15" fill="rgb(228,180,5)" fg:x="1720" fg:w="1"/><text x="71.5306%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="71.2806%" y="885" width="0.0414%" height="15" fill="rgb(227,131,42)" fg:x="1720" fg:w="1"/><text x="71.5306%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="71.2806%" y="869" width="0.0414%" height="15" fill="rgb(212,3,39)" fg:x="1720" fg:w="1"/><text x="71.5306%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="71.2806%" y="853" width="0.0414%" height="15" fill="rgb(226,45,5)" fg:x="1720" fg:w="1"/><text x="71.5306%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="71.2806%" y="837" width="0.0414%" height="15" fill="rgb(215,167,45)" fg:x="1720" fg:w="1"/><text x="71.5306%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="71.2806%" y="821" width="0.0414%" height="15" fill="rgb(250,218,53)" fg:x="1720" fg:w="1"/><text x="71.5306%" y="831.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.04%)</title><rect x="71.2806%" y="805" width="0.0414%" height="15" fill="rgb(207,140,0)" fg:x="1720" fg:w="1"/><text x="71.5306%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="71.3220%" y="789" width="0.0414%" height="15" fill="rgb(238,133,51)" fg:x="1721" fg:w="1"/><text x="71.5720%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="71.3220%" y="773" width="0.0414%" height="15" fill="rgb(218,203,53)" fg:x="1721" fg:w="1"/><text x="71.5720%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="71.3220%" y="757" width="0.0414%" height="15" fill="rgb(226,184,25)" fg:x="1721" fg:w="1"/><text x="71.5720%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="71.3220%" y="805" width="0.0829%" height="15" fill="rgb(231,121,21)" fg:x="1721" fg:w="2"/><text x="71.5720%" y="815.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="71.3634%" y="789" width="0.0414%" height="15" fill="rgb(251,14,34)" fg:x="1722" fg:w="1"/><text x="71.6134%" y="799.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="71.3634%" y="773" width="0.0414%" height="15" fill="rgb(249,193,11)" fg:x="1722" fg:w="1"/><text x="71.6134%" y="783.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="71.3634%" y="757" width="0.0414%" height="15" fill="rgb(220,172,37)" fg:x="1722" fg:w="1"/><text x="71.6134%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="71.4463%" y="757" width="0.0829%" height="15" fill="rgb(231,229,43)" fg:x="1724" fg:w="2"/><text x="71.6963%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="71.4463%" y="741" width="0.0829%" height="15" fill="rgb(250,161,5)" fg:x="1724" fg:w="2"/><text x="71.6963%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.08%)</title><rect x="71.4463%" y="725" width="0.0829%" height="15" fill="rgb(218,225,18)" fg:x="1724" fg:w="2"/><text x="71.6963%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.08%)</title><rect x="71.4463%" y="709" width="0.0829%" height="15" fill="rgb(245,45,42)" fg:x="1724" fg:w="2"/><text x="71.6963%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.08%)</title><rect x="71.4463%" y="693" width="0.0829%" height="15" fill="rgb(211,115,1)" fg:x="1724" fg:w="2"/><text x="71.6963%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="71.4463%" y="677" width="0.0829%" height="15" fill="rgb(248,133,52)" fg:x="1724" fg:w="2"/><text x="71.6963%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.08%)</title><rect x="71.4463%" y="661" width="0.0829%" height="15" fill="rgb(238,100,21)" fg:x="1724" fg:w="2"/><text x="71.6963%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.08%)</title><rect x="71.4463%" y="645" width="0.0829%" height="15" fill="rgb(247,144,11)" fg:x="1724" fg:w="2"/><text x="71.6963%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.08%)</title><rect x="71.4463%" y="629" width="0.0829%" height="15" fill="rgb(206,164,16)" fg:x="1724" fg:w="2"/><text x="71.6963%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="71.4463%" y="613" width="0.0829%" height="15" fill="rgb(222,34,3)" fg:x="1724" fg:w="2"/><text x="71.6963%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.08%)</title><rect x="71.4463%" y="597" width="0.0829%" height="15" fill="rgb(248,82,4)" fg:x="1724" fg:w="2"/><text x="71.6963%" y="607.50"></text></g><g><title>malloc (2 samples, 0.08%)</title><rect x="71.4463%" y="581" width="0.0829%" height="15" fill="rgb(228,81,46)" fg:x="1724" fg:w="2"/><text x="71.6963%" y="591.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="71.4463%" y="565" width="0.0829%" height="15" fill="rgb(227,67,47)" fg:x="1724" fg:w="2"/><text x="71.6963%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="71.5292%" y="757" width="0.0829%" height="15" fill="rgb(215,93,53)" fg:x="1726" fg:w="2"/><text x="71.7792%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="71.5292%" y="741" width="0.0829%" height="15" fill="rgb(248,194,39)" fg:x="1726" fg:w="2"/><text x="71.7792%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="71.5707%" y="725" width="0.0414%" height="15" fill="rgb(215,5,19)" fg:x="1727" fg:w="1"/><text x="71.8207%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="71.6121%" y="741" width="0.0414%" height="15" fill="rgb(226,215,51)" fg:x="1728" fg:w="1"/><text x="71.8621%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="71.6121%" y="725" width="0.0414%" height="15" fill="rgb(225,56,26)" fg:x="1728" fg:w="1"/><text x="71.8621%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="71.6121%" y="709" width="0.0414%" height="15" fill="rgb(222,75,29)" fg:x="1728" fg:w="1"/><text x="71.8621%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="71.6121%" y="693" width="0.0414%" height="15" fill="rgb(236,139,6)" fg:x="1728" fg:w="1"/><text x="71.8621%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="71.6121%" y="677" width="0.0414%" height="15" fill="rgb(223,137,36)" fg:x="1728" fg:w="1"/><text x="71.8621%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="71.6121%" y="661" width="0.0414%" height="15" fill="rgb(226,99,2)" fg:x="1728" fg:w="1"/><text x="71.8621%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="71.6121%" y="645" width="0.0414%" height="15" fill="rgb(206,133,23)" fg:x="1728" fg:w="1"/><text x="71.8621%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="71.6121%" y="629" width="0.0414%" height="15" fill="rgb(243,173,15)" fg:x="1728" fg:w="1"/><text x="71.8621%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="71.6121%" y="613" width="0.0414%" height="15" fill="rgb(228,69,28)" fg:x="1728" fg:w="1"/><text x="71.8621%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="71.6121%" y="597" width="0.0414%" height="15" fill="rgb(212,51,22)" fg:x="1728" fg:w="1"/><text x="71.8621%" y="607.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="71.6121%" y="581" width="0.0414%" height="15" fill="rgb(227,113,0)" fg:x="1728" fg:w="1"/><text x="71.8621%" y="591.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="71.6121%" y="565" width="0.0414%" height="15" fill="rgb(252,84,27)" fg:x="1728" fg:w="1"/><text x="71.8621%" y="575.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="71.6121%" y="549" width="0.0414%" height="15" fill="rgb(223,145,39)" fg:x="1728" fg:w="1"/><text x="71.8621%" y="559.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (3 samples, 0.12%)</title><rect x="71.6121%" y="757" width="0.1243%" height="15" fill="rgb(239,219,30)" fg:x="1728" fg:w="3"/><text x="71.8621%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="71.6535%" y="741" width="0.0829%" height="15" fill="rgb(224,196,39)" fg:x="1729" fg:w="2"/><text x="71.9035%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.08%)</title><rect x="71.6535%" y="725" width="0.0829%" height="15" fill="rgb(205,35,43)" fg:x="1729" fg:w="2"/><text x="71.9035%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.08%)</title><rect x="71.6535%" y="709" width="0.0829%" height="15" fill="rgb(228,201,21)" fg:x="1729" fg:w="2"/><text x="71.9035%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.08%)</title><rect x="71.6535%" y="693" width="0.0829%" height="15" fill="rgb(237,118,16)" fg:x="1729" fg:w="2"/><text x="71.9035%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="71.6950%" y="677" width="0.0414%" height="15" fill="rgb(241,17,19)" fg:x="1730" fg:w="1"/><text x="71.9450%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="71.6950%" y="661" width="0.0414%" height="15" fill="rgb(214,10,25)" fg:x="1730" fg:w="1"/><text x="71.9450%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="71.6950%" y="645" width="0.0414%" height="15" fill="rgb(238,37,29)" fg:x="1730" fg:w="1"/><text x="71.9450%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="71.6950%" y="629" width="0.0414%" height="15" fill="rgb(253,83,25)" fg:x="1730" fg:w="1"/><text x="71.9450%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="71.6950%" y="613" width="0.0414%" height="15" fill="rgb(234,192,12)" fg:x="1730" fg:w="1"/><text x="71.9450%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="71.6950%" y="597" width="0.0414%" height="15" fill="rgb(241,216,45)" fg:x="1730" fg:w="1"/><text x="71.9450%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="71.6950%" y="581" width="0.0414%" height="15" fill="rgb(242,22,33)" fg:x="1730" fg:w="1"/><text x="71.9450%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="71.6950%" y="565" width="0.0414%" height="15" fill="rgb(231,105,49)" fg:x="1730" fg:w="1"/><text x="71.9450%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="71.6950%" y="549" width="0.0414%" height="15" fill="rgb(218,204,15)" fg:x="1730" fg:w="1"/><text x="71.9450%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="71.6950%" y="533" width="0.0414%" height="15" fill="rgb(235,138,41)" fg:x="1730" fg:w="1"/><text x="71.9450%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="71.6950%" y="517" width="0.0414%" height="15" fill="rgb(246,0,9)" fg:x="1730" fg:w="1"/><text x="71.9450%" y="527.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="71.6950%" y="501" width="0.0414%" height="15" fill="rgb(210,74,4)" fg:x="1730" fg:w="1"/><text x="71.9450%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::spare_capacity_mut (1 samples, 0.04%)</title><rect x="71.7364%" y="757" width="0.0414%" height="15" fill="rgb(250,60,41)" fg:x="1731" fg:w="1"/><text x="71.9864%" y="767.50"></text></g><g><title>[libc.so.6] (5 samples, 0.21%)</title><rect x="71.7779%" y="725" width="0.2072%" height="15" fill="rgb(220,115,12)" fg:x="1732" fg:w="5"/><text x="72.0279%" y="735.50"></text></g><g><title>nu_command::viewers::table::convert_data (19 samples, 0.79%)</title><rect x="71.2806%" y="1013" width="0.7874%" height="15" fill="rgb(237,100,13)" fg:x="1720" fg:w="19"/><text x="71.5306%" y="1023.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (18 samples, 0.75%)</title><rect x="71.3220%" y="997" width="0.7460%" height="15" fill="rgb(213,55,26)" fg:x="1721" fg:w="18"/><text x="71.5720%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.75%)</title><rect x="71.3220%" y="981" width="0.7460%" height="15" fill="rgb(216,17,4)" fg:x="1721" fg:w="18"/><text x="71.5720%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.75%)</title><rect x="71.3220%" y="965" width="0.7460%" height="15" fill="rgb(220,153,47)" fg:x="1721" fg:w="18"/><text x="71.5720%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.75%)</title><rect x="71.3220%" y="949" width="0.7460%" height="15" fill="rgb(215,131,9)" fg:x="1721" fg:w="18"/><text x="71.5720%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.75%)</title><rect x="71.3220%" y="933" width="0.7460%" height="15" fill="rgb(233,46,42)" fg:x="1721" fg:w="18"/><text x="71.5720%" y="943.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (18 samples, 0.75%)</title><rect x="71.3220%" y="917" width="0.7460%" height="15" fill="rgb(226,86,7)" fg:x="1721" fg:w="18"/><text x="71.5720%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.75%)</title><rect x="71.3220%" y="901" width="0.7460%" height="15" fill="rgb(239,226,21)" fg:x="1721" fg:w="18"/><text x="71.5720%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (18 samples, 0.75%)</title><rect x="71.3220%" y="885" width="0.7460%" height="15" fill="rgb(244,137,22)" fg:x="1721" fg:w="18"/><text x="71.5720%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (18 samples, 0.75%)</title><rect x="71.3220%" y="869" width="0.7460%" height="15" fill="rgb(211,139,35)" fg:x="1721" fg:w="18"/><text x="71.5720%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (18 samples, 0.75%)</title><rect x="71.3220%" y="853" width="0.7460%" height="15" fill="rgb(214,62,50)" fg:x="1721" fg:w="18"/><text x="71.5720%" y="863.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (18 samples, 0.75%)</title><rect x="71.3220%" y="837" width="0.7460%" height="15" fill="rgb(212,113,44)" fg:x="1721" fg:w="18"/><text x="71.5720%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (18 samples, 0.75%)</title><rect x="71.3220%" y="821" width="0.7460%" height="15" fill="rgb(226,150,43)" fg:x="1721" fg:w="18"/><text x="71.5720%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.66%)</title><rect x="71.4049%" y="805" width="0.6631%" height="15" fill="rgb(250,71,37)" fg:x="1723" fg:w="16"/><text x="71.6549%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.66%)</title><rect x="71.4049%" y="789" width="0.6631%" height="15" fill="rgb(219,76,19)" fg:x="1723" fg:w="16"/><text x="71.6549%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.66%)</title><rect x="71.4049%" y="773" width="0.6631%" height="15" fill="rgb(250,39,11)" fg:x="1723" fg:w="16"/><text x="71.6549%" y="783.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (7 samples, 0.29%)</title><rect x="71.7779%" y="757" width="0.2901%" height="15" fill="rgb(230,64,31)" fg:x="1732" fg:w="7"/><text x="72.0279%" y="767.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::new (7 samples, 0.29%)</title><rect x="71.7779%" y="741" width="0.2901%" height="15" fill="rgb(208,222,23)" fg:x="1732" fg:w="7"/><text x="72.0279%" y="751.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (2 samples, 0.08%)</title><rect x="71.9851%" y="725" width="0.0829%" height="15" fill="rgb(227,125,18)" fg:x="1737" fg:w="2"/><text x="72.2351%" y="735.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="71.9851%" y="709" width="0.0829%" height="15" fill="rgb(234,210,9)" fg:x="1737" fg:w="2"/><text x="72.2351%" y="719.50"></text></g><g><title>&lt;char as core::fmt::Display&gt;::fmt (1 samples, 0.04%)</title><rect x="72.0680%" y="709" width="0.0414%" height="15" fill="rgb(217,127,24)" fg:x="1739" fg:w="1"/><text x="72.3180%" y="719.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_char (1 samples, 0.04%)</title><rect x="72.0680%" y="693" width="0.0414%" height="15" fill="rgb(239,141,48)" fg:x="1739" fg:w="1"/><text x="72.3180%" y="703.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.08%)</title><rect x="72.0680%" y="853" width="0.0829%" height="15" fill="rgb(227,109,8)" fg:x="1739" fg:w="2"/><text x="72.3180%" y="863.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.08%)</title><rect x="72.0680%" y="837" width="0.0829%" height="15" fill="rgb(235,184,23)" fg:x="1739" fg:w="2"/><text x="72.3180%" y="847.50"></text></g><g><title>vte::Parser::advance (2 samples, 0.08%)</title><rect x="72.0680%" y="821" width="0.0829%" height="15" fill="rgb(227,226,48)" fg:x="1739" fg:w="2"/><text x="72.3180%" y="831.50"></text></g><g><title>vte::Parser::perform_state_change (2 samples, 0.08%)</title><rect x="72.0680%" y="805" width="0.0829%" height="15" fill="rgb(206,150,11)" fg:x="1739" fg:w="2"/><text x="72.3180%" y="815.50"></text></g><g><title>vte::Parser::perform_action (2 samples, 0.08%)</title><rect x="72.0680%" y="789" width="0.0829%" height="15" fill="rgb(254,2,33)" fg:x="1739" fg:w="2"/><text x="72.3180%" y="799.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::print (2 samples, 0.08%)</title><rect x="72.0680%" y="773" width="0.0829%" height="15" fill="rgb(243,160,20)" fg:x="1739" fg:w="2"/><text x="72.3180%" y="783.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_fmt (2 samples, 0.08%)</title><rect x="72.0680%" y="757" width="0.0829%" height="15" fill="rgb(218,208,30)" fg:x="1739" fg:w="2"/><text x="72.3180%" y="767.50"></text></g><g><title>std::io::Write::write_fmt (2 samples, 0.08%)</title><rect x="72.0680%" y="741" width="0.0829%" height="15" fill="rgb(224,120,49)" fg:x="1739" fg:w="2"/><text x="72.3180%" y="751.50"></text></g><g><title>core::fmt::write (2 samples, 0.08%)</title><rect x="72.0680%" y="725" width="0.0829%" height="15" fill="rgb(246,12,2)" fg:x="1739" fg:w="2"/><text x="72.3180%" y="735.50"></text></g><g><title>core::fmt::Write::write_char (1 samples, 0.04%)</title><rect x="72.1094%" y="709" width="0.0414%" height="15" fill="rgb(236,117,3)" fg:x="1740" fg:w="1"/><text x="72.3594%" y="719.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (1 samples, 0.04%)</title><rect x="72.1094%" y="693" width="0.0414%" height="15" fill="rgb(216,128,52)" fg:x="1740" fg:w="1"/><text x="72.3594%" y="703.50"></text></g><g><title>nu_command::viewers::table::print_table (3 samples, 0.12%)</title><rect x="72.0680%" y="1013" width="0.1243%" height="15" fill="rgb(246,145,19)" fg:x="1739" fg:w="3"/><text x="72.3180%" y="1023.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (3 samples, 0.12%)</title><rect x="72.0680%" y="997" width="0.1243%" height="15" fill="rgb(222,11,46)" fg:x="1739" fg:w="3"/><text x="72.3180%" y="1007.50"></text></g><g><title>&lt;tabled::table::Table as core::fmt::Display&gt;::fmt (3 samples, 0.12%)</title><rect x="72.0680%" y="981" width="0.1243%" height="15" fill="rgb(245,82,36)" fg:x="1739" fg:w="3"/><text x="72.3180%" y="991.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.12%)</title><rect x="72.0680%" y="965" width="0.1243%" height="15" fill="rgb(250,73,51)" fg:x="1739" fg:w="3"/><text x="72.3180%" y="975.50"></text></g><g><title>core::fmt::write (3 samples, 0.12%)</title><rect x="72.0680%" y="949" width="0.1243%" height="15" fill="rgb(221,189,23)" fg:x="1739" fg:w="3"/><text x="72.3180%" y="959.50"></text></g><g><title>&lt;papergrid::Grid as core::fmt::Display&gt;::fmt (3 samples, 0.12%)</title><rect x="72.0680%" y="933" width="0.1243%" height="15" fill="rgb(210,33,7)" fg:x="1739" fg:w="3"/><text x="72.3180%" y="943.50"></text></g><g><title>papergrid::cells_content (3 samples, 0.12%)</title><rect x="72.0680%" y="917" width="0.1243%" height="15" fill="rgb(210,107,22)" fg:x="1739" fg:w="3"/><text x="72.3180%" y="927.50"></text></g><g><title>papergrid::string_width_tab (3 samples, 0.12%)</title><rect x="72.0680%" y="901" width="0.1243%" height="15" fill="rgb(222,116,37)" fg:x="1739" fg:w="3"/><text x="72.3180%" y="911.50"></text></g><g><title>papergrid::string_width (3 samples, 0.12%)</title><rect x="72.0680%" y="885" width="0.1243%" height="15" fill="rgb(254,17,48)" fg:x="1739" fg:w="3"/><text x="72.3180%" y="895.50"></text></g><g><title>strip_ansi_escapes::strip (3 samples, 0.12%)</title><rect x="72.0680%" y="869" width="0.1243%" height="15" fill="rgb(224,36,32)" fg:x="1739" fg:w="3"/><text x="72.3180%" y="879.50"></text></g><g><title>strip_ansi_escapes::Writer&lt;W&gt;::new (1 samples, 0.04%)</title><rect x="72.1508%" y="853" width="0.0414%" height="15" fill="rgb(232,90,46)" fg:x="1741" fg:w="1"/><text x="72.4008%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="72.1508%" y="837" width="0.0414%" height="15" fill="rgb(241,66,40)" fg:x="1741" fg:w="1"/><text x="72.4008%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="72.1923%" y="997" width="0.0414%" height="15" fill="rgb(249,184,29)" fg:x="1742" fg:w="1"/><text x="72.4423%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="72.1923%" y="981" width="0.0414%" height="15" fill="rgb(231,181,1)" fg:x="1742" fg:w="1"/><text x="72.4423%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="72.1923%" y="965" width="0.0414%" height="15" fill="rgb(224,94,2)" fg:x="1742" fg:w="1"/><text x="72.4423%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="72.1923%" y="949" width="0.0414%" height="15" fill="rgb(229,170,15)" fg:x="1742" fg:w="1"/><text x="72.4423%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="72.1923%" y="933" width="0.0414%" height="15" fill="rgb(240,127,35)" fg:x="1742" fg:w="1"/><text x="72.4423%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="72.1923%" y="917" width="0.0414%" height="15" fill="rgb(248,196,34)" fg:x="1742" fg:w="1"/><text x="72.4423%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="72.1923%" y="901" width="0.0414%" height="15" fill="rgb(236,137,7)" fg:x="1742" fg:w="1"/><text x="72.4423%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="72.1923%" y="885" width="0.0414%" height="15" fill="rgb(235,127,16)" fg:x="1742" fg:w="1"/><text x="72.4423%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="72.1923%" y="869" width="0.0414%" height="15" fill="rgb(250,192,54)" fg:x="1742" fg:w="1"/><text x="72.4423%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="72.1923%" y="853" width="0.0414%" height="15" fill="rgb(218,98,20)" fg:x="1742" fg:w="1"/><text x="72.4423%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="72.1923%" y="837" width="0.0414%" height="15" fill="rgb(230,176,47)" fg:x="1742" fg:w="1"/><text x="72.4423%" y="847.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="72.1923%" y="821" width="0.0414%" height="15" fill="rgb(244,2,33)" fg:x="1742" fg:w="1"/><text x="72.4423%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="72.2337%" y="997" width="0.0414%" height="15" fill="rgb(231,100,17)" fg:x="1743" fg:w="1"/><text x="72.4837%" y="1007.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="72.2337%" y="981" width="0.0414%" height="15" fill="rgb(245,23,12)" fg:x="1743" fg:w="1"/><text x="72.4837%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (3 samples, 0.12%)</title><rect x="72.2752%" y="997" width="0.1243%" height="15" fill="rgb(249,55,22)" fg:x="1744" fg:w="3"/><text x="72.5252%" y="1007.50"></text></g><g><title>nu_engine::eval::eval_expression::{{closure}} (2 samples, 0.08%)</title><rect x="72.3166%" y="981" width="0.0829%" height="15" fill="rgb(207,134,9)" fg:x="1745" fg:w="2"/><text x="72.5666%" y="991.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="72.3581%" y="965" width="0.0414%" height="15" fill="rgb(218,134,0)" fg:x="1746" fg:w="1"/><text x="72.6081%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.04%)</title><rect x="72.3581%" y="949" width="0.0414%" height="15" fill="rgb(213,212,33)" fg:x="1746" fg:w="1"/><text x="72.6081%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (1 samples, 0.04%)</title><rect x="72.3581%" y="933" width="0.0414%" height="15" fill="rgb(252,106,18)" fg:x="1746" fg:w="1"/><text x="72.6081%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="72.3581%" y="917" width="0.0414%" height="15" fill="rgb(208,126,42)" fg:x="1746" fg:w="1"/><text x="72.6081%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="72.3581%" y="901" width="0.0414%" height="15" fill="rgb(246,175,29)" fg:x="1746" fg:w="1"/><text x="72.6081%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="72.3581%" y="885" width="0.0414%" height="15" fill="rgb(215,13,50)" fg:x="1746" fg:w="1"/><text x="72.6081%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="72.3995%" y="949" width="0.0414%" height="15" fill="rgb(216,172,15)" fg:x="1747" fg:w="1"/><text x="72.6495%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.08%)</title><rect x="72.3995%" y="997" width="0.0829%" height="15" fill="rgb(212,103,13)" fg:x="1747" fg:w="2"/><text x="72.6495%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.08%)</title><rect x="72.3995%" y="981" width="0.0829%" height="15" fill="rgb(231,171,36)" fg:x="1747" fg:w="2"/><text x="72.6495%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.08%)</title><rect x="72.3995%" y="965" width="0.0829%" height="15" fill="rgb(250,123,20)" fg:x="1747" fg:w="2"/><text x="72.6495%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="72.4409%" y="949" width="0.0414%" height="15" fill="rgb(212,53,50)" fg:x="1748" fg:w="1"/><text x="72.6909%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="72.4409%" y="933" width="0.0414%" height="15" fill="rgb(243,54,12)" fg:x="1748" fg:w="1"/><text x="72.6909%" y="943.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="72.4409%" y="917" width="0.0414%" height="15" fill="rgb(234,101,34)" fg:x="1748" fg:w="1"/><text x="72.6909%" y="927.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.04%)</title><rect x="72.4409%" y="901" width="0.0414%" height="15" fill="rgb(254,67,22)" fg:x="1748" fg:w="1"/><text x="72.6909%" y="911.50"></text></g><g><title>realloc (1 samples, 0.04%)</title><rect x="72.4409%" y="885" width="0.0414%" height="15" fill="rgb(250,35,47)" fg:x="1748" fg:w="1"/><text x="72.6909%" y="895.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="72.4409%" y="869" width="0.0414%" height="15" fill="rgb(226,126,38)" fg:x="1748" fg:w="1"/><text x="72.6909%" y="879.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="72.4409%" y="853" width="0.0414%" height="15" fill="rgb(216,138,53)" fg:x="1748" fg:w="1"/><text x="72.6909%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.04%)</title><rect x="72.4824%" y="997" width="0.0414%" height="15" fill="rgb(246,199,43)" fg:x="1749" fg:w="1"/><text x="72.7324%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="72.4824%" y="981" width="0.0414%" height="15" fill="rgb(232,125,11)" fg:x="1749" fg:w="1"/><text x="72.7324%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1 samples, 0.04%)</title><rect x="72.4824%" y="965" width="0.0414%" height="15" fill="rgb(218,219,45)" fg:x="1749" fg:w="1"/><text x="72.7324%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="72.4824%" y="949" width="0.0414%" height="15" fill="rgb(216,102,54)" fg:x="1749" fg:w="1"/><text x="72.7324%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="72.4824%" y="933" width="0.0414%" height="15" fill="rgb(250,228,7)" fg:x="1749" fg:w="1"/><text x="72.7324%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="72.4824%" y="917" width="0.0414%" height="15" fill="rgb(226,125,25)" fg:x="1749" fg:w="1"/><text x="72.7324%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="72.4824%" y="901" width="0.0414%" height="15" fill="rgb(224,165,27)" fg:x="1749" fg:w="1"/><text x="72.7324%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="72.4824%" y="885" width="0.0414%" height="15" fill="rgb(233,86,3)" fg:x="1749" fg:w="1"/><text x="72.7324%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="72.4824%" y="869" width="0.0414%" height="15" fill="rgb(228,116,20)" fg:x="1749" fg:w="1"/><text x="72.7324%" y="879.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="72.4824%" y="853" width="0.0414%" height="15" fill="rgb(209,192,17)" fg:x="1749" fg:w="1"/><text x="72.7324%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="72.4824%" y="837" width="0.0414%" height="15" fill="rgb(224,88,34)" fg:x="1749" fg:w="1"/><text x="72.7324%" y="847.50"></text></g><g><title>nu_engine::eval::eval_expression (9 samples, 0.37%)</title><rect x="72.1923%" y="1013" width="0.3730%" height="15" fill="rgb(233,38,6)" fg:x="1742" fg:w="9"/><text x="72.4423%" y="1023.50"></text></g><g><title>nu_protocol::value::Value::as_string (1 samples, 0.04%)</title><rect x="72.5238%" y="997" width="0.0414%" height="15" fill="rgb(212,59,30)" fg:x="1750" fg:w="1"/><text x="72.7738%" y="1007.50"></text></g><g><title>&lt;alloc::string::String as alloc::string::ToString&gt;::to_string (1 samples, 0.04%)</title><rect x="72.5238%" y="981" width="0.0414%" height="15" fill="rgb(213,80,3)" fg:x="1750" fg:w="1"/><text x="72.7738%" y="991.50"></text></g><g><title>&lt;T as alloc::borrow::ToOwned&gt;::to_owned (1 samples, 0.04%)</title><rect x="72.5238%" y="965" width="0.0414%" height="15" fill="rgb(251,178,7)" fg:x="1750" fg:w="1"/><text x="72.7738%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="72.5238%" y="949" width="0.0414%" height="15" fill="rgb(213,154,26)" fg:x="1750" fg:w="1"/><text x="72.7738%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="72.5238%" y="933" width="0.0414%" height="15" fill="rgb(238,165,49)" fg:x="1750" fg:w="1"/><text x="72.7738%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="72.5238%" y="917" width="0.0414%" height="15" fill="rgb(248,91,46)" fg:x="1750" fg:w="1"/><text x="72.7738%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="72.5238%" y="901" width="0.0414%" height="15" fill="rgb(244,21,52)" fg:x="1750" fg:w="1"/><text x="72.7738%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="72.5238%" y="885" width="0.0414%" height="15" fill="rgb(247,122,20)" fg:x="1750" fg:w="1"/><text x="72.7738%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="72.5238%" y="869" width="0.0414%" height="15" fill="rgb(218,27,9)" fg:x="1750" fg:w="1"/><text x="72.7738%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="72.5238%" y="853" width="0.0414%" height="15" fill="rgb(246,7,6)" fg:x="1750" fg:w="1"/><text x="72.7738%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="72.5238%" y="837" width="0.0414%" height="15" fill="rgb(227,135,54)" fg:x="1750" fg:w="1"/><text x="72.7738%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="72.5238%" y="821" width="0.0414%" height="15" fill="rgb(247,14,11)" fg:x="1750" fg:w="1"/><text x="72.7738%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="72.5238%" y="805" width="0.0414%" height="15" fill="rgb(206,149,34)" fg:x="1750" fg:w="1"/><text x="72.7738%" y="815.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="72.5238%" y="789" width="0.0414%" height="15" fill="rgb(227,228,4)" fg:x="1750" fg:w="1"/><text x="72.7738%" y="799.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="72.5238%" y="773" width="0.0414%" height="15" fill="rgb(238,218,28)" fg:x="1750" fg:w="1"/><text x="72.7738%" y="783.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="72.5238%" y="757" width="0.0414%" height="15" fill="rgb(252,86,40)" fg:x="1750" fg:w="1"/><text x="72.7738%" y="767.50"></text></g><g><title>nu_parser::lex::is_item_terminator (1 samples, 0.04%)</title><rect x="72.5653%" y="1013" width="0.0414%" height="15" fill="rgb(251,225,11)" fg:x="1751" fg:w="1"/><text x="72.8153%" y="1023.50"></text></g><g><title>nu_parser::lex::is_special_item (1 samples, 0.04%)</title><rect x="72.6067%" y="1013" width="0.0414%" height="15" fill="rgb(206,46,49)" fg:x="1752" fg:w="1"/><text x="72.8567%" y="1023.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="72.6482%" y="933" width="0.0414%" height="15" fill="rgb(245,128,24)" fg:x="1753" fg:w="1"/><text x="72.8982%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="72.6482%" y="917" width="0.0414%" height="15" fill="rgb(219,177,34)" fg:x="1753" fg:w="1"/><text x="72.8982%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="72.6482%" y="901" width="0.0414%" height="15" fill="rgb(218,60,48)" fg:x="1753" fg:w="1"/><text x="72.8982%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="72.6482%" y="885" width="0.0414%" height="15" fill="rgb(221,11,5)" fg:x="1753" fg:w="1"/><text x="72.8982%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="72.6482%" y="869" width="0.0414%" height="15" fill="rgb(220,148,13)" fg:x="1753" fg:w="1"/><text x="72.8982%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.04%)</title><rect x="72.6896%" y="917" width="0.0414%" height="15" fill="rgb(210,16,3)" fg:x="1754" fg:w="1"/><text x="72.9396%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (3 samples, 0.12%)</title><rect x="72.6482%" y="949" width="0.1243%" height="15" fill="rgb(236,80,2)" fg:x="1753" fg:w="3"/><text x="72.8982%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.08%)</title><rect x="72.6896%" y="933" width="0.0829%" height="15" fill="rgb(239,129,19)" fg:x="1754" fg:w="2"/><text x="72.9396%" y="943.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (1 samples, 0.04%)</title><rect x="72.7310%" y="917" width="0.0414%" height="15" fill="rgb(220,106,35)" fg:x="1755" fg:w="1"/><text x="72.9810%" y="927.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (1 samples, 0.04%)</title><rect x="72.7310%" y="901" width="0.0414%" height="15" fill="rgb(252,139,45)" fg:x="1755" fg:w="1"/><text x="72.9810%" y="911.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="72.7310%" y="885" width="0.0414%" height="15" fill="rgb(229,8,36)" fg:x="1755" fg:w="1"/><text x="72.9810%" y="895.50"></text></g><g><title>core::slice::raw::debug_check_data_len (1 samples, 0.04%)</title><rect x="72.7310%" y="869" width="0.0414%" height="15" fill="rgb(230,126,33)" fg:x="1755" fg:w="1"/><text x="72.9810%" y="879.50"></text></g><g><title>nu_parser::parser::discover_captures_in_expr (4 samples, 0.17%)</title><rect x="72.6482%" y="1013" width="0.1658%" height="15" fill="rgb(239,140,21)" fg:x="1753" fg:w="4"/><text x="72.8982%" y="1023.50"></text></g><g><title>nu_parser::parser::discover_captures_in_expr (4 samples, 0.17%)</title><rect x="72.6482%" y="997" width="0.1658%" height="15" fill="rgb(254,104,9)" fg:x="1753" fg:w="4"/><text x="72.8982%" y="1007.50"></text></g><g><title>nu_parser::parser::discover_captures_in_expr (4 samples, 0.17%)</title><rect x="72.6482%" y="981" width="0.1658%" height="15" fill="rgb(239,52,14)" fg:x="1753" fg:w="4"/><text x="72.8982%" y="991.50"></text></g><g><title>nu_parser::parser::discover_captures_in_expr (4 samples, 0.17%)</title><rect x="72.6482%" y="965" width="0.1658%" height="15" fill="rgb(208,227,44)" fg:x="1753" fg:w="4"/><text x="72.8982%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (1 samples, 0.04%)</title><rect x="72.7725%" y="949" width="0.0414%" height="15" fill="rgb(246,18,19)" fg:x="1756" fg:w="1"/><text x="73.0225%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="72.7725%" y="933" width="0.0414%" height="15" fill="rgb(235,228,25)" fg:x="1756" fg:w="1"/><text x="73.0225%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="72.7725%" y="917" width="0.0414%" height="15" fill="rgb(240,156,20)" fg:x="1756" fg:w="1"/><text x="73.0225%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="72.7725%" y="901" width="0.0414%" height="15" fill="rgb(224,8,20)" fg:x="1756" fg:w="1"/><text x="73.0225%" y="911.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="72.7725%" y="885" width="0.0414%" height="15" fill="rgb(214,12,52)" fg:x="1756" fg:w="1"/><text x="73.0225%" y="895.50"></text></g><g><title>nu_parser::parser::garbage (1 samples, 0.04%)</title><rect x="72.8139%" y="1013" width="0.0414%" height="15" fill="rgb(211,220,47)" fg:x="1757" fg:w="1"/><text x="73.0639%" y="1023.50"></text></g><g><title>nu_parser::parser::parse_block::{{closure}} (1 samples, 0.04%)</title><rect x="72.8554%" y="1013" width="0.0414%" height="15" fill="rgb(250,173,5)" fg:x="1758" fg:w="1"/><text x="73.1054%" y="1023.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.04%)</title><rect x="72.8554%" y="997" width="0.0414%" height="15" fill="rgb(250,125,52)" fg:x="1758" fg:w="1"/><text x="73.1054%" y="1007.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.04%)</title><rect x="72.8554%" y="981" width="0.0414%" height="15" fill="rgb(209,133,18)" fg:x="1758" fg:w="1"/><text x="73.1054%" y="991.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.04%)</title><rect x="72.8554%" y="965" width="0.0414%" height="15" fill="rgb(216,173,22)" fg:x="1758" fg:w="1"/><text x="73.1054%" y="975.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.04%)</title><rect x="72.8554%" y="949" width="0.0414%" height="15" fill="rgb(205,3,22)" fg:x="1758" fg:w="1"/><text x="73.1054%" y="959.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.04%)</title><rect x="72.8554%" y="933" width="0.0414%" height="15" fill="rgb(248,22,20)" fg:x="1758" fg:w="1"/><text x="73.1054%" y="943.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.04%)</title><rect x="72.8554%" y="917" width="0.0414%" height="15" fill="rgb(233,6,29)" fg:x="1758" fg:w="1"/><text x="73.1054%" y="927.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.04%)</title><rect x="72.8554%" y="901" width="0.0414%" height="15" fill="rgb(240,22,54)" fg:x="1758" fg:w="1"/><text x="73.1054%" y="911.50"></text></g><g><title>nu_parser::parser::parse_datetime (1 samples, 0.04%)</title><rect x="72.8968%" y="1013" width="0.0414%" height="15" fill="rgb(231,133,32)" fg:x="1759" fg:w="1"/><text x="73.1468%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="72.9383%" y="917" width="0.0414%" height="15" fill="rgb(248,193,4)" fg:x="1760" fg:w="1"/><text x="73.1883%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="72.9383%" y="901" width="0.0414%" height="15" fill="rgb(211,178,46)" fg:x="1760" fg:w="1"/><text x="73.1883%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="72.9383%" y="885" width="0.0414%" height="15" fill="rgb(224,5,42)" fg:x="1760" fg:w="1"/><text x="73.1883%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (2 samples, 0.08%)</title><rect x="72.9383%" y="933" width="0.0829%" height="15" fill="rgb(239,176,25)" fg:x="1760" fg:w="2"/><text x="73.1883%" y="943.50"></text></g><g><title>core::slice::memchr::memchr::{{closure}} (1 samples, 0.04%)</title><rect x="72.9797%" y="917" width="0.0414%" height="15" fill="rgb(245,187,50)" fg:x="1761" fg:w="1"/><text x="73.2297%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (3 samples, 0.12%)</title><rect x="72.9383%" y="981" width="0.1243%" height="15" fill="rgb(248,24,15)" fg:x="1760" fg:w="3"/><text x="73.1883%" y="991.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (3 samples, 0.12%)</title><rect x="72.9383%" y="965" width="0.1243%" height="15" fill="rgb(205,166,13)" fg:x="1760" fg:w="3"/><text x="73.1883%" y="975.50"></text></g><g><title>core::slice::memchr::memchr (3 samples, 0.12%)</title><rect x="72.9383%" y="949" width="0.1243%" height="15" fill="rgb(208,114,23)" fg:x="1760" fg:w="3"/><text x="73.1883%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="73.0211%" y="933" width="0.0414%" height="15" fill="rgb(239,127,18)" fg:x="1762" fg:w="1"/><text x="73.2711%" y="943.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="73.0211%" y="917" width="0.0414%" height="15" fill="rgb(219,154,28)" fg:x="1762" fg:w="1"/><text x="73.2711%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="73.0211%" y="901" width="0.0414%" height="15" fill="rgb(225,157,23)" fg:x="1762" fg:w="1"/><text x="73.2711%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.08%)</title><rect x="74.1815%" y="949" width="0.0829%" height="15" fill="rgb(219,8,6)" fg:x="1790" fg:w="2"/><text x="74.4315%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="74.2230%" y="933" width="0.0414%" height="15" fill="rgb(212,47,6)" fg:x="1791" fg:w="1"/><text x="74.4730%" y="943.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="74.2644%" y="933" width="0.0414%" height="15" fill="rgb(224,190,4)" fg:x="1792" fg:w="1"/><text x="74.5144%" y="943.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="74.2644%" y="917" width="0.0414%" height="15" fill="rgb(239,183,29)" fg:x="1792" fg:w="1"/><text x="74.5144%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.17%)</title><rect x="74.1815%" y="965" width="0.1658%" height="15" fill="rgb(213,57,7)" fg:x="1790" fg:w="4"/><text x="74.4315%" y="975.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.08%)</title><rect x="74.2644%" y="949" width="0.0829%" height="15" fill="rgb(216,148,1)" fg:x="1792" fg:w="2"/><text x="74.5144%" y="959.50"></text></g><g><title>core::slice::raw::debug_check_data_len (1 samples, 0.04%)</title><rect x="74.3058%" y="933" width="0.0414%" height="15" fill="rgb(236,182,29)" fg:x="1793" fg:w="1"/><text x="74.5558%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.04%)</title><rect x="74.3473%" y="965" width="0.0414%" height="15" fill="rgb(244,120,48)" fg:x="1794" fg:w="1"/><text x="74.5973%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="74.3473%" y="949" width="0.0414%" height="15" fill="rgb(206,71,34)" fg:x="1794" fg:w="1"/><text x="74.5973%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="74.3473%" y="933" width="0.0414%" height="15" fill="rgb(242,32,6)" fg:x="1794" fg:w="1"/><text x="74.5973%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (12 samples, 0.50%)</title><rect x="74.3887%" y="965" width="0.4973%" height="15" fill="rgb(241,35,3)" fg:x="1795" fg:w="12"/><text x="74.6387%" y="975.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (11 samples, 0.46%)</title><rect x="74.4302%" y="949" width="0.4559%" height="15" fill="rgb(222,62,19)" fg:x="1796" fg:w="11"/><text x="74.6802%" y="959.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.25%)</title><rect x="74.6374%" y="933" width="0.2487%" height="15" fill="rgb(223,110,41)" fg:x="1801" fg:w="6"/><text x="74.8874%" y="943.50"></text></g><g><title>nu_parser::lex::lex (49 samples, 2.03%)</title><rect x="72.9383%" y="997" width="2.0307%" height="15" fill="rgb(208,224,4)" fg:x="1760" fg:w="49"/><text x="73.1883%" y="1007.50">n..</text></g><g><title>nu_parser::lex::lex_item (46 samples, 1.91%)</title><rect x="73.0626%" y="981" width="1.9063%" height="15" fill="rgb(241,137,19)" fg:x="1763" fg:w="46"/><text x="73.3126%" y="991.50">n..</text></g><g><title>nu_parser::lex::is_special_item (2 samples, 0.08%)</title><rect x="74.8860%" y="965" width="0.0829%" height="15" fill="rgb(244,24,17)" fg:x="1807" fg:w="2"/><text x="75.1360%" y="975.50"></text></g><g><title>nu_parser::parser::parse_cell_path (1 samples, 0.04%)</title><rect x="74.9689%" y="997" width="0.0414%" height="15" fill="rgb(245,178,49)" fg:x="1809" fg:w="1"/><text x="75.2189%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::peekable::Peekable&lt;alloc::vec::into_iter::IntoIter&lt;nu_parser::lex::Token&gt;&gt;&gt; (1 samples, 0.04%)</title><rect x="74.9689%" y="981" width="0.0414%" height="15" fill="rgb(219,160,38)" fg:x="1809" fg:w="1"/><text x="75.2189%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;nu_parser::lex::Token&gt;&gt; (1 samples, 0.04%)</title><rect x="74.9689%" y="965" width="0.0414%" height="15" fill="rgb(228,137,14)" fg:x="1809" fg:w="1"/><text x="75.2189%" y="975.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="74.9689%" y="949" width="0.0414%" height="15" fill="rgb(237,134,11)" fg:x="1809" fg:w="1"/><text x="75.2189%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;nu_parser::lex::Token,alloc::alloc::Global&gt;&gt; (1 samples, 0.04%)</title><rect x="74.9689%" y="933" width="0.0414%" height="15" fill="rgb(211,126,44)" fg:x="1809" fg:w="1"/><text x="75.2189%" y="943.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="74.9689%" y="917" width="0.0414%" height="15" fill="rgb(226,171,33)" fg:x="1809" fg:w="1"/><text x="75.2189%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;nu_parser::lex::Token&gt;&gt; (1 samples, 0.04%)</title><rect x="74.9689%" y="901" width="0.0414%" height="15" fill="rgb(253,99,13)" fg:x="1809" fg:w="1"/><text x="75.2189%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="74.9689%" y="885" width="0.0414%" height="15" fill="rgb(244,48,7)" fg:x="1809" fg:w="1"/><text x="75.2189%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="74.9689%" y="869" width="0.0414%" height="15" fill="rgb(244,217,54)" fg:x="1809" fg:w="1"/><text x="75.2189%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="75.0518%" y="981" width="0.0414%" height="15" fill="rgb(224,15,18)" fg:x="1811" fg:w="1"/><text x="75.3018%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="75.0518%" y="965" width="0.0414%" height="15" fill="rgb(244,99,12)" fg:x="1811" fg:w="1"/><text x="75.3018%" y="975.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="75.0518%" y="949" width="0.0414%" height="15" fill="rgb(233,226,8)" fg:x="1811" fg:w="1"/><text x="75.3018%" y="959.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="75.0518%" y="933" width="0.0414%" height="15" fill="rgb(229,211,3)" fg:x="1811" fg:w="1"/><text x="75.3018%" y="943.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="75.0932%" y="981" width="0.0414%" height="15" fill="rgb(216,140,21)" fg:x="1812" fg:w="1"/><text x="75.3432%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_parser::lex::Token&gt;&gt; (1 samples, 0.04%)</title><rect x="75.1347%" y="981" width="0.0414%" height="15" fill="rgb(234,122,30)" fg:x="1813" fg:w="1"/><text x="75.3847%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;nu_parser::lex::Token&gt;&gt; (1 samples, 0.04%)</title><rect x="75.1347%" y="965" width="0.0414%" height="15" fill="rgb(236,25,46)" fg:x="1813" fg:w="1"/><text x="75.3847%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="75.1347%" y="949" width="0.0414%" height="15" fill="rgb(217,52,54)" fg:x="1813" fg:w="1"/><text x="75.3847%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="75.1347%" y="933" width="0.0414%" height="15" fill="rgb(222,29,26)" fg:x="1813" fg:w="1"/><text x="75.3847%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="75.1347%" y="917" width="0.0414%" height="15" fill="rgb(216,177,29)" fg:x="1813" fg:w="1"/><text x="75.3847%" y="927.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="75.1347%" y="901" width="0.0414%" height="15" fill="rgb(247,136,51)" fg:x="1813" fg:w="1"/><text x="75.3847%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="75.1347%" y="885" width="0.0414%" height="15" fill="rgb(231,47,47)" fg:x="1813" fg:w="1"/><text x="75.3847%" y="895.50"></text></g><g><title>nu_parser::lex::lex (1 samples, 0.04%)</title><rect x="75.1761%" y="981" width="0.0414%" height="15" fill="rgb(211,192,36)" fg:x="1814" fg:w="1"/><text x="75.4261%" y="991.50"></text></g><g><title>nu_parser::parser::parse_record (7 samples, 0.29%)</title><rect x="75.0104%" y="997" width="0.2901%" height="15" fill="rgb(229,156,32)" fg:x="1810" fg:w="7"/><text x="75.2604%" y="1007.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (2 samples, 0.08%)</title><rect x="75.2176%" y="981" width="0.0829%" height="15" fill="rgb(248,213,20)" fg:x="1815" fg:w="2"/><text x="75.4676%" y="991.50"></text></g><g><title>nu_protocol::engine::engine_state::EngineState::next_span_start (2 samples, 0.08%)</title><rect x="75.2176%" y="965" width="0.0829%" height="15" fill="rgb(217,64,7)" fg:x="1815" fg:w="2"/><text x="75.4676%" y="975.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="75.3005%" y="981" width="0.0414%" height="15" fill="rgb(232,142,8)" fg:x="1817" fg:w="1"/><text x="75.5505%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="75.3005%" y="965" width="0.0414%" height="15" fill="rgb(224,92,44)" fg:x="1817" fg:w="1"/><text x="75.5505%" y="975.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="75.3005%" y="949" width="0.0414%" height="15" fill="rgb(214,169,17)" fg:x="1817" fg:w="1"/><text x="75.5505%" y="959.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="75.3005%" y="933" width="0.0414%" height="15" fill="rgb(210,59,37)" fg:x="1817" fg:w="1"/><text x="75.5505%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="75.3419%" y="981" width="0.0414%" height="15" fill="rgb(214,116,48)" fg:x="1818" fg:w="1"/><text x="75.5919%" y="991.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="75.3419%" y="965" width="0.0414%" height="15" fill="rgb(244,191,6)" fg:x="1818" fg:w="1"/><text x="75.5919%" y="975.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="75.3419%" y="949" width="0.0414%" height="15" fill="rgb(241,50,52)" fg:x="1818" fg:w="1"/><text x="75.5919%" y="959.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="75.3419%" y="933" width="0.0414%" height="15" fill="rgb(236,75,39)" fg:x="1818" fg:w="1"/><text x="75.5919%" y="943.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (60 samples, 2.49%)</title><rect x="72.9383%" y="1013" width="2.4865%" height="15" fill="rgb(236,99,0)" fg:x="1760" fg:w="60"/><text x="73.1883%" y="1023.50">nu..</text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (3 samples, 0.12%)</title><rect x="75.3005%" y="997" width="0.1243%" height="15" fill="rgb(207,202,15)" fg:x="1817" fg:w="3"/><text x="75.5505%" y="1007.50"></text></g><g><title>nu_protocol::engine::engine_state::EngineState::next_span_start (1 samples, 0.04%)</title><rect x="75.3833%" y="981" width="0.0414%" height="15" fill="rgb(233,207,14)" fg:x="1819" fg:w="1"/><text x="75.6333%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="75.3833%" y="965" width="0.0414%" height="15" fill="rgb(226,27,51)" fg:x="1819" fg:w="1"/><text x="75.6333%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="75.3833%" y="949" width="0.0414%" height="15" fill="rgb(206,104,42)" fg:x="1819" fg:w="1"/><text x="75.6333%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="75.3833%" y="933" width="0.0414%" height="15" fill="rgb(212,225,4)" fg:x="1819" fg:w="1"/><text x="75.6333%" y="943.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="75.3833%" y="917" width="0.0414%" height="15" fill="rgb(233,96,42)" fg:x="1819" fg:w="1"/><text x="75.6333%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="75.9635%" y="965" width="0.0414%" height="15" fill="rgb(229,21,32)" fg:x="1833" fg:w="1"/><text x="76.2135%" y="975.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="75.9635%" y="949" width="0.0414%" height="15" fill="rgb(226,216,24)" fg:x="1833" fg:w="1"/><text x="76.2135%" y="959.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="75.9635%" y="933" width="0.0414%" height="15" fill="rgb(221,163,17)" fg:x="1833" fg:w="1"/><text x="76.2135%" y="943.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="75.9635%" y="917" width="0.0414%" height="15" fill="rgb(216,216,42)" fg:x="1833" fg:w="1"/><text x="76.2135%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (7 samples, 0.29%)</title><rect x="76.0050%" y="965" width="0.2901%" height="15" fill="rgb(240,118,7)" fg:x="1834" fg:w="7"/><text x="76.2550%" y="975.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (4 samples, 0.17%)</title><rect x="76.1293%" y="949" width="0.1658%" height="15" fill="rgb(221,67,37)" fg:x="1837" fg:w="4"/><text x="76.3793%" y="959.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.12%)</title><rect x="76.1707%" y="933" width="0.1243%" height="15" fill="rgb(241,32,44)" fg:x="1838" fg:w="3"/><text x="76.4207%" y="943.50"></text></g><g><title>nu_parser::lex::is_item_terminator (1 samples, 0.04%)</title><rect x="76.2951%" y="965" width="0.0414%" height="15" fill="rgb(235,204,43)" fg:x="1841" fg:w="1"/><text x="76.5451%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.04%)</title><rect x="76.2951%" y="949" width="0.0414%" height="15" fill="rgb(213,116,10)" fg:x="1841" fg:w="1"/><text x="76.5451%" y="959.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.04%)</title><rect x="76.2951%" y="933" width="0.0414%" height="15" fill="rgb(239,15,48)" fg:x="1841" fg:w="1"/><text x="76.5451%" y="943.50"></text></g><g><title>nu_parser::parser::parse_list_expression (24 samples, 0.99%)</title><rect x="75.4248%" y="1013" width="0.9946%" height="15" fill="rgb(207,123,36)" fg:x="1820" fg:w="24"/><text x="75.6748%" y="1023.50"></text></g><g><title>nu_parser::lex::lex (24 samples, 0.99%)</title><rect x="75.4248%" y="997" width="0.9946%" height="15" fill="rgb(209,103,30)" fg:x="1820" fg:w="24"/><text x="75.6748%" y="1007.50"></text></g><g><title>nu_parser::lex::lex_item (24 samples, 0.99%)</title><rect x="75.4248%" y="981" width="0.9946%" height="15" fill="rgb(238,100,19)" fg:x="1820" fg:w="24"/><text x="75.6748%" y="991.50"></text></g><g><title>nu_parser::lex::is_special_item (2 samples, 0.08%)</title><rect x="76.3365%" y="965" width="0.0829%" height="15" fill="rgb(244,30,14)" fg:x="1842" fg:w="2"/><text x="76.5865%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.04%)</title><rect x="76.3780%" y="949" width="0.0414%" height="15" fill="rgb(249,174,6)" fg:x="1843" fg:w="1"/><text x="76.6280%" y="959.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.04%)</title><rect x="76.3780%" y="933" width="0.0414%" height="15" fill="rgb(235,213,41)" fg:x="1843" fg:w="1"/><text x="76.6280%" y="943.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.04%)</title><rect x="76.3780%" y="917" width="0.0414%" height="15" fill="rgb(213,118,6)" fg:x="1843" fg:w="1"/><text x="76.6280%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.04%)</title><rect x="76.3780%" y="901" width="0.0414%" height="15" fill="rgb(235,44,51)" fg:x="1843" fg:w="1"/><text x="76.6280%" y="911.50"></text></g><g><title>nu_parser::parser::parse_multispan_value (1 samples, 0.04%)</title><rect x="76.4194%" y="1013" width="0.0414%" height="15" fill="rgb(217,9,53)" fg:x="1844" fg:w="1"/><text x="76.6694%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="76.6266%" y="821" width="0.0414%" height="15" fill="rgb(237,172,34)" fg:x="1849" fg:w="1"/><text x="76.8766%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="76.6266%" y="805" width="0.0414%" height="15" fill="rgb(206,206,11)" fg:x="1849" fg:w="1"/><text x="76.8766%" y="815.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="76.6680%" y="821" width="0.0414%" height="15" fill="rgb(214,149,29)" fg:x="1850" fg:w="1"/><text x="76.9180%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.04%)</title><rect x="76.6680%" y="805" width="0.0414%" height="15" fill="rgb(208,123,3)" fg:x="1850" fg:w="1"/><text x="76.9180%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.21%)</title><rect x="76.5437%" y="869" width="0.2072%" height="15" fill="rgb(229,126,4)" fg:x="1847" fg:w="5"/><text x="76.7937%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.21%)</title><rect x="76.5437%" y="853" width="0.2072%" height="15" fill="rgb(222,92,36)" fg:x="1847" fg:w="5"/><text x="76.7937%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.21%)</title><rect x="76.5437%" y="837" width="0.2072%" height="15" fill="rgb(216,39,41)" fg:x="1847" fg:w="5"/><text x="76.7937%" y="847.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="76.7095%" y="821" width="0.0414%" height="15" fill="rgb(253,127,28)" fg:x="1851" fg:w="1"/><text x="76.9595%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (7 samples, 0.29%)</title><rect x="76.5023%" y="981" width="0.2901%" height="15" fill="rgb(249,152,51)" fg:x="1846" fg:w="7"/><text x="76.7523%" y="991.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (7 samples, 0.29%)</title><rect x="76.5023%" y="965" width="0.2901%" height="15" fill="rgb(209,123,42)" fg:x="1846" fg:w="7"/><text x="76.7523%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (7 samples, 0.29%)</title><rect x="76.5023%" y="949" width="0.2901%" height="15" fill="rgb(241,118,22)" fg:x="1846" fg:w="7"/><text x="76.7523%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (7 samples, 0.29%)</title><rect x="76.5023%" y="933" width="0.2901%" height="15" fill="rgb(208,25,7)" fg:x="1846" fg:w="7"/><text x="76.7523%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.29%)</title><rect x="76.5023%" y="917" width="0.2901%" height="15" fill="rgb(243,144,39)" fg:x="1846" fg:w="7"/><text x="76.7523%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.25%)</title><rect x="76.5437%" y="901" width="0.2487%" height="15" fill="rgb(250,50,5)" fg:x="1847" fg:w="6"/><text x="76.7937%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.25%)</title><rect x="76.5437%" y="885" width="0.2487%" height="15" fill="rgb(207,67,11)" fg:x="1847" fg:w="6"/><text x="76.7937%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.04%)</title><rect x="76.7509%" y="869" width="0.0414%" height="15" fill="rgb(245,204,40)" fg:x="1852" fg:w="1"/><text x="77.0009%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="76.7509%" y="853" width="0.0414%" height="15" fill="rgb(238,228,24)" fg:x="1852" fg:w="1"/><text x="77.0009%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="76.7509%" y="837" width="0.0414%" height="15" fill="rgb(217,116,22)" fg:x="1852" fg:w="1"/><text x="77.0009%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.08%)</title><rect x="76.7924%" y="901" width="0.0829%" height="15" fill="rgb(234,98,12)" fg:x="1853" fg:w="2"/><text x="77.0424%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="76.7924%" y="885" width="0.0829%" height="15" fill="rgb(242,170,50)" fg:x="1853" fg:w="2"/><text x="77.0424%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.08%)</title><rect x="76.7924%" y="869" width="0.0829%" height="15" fill="rgb(235,7,5)" fg:x="1853" fg:w="2"/><text x="77.0424%" y="879.50"></text></g><g><title>core::alloc::layout::Layout::size (1 samples, 0.04%)</title><rect x="76.9167%" y="805" width="0.0414%" height="15" fill="rgb(241,114,28)" fg:x="1856" fg:w="1"/><text x="77.1667%" y="815.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.08%)</title><rect x="76.9167%" y="821" width="0.0829%" height="15" fill="rgb(246,112,42)" fg:x="1856" fg:w="2"/><text x="77.1667%" y="831.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="76.9581%" y="805" width="0.0414%" height="15" fill="rgb(248,228,14)" fg:x="1857" fg:w="1"/><text x="77.2081%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="76.9996%" y="821" width="0.0414%" height="15" fill="rgb(208,133,18)" fg:x="1858" fg:w="1"/><text x="77.2496%" y="831.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="76.9996%" y="805" width="0.0414%" height="15" fill="rgb(207,35,49)" fg:x="1858" fg:w="1"/><text x="77.2496%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.17%)</title><rect x="76.9167%" y="853" width="0.1658%" height="15" fill="rgb(205,68,36)" fg:x="1856" fg:w="4"/><text x="77.1667%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.17%)</title><rect x="76.9167%" y="837" width="0.1658%" height="15" fill="rgb(245,62,40)" fg:x="1856" fg:w="4"/><text x="77.1667%" y="847.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="77.0410%" y="821" width="0.0414%" height="15" fill="rgb(228,27,24)" fg:x="1859" fg:w="1"/><text x="77.2910%" y="831.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="77.0410%" y="805" width="0.0414%" height="15" fill="rgb(253,19,12)" fg:x="1859" fg:w="1"/><text x="77.2910%" y="815.50"></text></g><g><title>alloc::raw_vec::alloc_guard (1 samples, 0.04%)</title><rect x="77.0825%" y="853" width="0.0414%" height="15" fill="rgb(232,28,20)" fg:x="1860" fg:w="1"/><text x="77.3325%" y="863.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="77.1239%" y="853" width="0.0414%" height="15" fill="rgb(218,35,51)" fg:x="1861" fg:w="1"/><text x="77.3739%" y="863.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="77.1239%" y="837" width="0.0414%" height="15" fill="rgb(212,90,40)" fg:x="1861" fg:w="1"/><text x="77.3739%" y="847.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.04%)</title><rect x="77.1239%" y="821" width="0.0414%" height="15" fill="rgb(220,172,12)" fg:x="1861" fg:w="1"/><text x="77.3739%" y="831.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (17 samples, 0.70%)</title><rect x="76.5023%" y="997" width="0.7045%" height="15" fill="rgb(226,159,20)" fg:x="1846" fg:w="17"/><text x="76.7523%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (10 samples, 0.41%)</title><rect x="76.7924%" y="981" width="0.4144%" height="15" fill="rgb(234,205,16)" fg:x="1853" fg:w="10"/><text x="77.0424%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (10 samples, 0.41%)</title><rect x="76.7924%" y="965" width="0.4144%" height="15" fill="rgb(207,9,39)" fg:x="1853" fg:w="10"/><text x="77.0424%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.41%)</title><rect x="76.7924%" y="949" width="0.4144%" height="15" fill="rgb(249,143,15)" fg:x="1853" fg:w="10"/><text x="77.0424%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.41%)</title><rect x="76.7924%" y="933" width="0.4144%" height="15" fill="rgb(253,133,29)" fg:x="1853" fg:w="10"/><text x="77.0424%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.41%)</title><rect x="76.7924%" y="917" width="0.4144%" height="15" fill="rgb(221,187,0)" fg:x="1853" fg:w="10"/><text x="77.0424%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.33%)</title><rect x="76.8753%" y="901" width="0.3315%" height="15" fill="rgb(205,204,26)" fg:x="1855" fg:w="8"/><text x="77.1253%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.33%)</title><rect x="76.8753%" y="885" width="0.3315%" height="15" fill="rgb(224,68,54)" fg:x="1855" fg:w="8"/><text x="77.1253%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (8 samples, 0.33%)</title><rect x="76.8753%" y="869" width="0.3315%" height="15" fill="rgb(209,67,4)" fg:x="1855" fg:w="8"/><text x="77.1253%" y="879.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="77.1654%" y="853" width="0.0414%" height="15" fill="rgb(228,229,18)" fg:x="1862" fg:w="1"/><text x="77.4154%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="77.2068%" y="997" width="0.0829%" height="15" fill="rgb(231,89,13)" fg:x="1863" fg:w="2"/><text x="77.4568%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="77.2068%" y="981" width="0.0829%" height="15" fill="rgb(210,182,18)" fg:x="1863" fg:w="2"/><text x="77.4568%" y="991.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="77.2482%" y="965" width="0.0414%" height="15" fill="rgb(240,105,2)" fg:x="1864" fg:w="1"/><text x="77.4982%" y="975.50"></text></g><g><title>core::slice::raw::debug_check_data_len (1 samples, 0.04%)</title><rect x="77.2482%" y="949" width="0.0414%" height="15" fill="rgb(207,170,50)" fg:x="1864" fg:w="1"/><text x="77.4982%" y="959.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="77.2897%" y="997" width="0.0829%" height="15" fill="rgb(232,133,24)" fg:x="1865" fg:w="2"/><text x="77.5397%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="77.3726%" y="981" width="0.0414%" height="15" fill="rgb(235,166,27)" fg:x="1867" fg:w="1"/><text x="77.6226%" y="991.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="77.3726%" y="965" width="0.0414%" height="15" fill="rgb(209,19,13)" fg:x="1867" fg:w="1"/><text x="77.6226%" y="975.50"></text></g><g><title>alloc::string::String::from_utf8 (2 samples, 0.08%)</title><rect x="77.3726%" y="997" width="0.0829%" height="15" fill="rgb(226,79,39)" fg:x="1867" fg:w="2"/><text x="77.6226%" y="1007.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.04%)</title><rect x="77.4140%" y="981" width="0.0414%" height="15" fill="rgb(222,163,10)" fg:x="1868" fg:w="1"/><text x="77.6640%" y="991.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.04%)</title><rect x="77.4140%" y="965" width="0.0414%" height="15" fill="rgb(214,44,19)" fg:x="1868" fg:w="1"/><text x="77.6640%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (5 samples, 0.21%)</title><rect x="77.6212%" y="933" width="0.2072%" height="15" fill="rgb(210,217,13)" fg:x="1873" fg:w="5"/><text x="77.8712%" y="943.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (5 samples, 0.21%)</title><rect x="77.6212%" y="917" width="0.2072%" height="15" fill="rgb(237,61,54)" fg:x="1873" fg:w="5"/><text x="77.8712%" y="927.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.12%)</title><rect x="77.7041%" y="901" width="0.1243%" height="15" fill="rgb(226,184,24)" fg:x="1875" fg:w="3"/><text x="77.9541%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="77.7870%" y="885" width="0.0414%" height="15" fill="rgb(223,226,4)" fg:x="1877" fg:w="1"/><text x="78.0370%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="77.7870%" y="869" width="0.0414%" height="15" fill="rgb(210,26,41)" fg:x="1877" fg:w="1"/><text x="78.0370%" y="879.50"></text></g><g><title>core::str::&lt;impl str&gt;::contains (10 samples, 0.41%)</title><rect x="77.4554%" y="997" width="0.4144%" height="15" fill="rgb(220,221,6)" fg:x="1869" fg:w="10"/><text x="77.7054%" y="1007.50"></text></g><g><title>core::str::pattern::Pattern::is_contained_in (10 samples, 0.41%)</title><rect x="77.4554%" y="981" width="0.4144%" height="15" fill="rgb(225,89,49)" fg:x="1869" fg:w="10"/><text x="77.7054%" y="991.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (10 samples, 0.41%)</title><rect x="77.4554%" y="965" width="0.4144%" height="15" fill="rgb(218,70,45)" fg:x="1869" fg:w="10"/><text x="77.7054%" y="975.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (10 samples, 0.41%)</title><rect x="77.4554%" y="949" width="0.4144%" height="15" fill="rgb(238,166,21)" fg:x="1869" fg:w="10"/><text x="77.7054%" y="959.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (1 samples, 0.04%)</title><rect x="77.8284%" y="933" width="0.0414%" height="15" fill="rgb(224,141,44)" fg:x="1878" fg:w="1"/><text x="78.0784%" y="943.50"></text></g><g><title>log::max_level (1 samples, 0.04%)</title><rect x="77.8699%" y="997" width="0.0414%" height="15" fill="rgb(230,12,49)" fg:x="1879" fg:w="1"/><text x="78.1199%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.04%)</title><rect x="77.8699%" y="981" width="0.0414%" height="15" fill="rgb(212,174,12)" fg:x="1879" fg:w="1"/><text x="78.1199%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="77.8699%" y="965" width="0.0414%" height="15" fill="rgb(246,67,9)" fg:x="1879" fg:w="1"/><text x="78.1199%" y="975.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="77.9528%" y="981" width="0.0414%" height="15" fill="rgb(239,35,23)" fg:x="1881" fg:w="1"/><text x="78.2028%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="77.9528%" y="965" width="0.0414%" height="15" fill="rgb(211,167,0)" fg:x="1881" fg:w="1"/><text x="78.2028%" y="975.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="77.9528%" y="949" width="0.0414%" height="15" fill="rgb(225,119,45)" fg:x="1881" fg:w="1"/><text x="78.2028%" y="959.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="77.9528%" y="933" width="0.0414%" height="15" fill="rgb(210,162,6)" fg:x="1881" fg:w="1"/><text x="78.2028%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.04%)</title><rect x="77.9942%" y="981" width="0.0414%" height="15" fill="rgb(208,118,35)" fg:x="1882" fg:w="1"/><text x="78.2442%" y="991.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="77.9942%" y="965" width="0.0414%" height="15" fill="rgb(239,4,53)" fg:x="1882" fg:w="1"/><text x="78.2442%" y="975.50"></text></g><g><title>nu_parser::parser::parse_range (39 samples, 1.62%)</title><rect x="76.4608%" y="1013" width="1.6162%" height="15" fill="rgb(213,130,21)" fg:x="1845" fg:w="39"/><text x="76.7108%" y="1023.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (4 samples, 0.17%)</title><rect x="77.9113%" y="997" width="0.1658%" height="15" fill="rgb(235,148,0)" fg:x="1880" fg:w="4"/><text x="78.1613%" y="1007.50"></text></g><g><title>nu_protocol::engine::engine_state::EngineState::next_span_start (1 samples, 0.04%)</title><rect x="78.0356%" y="981" width="0.0414%" height="15" fill="rgb(244,224,18)" fg:x="1883" fg:w="1"/><text x="78.2856%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="78.0356%" y="965" width="0.0414%" height="15" fill="rgb(211,214,4)" fg:x="1883" fg:w="1"/><text x="78.2856%" y="975.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="78.0356%" y="949" width="0.0414%" height="15" fill="rgb(206,119,25)" fg:x="1883" fg:w="1"/><text x="78.2856%" y="959.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="78.0356%" y="933" width="0.0414%" height="15" fill="rgb(243,93,47)" fg:x="1883" fg:w="1"/><text x="78.2856%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="78.0771%" y="981" width="0.0414%" height="15" fill="rgb(224,194,6)" fg:x="1884" fg:w="1"/><text x="78.3271%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="78.0771%" y="965" width="0.0414%" height="15" fill="rgb(243,229,6)" fg:x="1884" fg:w="1"/><text x="78.3271%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="78.0771%" y="949" width="0.0414%" height="15" fill="rgb(207,23,50)" fg:x="1884" fg:w="1"/><text x="78.3271%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="78.0771%" y="933" width="0.0414%" height="15" fill="rgb(253,192,32)" fg:x="1884" fg:w="1"/><text x="78.3271%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.04%)</title><rect x="78.0771%" y="917" width="0.0414%" height="15" fill="rgb(213,21,6)" fg:x="1884" fg:w="1"/><text x="78.3271%" y="927.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.04%)</title><rect x="78.0771%" y="901" width="0.0414%" height="15" fill="rgb(243,151,13)" fg:x="1884" fg:w="1"/><text x="78.3271%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="78.0771%" y="885" width="0.0414%" height="15" fill="rgb(233,165,41)" fg:x="1884" fg:w="1"/><text x="78.3271%" y="895.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.04%)</title><rect x="78.0771%" y="869" width="0.0414%" height="15" fill="rgb(246,176,45)" fg:x="1884" fg:w="1"/><text x="78.3271%" y="879.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (5 samples, 0.21%)</title><rect x="78.1185%" y="981" width="0.2072%" height="15" fill="rgb(217,170,52)" fg:x="1885" fg:w="5"/><text x="78.3685%" y="991.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (5 samples, 0.21%)</title><rect x="78.1185%" y="965" width="0.2072%" height="15" fill="rgb(214,203,54)" fg:x="1885" fg:w="5"/><text x="78.3685%" y="975.50"></text></g><g><title>core::slice::memchr::memchr (5 samples, 0.21%)</title><rect x="78.1185%" y="949" width="0.2072%" height="15" fill="rgb(248,215,49)" fg:x="1885" fg:w="5"/><text x="78.3685%" y="959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (4 samples, 0.17%)</title><rect x="78.1600%" y="933" width="0.1658%" height="15" fill="rgb(208,46,10)" fg:x="1886" fg:w="4"/><text x="78.4100%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="78.2014%" y="917" width="0.1243%" height="15" fill="rgb(254,5,31)" fg:x="1887" fg:w="3"/><text x="78.4514%" y="927.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.08%)</title><rect x="78.2429%" y="901" width="0.0829%" height="15" fill="rgb(222,104,33)" fg:x="1888" fg:w="2"/><text x="78.4929%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="78.2843%" y="885" width="0.0414%" height="15" fill="rgb(248,49,16)" fg:x="1889" fg:w="1"/><text x="78.5343%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.04%)</title><rect x="78.3257%" y="981" width="0.0414%" height="15" fill="rgb(232,198,41)" fg:x="1890" fg:w="1"/><text x="78.5757%" y="991.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.04%)</title><rect x="78.3257%" y="965" width="0.0414%" height="15" fill="rgb(214,125,3)" fg:x="1890" fg:w="1"/><text x="78.5757%" y="975.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="78.3257%" y="949" width="0.0414%" height="15" fill="rgb(229,220,28)" fg:x="1890" fg:w="1"/><text x="78.5757%" y="959.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="78.3257%" y="933" width="0.0414%" height="15" fill="rgb(222,64,37)" fg:x="1890" fg:w="1"/><text x="78.5757%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="78.3257%" y="917" width="0.0414%" height="15" fill="rgb(249,184,13)" fg:x="1890" fg:w="1"/><text x="78.5757%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="78.9059%" y="965" width="0.0829%" height="15" fill="rgb(252,176,6)" fg:x="1904" fg:w="2"/><text x="79.1559%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.08%)</title><rect x="78.9059%" y="949" width="0.0829%" height="15" fill="rgb(228,153,7)" fg:x="1904" fg:w="2"/><text x="79.1559%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="78.9059%" y="933" width="0.0829%" height="15" fill="rgb(242,193,5)" fg:x="1904" fg:w="2"/><text x="79.1559%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="78.9474%" y="917" width="0.0414%" height="15" fill="rgb(232,140,9)" fg:x="1905" fg:w="1"/><text x="79.1974%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (9 samples, 0.37%)</title><rect x="78.9888%" y="965" width="0.3730%" height="15" fill="rgb(213,222,16)" fg:x="1906" fg:w="9"/><text x="79.2388%" y="975.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (3 samples, 0.12%)</title><rect x="79.2375%" y="949" width="0.1243%" height="15" fill="rgb(222,75,50)" fg:x="1912" fg:w="3"/><text x="79.4875%" y="959.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="79.2789%" y="933" width="0.0829%" height="15" fill="rgb(205,180,2)" fg:x="1913" fg:w="2"/><text x="79.5289%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="79.3203%" y="917" width="0.0414%" height="15" fill="rgb(216,34,7)" fg:x="1914" fg:w="1"/><text x="79.5703%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="79.3203%" y="901" width="0.0414%" height="15" fill="rgb(253,16,32)" fg:x="1914" fg:w="1"/><text x="79.5703%" y="911.50"></text></g><g><title>nu_parser::lex::is_item_terminator (3 samples, 0.12%)</title><rect x="79.3618%" y="965" width="0.1243%" height="15" fill="rgb(208,97,28)" fg:x="1915" fg:w="3"/><text x="79.6118%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (1 samples, 0.04%)</title><rect x="79.4447%" y="949" width="0.0414%" height="15" fill="rgb(225,92,11)" fg:x="1917" fg:w="1"/><text x="79.6947%" y="959.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (1 samples, 0.04%)</title><rect x="79.4447%" y="933" width="0.0414%" height="15" fill="rgb(243,38,12)" fg:x="1917" fg:w="1"/><text x="79.6947%" y="943.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.04%)</title><rect x="79.4447%" y="917" width="0.0414%" height="15" fill="rgb(208,139,16)" fg:x="1917" fg:w="1"/><text x="79.6947%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.04%)</title><rect x="79.4447%" y="901" width="0.0414%" height="15" fill="rgb(227,24,9)" fg:x="1917" fg:w="1"/><text x="79.6947%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="79.4447%" y="885" width="0.0414%" height="15" fill="rgb(206,62,11)" fg:x="1917" fg:w="1"/><text x="79.6947%" y="895.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="79.4447%" y="869" width="0.0414%" height="15" fill="rgb(228,134,27)" fg:x="1917" fg:w="1"/><text x="79.6947%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.04%)</title><rect x="79.4447%" y="853" width="0.0414%" height="15" fill="rgb(205,55,33)" fg:x="1917" fg:w="1"/><text x="79.6947%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.04%)</title><rect x="79.4861%" y="917" width="0.0414%" height="15" fill="rgb(243,75,43)" fg:x="1918" fg:w="1"/><text x="79.7361%" y="927.50"></text></g><g><title>nu_parser::parser::parse_record (38 samples, 1.57%)</title><rect x="78.0771%" y="1013" width="1.5748%" height="15" fill="rgb(223,27,42)" fg:x="1884" fg:w="38"/><text x="78.3271%" y="1023.50"></text></g><g><title>nu_parser::lex::lex (38 samples, 1.57%)</title><rect x="78.0771%" y="997" width="1.5748%" height="15" fill="rgb(232,189,33)" fg:x="1884" fg:w="38"/><text x="78.3271%" y="1007.50"></text></g><g><title>nu_parser::lex::lex_item (31 samples, 1.28%)</title><rect x="78.3672%" y="981" width="1.2847%" height="15" fill="rgb(210,9,39)" fg:x="1891" fg:w="31"/><text x="78.6172%" y="991.50"></text></g><g><title>nu_parser::lex::is_special_item (4 samples, 0.17%)</title><rect x="79.4861%" y="965" width="0.1658%" height="15" fill="rgb(242,85,26)" fg:x="1918" fg:w="4"/><text x="79.7361%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (4 samples, 0.17%)</title><rect x="79.4861%" y="949" width="0.1658%" height="15" fill="rgb(248,44,4)" fg:x="1918" fg:w="4"/><text x="79.7361%" y="959.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (4 samples, 0.17%)</title><rect x="79.4861%" y="933" width="0.1658%" height="15" fill="rgb(250,96,46)" fg:x="1918" fg:w="4"/><text x="79.7361%" y="943.50"></text></g><g><title>core::slice::memchr::memchr (3 samples, 0.12%)</title><rect x="79.5276%" y="917" width="0.1243%" height="15" fill="rgb(229,116,26)" fg:x="1919" fg:w="3"/><text x="79.7776%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (3 samples, 0.12%)</title><rect x="79.5276%" y="901" width="0.1243%" height="15" fill="rgb(246,94,34)" fg:x="1919" fg:w="3"/><text x="79.7776%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="79.5690%" y="885" width="0.0829%" height="15" fill="rgb(251,73,21)" fg:x="1920" fg:w="2"/><text x="79.8190%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="79.6104%" y="869" width="0.0414%" height="15" fill="rgb(254,121,25)" fg:x="1921" fg:w="1"/><text x="79.8604%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="79.6104%" y="853" width="0.0414%" height="15" fill="rgb(215,161,49)" fg:x="1921" fg:w="1"/><text x="79.8604%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="79.6519%" y="981" width="0.0414%" height="15" fill="rgb(221,43,13)" fg:x="1922" fg:w="1"/><text x="79.9019%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="79.6519%" y="965" width="0.0414%" height="15" fill="rgb(249,5,37)" fg:x="1922" fg:w="1"/><text x="79.9019%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="79.6519%" y="949" width="0.0414%" height="15" fill="rgb(226,25,44)" fg:x="1922" fg:w="1"/><text x="79.9019%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="79.6519%" y="933" width="0.0414%" height="15" fill="rgb(238,189,16)" fg:x="1922" fg:w="1"/><text x="79.9019%" y="943.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (1 samples, 0.04%)</title><rect x="79.6519%" y="917" width="0.0414%" height="15" fill="rgb(251,186,8)" fg:x="1922" fg:w="1"/><text x="79.9019%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.12%)</title><rect x="80.1906%" y="965" width="0.1243%" height="15" fill="rgb(254,34,31)" fg:x="1935" fg:w="3"/><text x="80.4406%" y="975.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.08%)</title><rect x="80.2321%" y="949" width="0.0829%" height="15" fill="rgb(225,215,27)" fg:x="1936" fg:w="2"/><text x="80.4821%" y="959.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.08%)</title><rect x="80.2321%" y="933" width="0.0829%" height="15" fill="rgb(221,192,48)" fg:x="1936" fg:w="2"/><text x="80.4821%" y="943.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.08%)</title><rect x="80.2321%" y="917" width="0.0829%" height="15" fill="rgb(219,137,20)" fg:x="1936" fg:w="2"/><text x="80.4821%" y="927.50"></text></g><g><title>nu_parser::parser::parse_table_expression (26 samples, 1.08%)</title><rect x="79.6519%" y="1013" width="1.0775%" height="15" fill="rgb(219,84,11)" fg:x="1922" fg:w="26"/><text x="79.9019%" y="1023.50"></text></g><g><title>nu_parser::lex::lex (26 samples, 1.08%)</title><rect x="79.6519%" y="997" width="1.0775%" height="15" fill="rgb(224,10,23)" fg:x="1922" fg:w="26"/><text x="79.9019%" y="1007.50"></text></g><g><title>nu_parser::lex::lex_item (25 samples, 1.04%)</title><rect x="79.6933%" y="981" width="1.0361%" height="15" fill="rgb(248,22,39)" fg:x="1923" fg:w="25"/><text x="79.9433%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (10 samples, 0.41%)</title><rect x="80.3150%" y="965" width="0.4144%" height="15" fill="rgb(212,154,20)" fg:x="1938" fg:w="10"/><text x="80.5650%" y="975.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (8 samples, 0.33%)</title><rect x="80.3978%" y="949" width="0.3315%" height="15" fill="rgb(236,199,50)" fg:x="1940" fg:w="8"/><text x="80.6478%" y="959.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.25%)</title><rect x="80.4807%" y="933" width="0.2487%" height="15" fill="rgb(211,9,17)" fg:x="1942" fg:w="6"/><text x="80.7307%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::as_ptr (1 samples, 0.04%)</title><rect x="80.6879%" y="917" width="0.0414%" height="15" fill="rgb(243,216,36)" fg:x="1947" fg:w="1"/><text x="80.9379%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="81.5997%" y="997" width="0.1243%" height="15" fill="rgb(250,2,10)" fg:x="1969" fg:w="3"/><text x="81.8497%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="81.6411%" y="981" width="0.0829%" height="15" fill="rgb(226,50,48)" fg:x="1970" fg:w="2"/><text x="81.8911%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.08%)</title><rect x="81.6411%" y="965" width="0.0829%" height="15" fill="rgb(243,81,16)" fg:x="1970" fg:w="2"/><text x="81.8911%" y="975.50"></text></g><g><title>[libc.so.6] (4 samples, 0.17%)</title><rect x="81.7240%" y="997" width="0.1658%" height="15" fill="rgb(250,14,2)" fg:x="1972" fg:w="4"/><text x="81.9740%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="82.0141%" y="901" width="0.0414%" height="15" fill="rgb(233,135,29)" fg:x="1979" fg:w="1"/><text x="82.2641%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.04%)</title><rect x="82.0141%" y="885" width="0.0414%" height="15" fill="rgb(224,64,43)" fg:x="1979" fg:w="1"/><text x="82.2641%" y="895.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="82.0141%" y="869" width="0.0414%" height="15" fill="rgb(238,84,13)" fg:x="1979" fg:w="1"/><text x="82.2641%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="82.0141%" y="917" width="0.0829%" height="15" fill="rgb(253,48,26)" fg:x="1979" fg:w="2"/><text x="82.2641%" y="927.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.04%)</title><rect x="82.0555%" y="901" width="0.0414%" height="15" fill="rgb(205,223,31)" fg:x="1980" fg:w="1"/><text x="82.3055%" y="911.50"></text></g><g><title>__rust_dealloc (1 samples, 0.04%)</title><rect x="82.0970%" y="853" width="0.0414%" height="15" fill="rgb(221,41,32)" fg:x="1981" fg:w="1"/><text x="82.3470%" y="863.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="82.1384%" y="853" width="0.0414%" height="15" fill="rgb(213,158,31)" fg:x="1982" fg:w="1"/><text x="82.3884%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="82.1384%" y="837" width="0.0414%" height="15" fill="rgb(245,126,43)" fg:x="1982" fg:w="1"/><text x="82.3884%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.12%)</title><rect x="82.0970%" y="885" width="0.1243%" height="15" fill="rgb(227,7,22)" fg:x="1981" fg:w="3"/><text x="82.3470%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.12%)</title><rect x="82.0970%" y="869" width="0.1243%" height="15" fill="rgb(252,90,44)" fg:x="1981" fg:w="3"/><text x="82.3470%" y="879.50"></text></g><g><title>core::alloc::layout::Layout::align (1 samples, 0.04%)</title><rect x="82.1799%" y="853" width="0.0414%" height="15" fill="rgb(253,91,0)" fg:x="1983" fg:w="1"/><text x="82.4299%" y="863.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::get (1 samples, 0.04%)</title><rect x="82.1799%" y="837" width="0.0414%" height="15" fill="rgb(252,175,49)" fg:x="1983" fg:w="1"/><text x="82.4299%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;nu_parser::errors::ParseError&gt;&gt; (10 samples, 0.41%)</title><rect x="81.9312%" y="981" width="0.4144%" height="15" fill="rgb(246,150,1)" fg:x="1977" fg:w="10"/><text x="82.1812%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_parser::errors::ParseError&gt; (10 samples, 0.41%)</title><rect x="81.9312%" y="965" width="0.4144%" height="15" fill="rgb(241,192,25)" fg:x="1977" fg:w="10"/><text x="82.1812%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (8 samples, 0.33%)</title><rect x="82.0141%" y="949" width="0.3315%" height="15" fill="rgb(239,187,11)" fg:x="1979" fg:w="8"/><text x="82.2641%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.33%)</title><rect x="82.0141%" y="933" width="0.3315%" height="15" fill="rgb(218,202,51)" fg:x="1979" fg:w="8"/><text x="82.2641%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.25%)</title><rect x="82.0970%" y="917" width="0.2487%" height="15" fill="rgb(225,176,8)" fg:x="1981" fg:w="6"/><text x="82.3470%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.25%)</title><rect x="82.0970%" y="901" width="0.2487%" height="15" fill="rgb(219,122,41)" fg:x="1981" fg:w="6"/><text x="82.3470%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.12%)</title><rect x="82.2213%" y="885" width="0.1243%" height="15" fill="rgb(248,140,20)" fg:x="1984" fg:w="3"/><text x="82.4713%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="82.3042%" y="869" width="0.0414%" height="15" fill="rgb(245,41,37)" fg:x="1986" fg:w="1"/><text x="82.5542%" y="879.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::new_unchecked (1 samples, 0.04%)</title><rect x="82.3042%" y="853" width="0.0414%" height="15" fill="rgb(235,82,39)" fg:x="1986" fg:w="1"/><text x="82.5542%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.04%)</title><rect x="82.3456%" y="965" width="0.0414%" height="15" fill="rgb(230,108,42)" fg:x="1987" fg:w="1"/><text x="82.5956%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;(nu_protocol::ast::expression::Expression,core::option::Option&lt;nu_parser::errors::ParseError&gt;)&gt; (13 samples, 0.54%)</title><rect x="81.8898%" y="997" width="0.5387%" height="15" fill="rgb(215,150,50)" fg:x="1976" fg:w="13"/><text x="82.1398%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (2 samples, 0.08%)</title><rect x="82.3456%" y="981" width="0.0829%" height="15" fill="rgb(233,212,5)" fg:x="1987" fg:w="2"/><text x="82.5956%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ty::Type&gt; (1 samples, 0.04%)</title><rect x="82.3871%" y="965" width="0.0414%" height="15" fill="rgb(245,80,22)" fg:x="1988" fg:w="1"/><text x="82.6371%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::syntax_shape::SyntaxShape: 10]&gt; (2 samples, 0.08%)</title><rect x="82.4285%" y="997" width="0.0829%" height="15" fill="rgb(238,129,16)" fg:x="1989" fg:w="2"/><text x="82.6785%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::syntax_shape::SyntaxShape&gt; (1 samples, 0.04%)</title><rect x="82.4700%" y="981" width="0.0414%" height="15" fill="rgb(240,19,0)" fg:x="1990" fg:w="1"/><text x="82.7200%" y="991.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.17%)</title><rect x="82.5528%" y="981" width="0.1658%" height="15" fill="rgb(232,42,35)" fg:x="1992" fg:w="4"/><text x="82.8028%" y="991.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="82.6772%" y="965" width="0.0414%" height="15" fill="rgb(223,130,24)" fg:x="1995" fg:w="1"/><text x="82.9272%" y="975.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="82.6772%" y="949" width="0.0414%" height="15" fill="rgb(237,16,22)" fg:x="1995" fg:w="1"/><text x="82.9272%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (6 samples, 0.25%)</title><rect x="82.5114%" y="997" width="0.2487%" height="15" fill="rgb(248,192,20)" fg:x="1991" fg:w="6"/><text x="82.7614%" y="1007.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.04%)</title><rect x="82.7186%" y="981" width="0.0414%" height="15" fill="rgb(233,167,2)" fg:x="1996" fg:w="1"/><text x="82.9686%" y="991.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="82.7186%" y="965" width="0.0414%" height="15" fill="rgb(252,71,44)" fg:x="1996" fg:w="1"/><text x="82.9686%" y="975.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="82.7186%" y="949" width="0.0414%" height="15" fill="rgb(238,37,47)" fg:x="1996" fg:w="1"/><text x="82.9686%" y="959.50"></text></g><g><title>nu_parser::parser::garbage (1 samples, 0.04%)</title><rect x="82.7600%" y="997" width="0.0414%" height="15" fill="rgb(214,202,54)" fg:x="1997" fg:w="1"/><text x="83.0100%" y="1007.50"></text></g><g><title>nu_protocol::ast::expression::Expression::garbage (1 samples, 0.04%)</title><rect x="82.7600%" y="981" width="0.0414%" height="15" fill="rgb(254,165,40)" fg:x="1997" fg:w="1"/><text x="83.0100%" y="991.50"></text></g><g><title>_init (1 samples, 0.04%)</title><rect x="82.7600%" y="965" width="0.0414%" height="15" fill="rgb(246,173,38)" fg:x="1997" fg:w="1"/><text x="83.0100%" y="975.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="82.9258%" y="853" width="0.0414%" height="15" fill="rgb(215,3,27)" fg:x="2001" fg:w="1"/><text x="83.1758%" y="863.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="82.9258%" y="837" width="0.0414%" height="15" fill="rgb(239,169,51)" fg:x="2001" fg:w="1"/><text x="83.1758%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;nu_parser::errors::ParseError&gt;&gt; (4 samples, 0.17%)</title><rect x="82.8429%" y="981" width="0.1658%" height="15" fill="rgb(212,5,25)" fg:x="1999" fg:w="4"/><text x="83.0929%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_parser::errors::ParseError&gt; (4 samples, 0.17%)</title><rect x="82.8429%" y="965" width="0.1658%" height="15" fill="rgb(243,45,17)" fg:x="1999" fg:w="4"/><text x="83.0929%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.12%)</title><rect x="82.8844%" y="949" width="0.1243%" height="15" fill="rgb(242,97,9)" fg:x="2000" fg:w="3"/><text x="83.1344%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.12%)</title><rect x="82.8844%" y="933" width="0.1243%" height="15" fill="rgb(228,71,31)" fg:x="2000" fg:w="3"/><text x="83.1344%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.12%)</title><rect x="82.8844%" y="917" width="0.1243%" height="15" fill="rgb(252,184,16)" fg:x="2000" fg:w="3"/><text x="83.1344%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.12%)</title><rect x="82.8844%" y="901" width="0.1243%" height="15" fill="rgb(236,169,46)" fg:x="2000" fg:w="3"/><text x="83.1344%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.08%)</title><rect x="82.9258%" y="885" width="0.0829%" height="15" fill="rgb(207,17,47)" fg:x="2001" fg:w="2"/><text x="83.1758%" y="895.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.08%)</title><rect x="82.9258%" y="869" width="0.0829%" height="15" fill="rgb(206,201,28)" fg:x="2001" fg:w="2"/><text x="83.1758%" y="879.50"></text></g><g><title>core::alloc::layout::Layout::align (1 samples, 0.04%)</title><rect x="82.9673%" y="853" width="0.0414%" height="15" fill="rgb(224,184,23)" fg:x="2002" fg:w="1"/><text x="83.2173%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (2 samples, 0.08%)</title><rect x="83.0087%" y="981" width="0.0829%" height="15" fill="rgb(208,139,48)" fg:x="2003" fg:w="2"/><text x="83.2587%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.08%)</title><rect x="83.0916%" y="837" width="0.0829%" height="15" fill="rgb(208,130,10)" fg:x="2005" fg:w="2"/><text x="83.3416%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (2 samples, 0.08%)</title><rect x="83.0916%" y="821" width="0.0829%" height="15" fill="rgb(211,213,45)" fg:x="2005" fg:w="2"/><text x="83.3416%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="83.5475%" y="757" width="0.0414%" height="15" fill="rgb(235,100,30)" fg:x="2016" fg:w="1"/><text x="83.7975%" y="767.50"></text></g><g><title>__rust_alloc (1 samples, 0.04%)</title><rect x="83.6303%" y="741" width="0.0414%" height="15" fill="rgb(206,144,31)" fg:x="2018" fg:w="1"/><text x="83.8803%" y="751.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.29%)</title><rect x="83.5889%" y="757" width="0.2901%" height="15" fill="rgb(224,200,26)" fg:x="2017" fg:w="7"/><text x="83.8389%" y="767.50"></text></g><g><title>malloc (5 samples, 0.21%)</title><rect x="83.6718%" y="741" width="0.2072%" height="15" fill="rgb(247,104,53)" fg:x="2019" fg:w="5"/><text x="83.9218%" y="751.50"></text></g><g><title>[libc.so.6] (3 samples, 0.12%)</title><rect x="83.7547%" y="725" width="0.1243%" height="15" fill="rgb(220,14,17)" fg:x="2021" fg:w="3"/><text x="84.0047%" y="735.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="83.8790%" y="757" width="0.0414%" height="15" fill="rgb(230,140,40)" fg:x="2024" fg:w="1"/><text x="84.1290%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="83.8790%" y="741" width="0.0414%" height="15" fill="rgb(229,2,41)" fg:x="2024" fg:w="1"/><text x="84.1290%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.54%)</title><rect x="83.4646%" y="789" width="0.5387%" height="15" fill="rgb(232,89,16)" fg:x="2014" fg:w="13"/><text x="83.7146%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.50%)</title><rect x="83.5060%" y="773" width="0.4973%" height="15" fill="rgb(247,59,52)" fg:x="2015" fg:w="12"/><text x="83.7560%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (2 samples, 0.08%)</title><rect x="83.9204%" y="757" width="0.0829%" height="15" fill="rgb(226,110,21)" fg:x="2025" fg:w="2"/><text x="84.1704%" y="767.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (2 samples, 0.08%)</title><rect x="83.9204%" y="741" width="0.0829%" height="15" fill="rgb(224,176,43)" fg:x="2025" fg:w="2"/><text x="84.1704%" y="751.50"></text></g><g><title>alloc::raw_vec::alloc_guard (1 samples, 0.04%)</title><rect x="84.0033%" y="789" width="0.0414%" height="15" fill="rgb(221,73,6)" fg:x="2027" fg:w="1"/><text x="84.2533%" y="799.50"></text></g><g><title>core::alloc::layout::Layout::array (4 samples, 0.17%)</title><rect x="84.0448%" y="789" width="0.1658%" height="15" fill="rgb(232,78,19)" fg:x="2028" fg:w="4"/><text x="84.2948%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (3 samples, 0.12%)</title><rect x="84.0862%" y="773" width="0.1243%" height="15" fill="rgb(233,112,48)" fg:x="2029" fg:w="3"/><text x="84.3362%" y="783.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.04%)</title><rect x="84.1691%" y="757" width="0.0414%" height="15" fill="rgb(243,131,47)" fg:x="2031" fg:w="1"/><text x="84.4191%" y="767.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (28 samples, 1.16%)</title><rect x="83.0916%" y="965" width="1.1604%" height="15" fill="rgb(226,51,1)" fg:x="2005" fg:w="28"/><text x="83.3416%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (28 samples, 1.16%)</title><rect x="83.0916%" y="949" width="1.1604%" height="15" fill="rgb(247,58,7)" fg:x="2005" fg:w="28"/><text x="83.3416%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (28 samples, 1.16%)</title><rect x="83.0916%" y="933" width="1.1604%" height="15" fill="rgb(209,7,32)" fg:x="2005" fg:w="28"/><text x="83.3416%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (28 samples, 1.16%)</title><rect x="83.0916%" y="917" width="1.1604%" height="15" fill="rgb(209,39,41)" fg:x="2005" fg:w="28"/><text x="83.3416%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (28 samples, 1.16%)</title><rect x="83.0916%" y="901" width="1.1604%" height="15" fill="rgb(226,182,46)" fg:x="2005" fg:w="28"/><text x="83.3416%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28 samples, 1.16%)</title><rect x="83.0916%" y="885" width="1.1604%" height="15" fill="rgb(230,219,10)" fg:x="2005" fg:w="28"/><text x="83.3416%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 1.16%)</title><rect x="83.0916%" y="869" width="1.1604%" height="15" fill="rgb(227,175,30)" fg:x="2005" fg:w="28"/><text x="83.3416%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 1.16%)</title><rect x="83.0916%" y="853" width="1.1604%" height="15" fill="rgb(217,2,50)" fg:x="2005" fg:w="28"/><text x="83.3416%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (26 samples, 1.08%)</title><rect x="83.1745%" y="837" width="1.0775%" height="15" fill="rgb(229,160,0)" fg:x="2007" fg:w="26"/><text x="83.4245%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (25 samples, 1.04%)</title><rect x="83.2159%" y="821" width="1.0361%" height="15" fill="rgb(207,78,37)" fg:x="2008" fg:w="25"/><text x="83.4659%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (25 samples, 1.04%)</title><rect x="83.2159%" y="805" width="1.0361%" height="15" fill="rgb(225,57,0)" fg:x="2008" fg:w="25"/><text x="83.4659%" y="815.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="84.2105%" y="789" width="0.0414%" height="15" fill="rgb(232,154,2)" fg:x="2032" fg:w="1"/><text x="84.4605%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="84.2520%" y="965" width="0.0414%" height="15" fill="rgb(241,212,25)" fg:x="2033" fg:w="1"/><text x="84.5020%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.08%)</title><rect x="84.3763%" y="949" width="0.0829%" height="15" fill="rgb(226,69,20)" fg:x="2036" fg:w="2"/><text x="84.6263%" y="959.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.08%)</title><rect x="84.3763%" y="933" width="0.0829%" height="15" fill="rgb(247,184,54)" fg:x="2036" fg:w="2"/><text x="84.6263%" y="943.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.08%)</title><rect x="84.3763%" y="917" width="0.0829%" height="15" fill="rgb(210,145,0)" fg:x="2036" fg:w="2"/><text x="84.6263%" y="927.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="84.3763%" y="901" width="0.0829%" height="15" fill="rgb(253,82,12)" fg:x="2036" fg:w="2"/><text x="84.6263%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="84.5421%" y="869" width="0.0414%" height="15" fill="rgb(245,42,11)" fg:x="2040" fg:w="1"/><text x="84.7921%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="84.5421%" y="853" width="0.0414%" height="15" fill="rgb(219,147,32)" fg:x="2040" fg:w="1"/><text x="84.7921%" y="863.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.12%)</title><rect x="84.5006%" y="901" width="0.1243%" height="15" fill="rgb(246,12,7)" fg:x="2039" fg:w="3"/><text x="84.7506%" y="911.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.12%)</title><rect x="84.5006%" y="885" width="0.1243%" height="15" fill="rgb(243,50,9)" fg:x="2039" fg:w="3"/><text x="84.7506%" y="895.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="84.5835%" y="869" width="0.0414%" height="15" fill="rgb(219,149,6)" fg:x="2041" fg:w="1"/><text x="84.8335%" y="879.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="84.5835%" y="853" width="0.0414%" height="15" fill="rgb(241,51,42)" fg:x="2041" fg:w="1"/><text x="84.8335%" y="863.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::strip_prefix (10 samples, 0.41%)</title><rect x="84.2934%" y="965" width="0.4144%" height="15" fill="rgb(226,128,27)" fg:x="2034" fg:w="10"/><text x="84.5434%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (6 samples, 0.25%)</title><rect x="84.4592%" y="949" width="0.2487%" height="15" fill="rgb(244,144,4)" fg:x="2038" fg:w="6"/><text x="84.7092%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (6 samples, 0.25%)</title><rect x="84.4592%" y="933" width="0.2487%" height="15" fill="rgb(221,4,13)" fg:x="2038" fg:w="6"/><text x="84.7092%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.25%)</title><rect x="84.4592%" y="917" width="0.2487%" height="15" fill="rgb(208,170,28)" fg:x="2038" fg:w="6"/><text x="84.7092%" y="927.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="84.6249%" y="901" width="0.0829%" height="15" fill="rgb(226,131,13)" fg:x="2042" fg:w="2"/><text x="84.8749%" y="911.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="84.6249%" y="885" width="0.0829%" height="15" fill="rgb(215,72,41)" fg:x="2042" fg:w="2"/><text x="84.8749%" y="895.50"></text></g><g><title>nu_parser::parser::garbage (2 samples, 0.08%)</title><rect x="84.7078%" y="965" width="0.0829%" height="15" fill="rgb(243,108,20)" fg:x="2044" fg:w="2"/><text x="84.9578%" y="975.50"></text></g><g><title>nu_protocol::ast::expression::Expression::garbage (2 samples, 0.08%)</title><rect x="84.7078%" y="949" width="0.0829%" height="15" fill="rgb(230,189,17)" fg:x="2044" fg:w="2"/><text x="84.9578%" y="959.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="84.7078%" y="933" width="0.0829%" height="15" fill="rgb(220,50,17)" fg:x="2044" fg:w="2"/><text x="84.9578%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.08%)</title><rect x="84.8736%" y="917" width="0.0829%" height="15" fill="rgb(248,152,48)" fg:x="2048" fg:w="2"/><text x="85.1236%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="84.9150%" y="901" width="0.0414%" height="15" fill="rgb(244,91,11)" fg:x="2049" fg:w="1"/><text x="85.1650%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.12%)</title><rect x="84.8736%" y="933" width="0.1243%" height="15" fill="rgb(220,157,5)" fg:x="2048" fg:w="3"/><text x="85.1236%" y="943.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="84.9565%" y="917" width="0.0414%" height="15" fill="rgb(253,137,8)" fg:x="2050" fg:w="1"/><text x="85.2065%" y="927.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="84.9565%" y="901" width="0.0414%" height="15" fill="rgb(217,137,51)" fg:x="2050" fg:w="1"/><text x="85.2065%" y="911.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.04%)</title><rect x="84.9565%" y="885" width="0.0414%" height="15" fill="rgb(218,209,53)" fg:x="2050" fg:w="1"/><text x="85.2065%" y="895.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.21%)</title><rect x="84.8322%" y="949" width="0.2072%" height="15" fill="rgb(249,137,25)" fg:x="2047" fg:w="5"/><text x="85.0822%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="84.9979%" y="933" width="0.0414%" height="15" fill="rgb(239,155,26)" fg:x="2051" fg:w="1"/><text x="85.2479%" y="943.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="84.9979%" y="917" width="0.0414%" height="15" fill="rgb(227,85,46)" fg:x="2051" fg:w="1"/><text x="85.2479%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="84.9979%" y="901" width="0.0414%" height="15" fill="rgb(251,107,43)" fg:x="2051" fg:w="1"/><text x="85.2479%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (4 samples, 0.17%)</title><rect x="85.0394%" y="949" width="0.1658%" height="15" fill="rgb(234,170,33)" fg:x="2052" fg:w="4"/><text x="85.2894%" y="959.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.08%)</title><rect x="85.1223%" y="933" width="0.0829%" height="15" fill="rgb(206,29,35)" fg:x="2054" fg:w="2"/><text x="85.3723%" y="943.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (2 samples, 0.08%)</title><rect x="85.1223%" y="917" width="0.0829%" height="15" fill="rgb(227,138,25)" fg:x="2054" fg:w="2"/><text x="85.3723%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="85.2051%" y="949" width="0.0414%" height="15" fill="rgb(249,131,35)" fg:x="2056" fg:w="1"/><text x="85.4551%" y="959.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="85.2051%" y="933" width="0.0414%" height="15" fill="rgb(239,6,40)" fg:x="2056" fg:w="1"/><text x="85.4551%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="85.2466%" y="933" width="0.0414%" height="15" fill="rgb(246,136,47)" fg:x="2057" fg:w="1"/><text x="85.4966%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.04%)</title><rect x="85.2466%" y="917" width="0.0414%" height="15" fill="rgb(253,58,26)" fg:x="2057" fg:w="1"/><text x="85.4966%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="85.2466%" y="901" width="0.0414%" height="15" fill="rgb(237,141,10)" fg:x="2057" fg:w="1"/><text x="85.4966%" y="911.50"></text></g><g><title>nu_parser::parser::parse_binary (61 samples, 2.53%)</title><rect x="82.8015%" y="997" width="2.5280%" height="15" fill="rgb(234,156,12)" fg:x="1998" fg:w="61"/><text x="83.0515%" y="1007.50">nu..</text></g><g><title>nu_parser::parser::parse_binary_with_base (54 samples, 2.24%)</title><rect x="83.0916%" y="981" width="2.2379%" height="15" fill="rgb(243,224,36)" fg:x="2005" fg:w="54"/><text x="83.3416%" y="991.50">n..</text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (13 samples, 0.54%)</title><rect x="84.7907%" y="965" width="0.5387%" height="15" fill="rgb(205,229,51)" fg:x="2046" fg:w="13"/><text x="85.0407%" y="975.50"></text></g><g><title>nu_protocol::engine::engine_state::EngineState::next_span_start (2 samples, 0.08%)</title><rect x="85.2466%" y="949" width="0.0829%" height="15" fill="rgb(223,189,4)" fg:x="2057" fg:w="2"/><text x="85.4966%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::last (1 samples, 0.04%)</title><rect x="85.2880%" y="933" width="0.0414%" height="15" fill="rgb(249,167,54)" fg:x="2058" fg:w="1"/><text x="85.5380%" y="943.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.08%)</title><rect x="85.5367%" y="773" width="0.0829%" height="15" fill="rgb(218,34,28)" fg:x="2064" fg:w="2"/><text x="85.7867%" y="783.50"></text></g><g><title>malloc (2 samples, 0.08%)</title><rect x="85.5367%" y="757" width="0.0829%" height="15" fill="rgb(232,109,42)" fg:x="2064" fg:w="2"/><text x="85.7867%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.17%)</title><rect x="85.4952%" y="805" width="0.1658%" height="15" fill="rgb(248,214,46)" fg:x="2063" fg:w="4"/><text x="85.7452%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.17%)</title><rect x="85.4952%" y="789" width="0.1658%" height="15" fill="rgb(244,216,40)" fg:x="2063" fg:w="4"/><text x="85.7452%" y="799.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="85.6196%" y="773" width="0.0414%" height="15" fill="rgb(231,226,31)" fg:x="2066" fg:w="1"/><text x="85.8696%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="85.6196%" y="757" width="0.0414%" height="15" fill="rgb(238,38,43)" fg:x="2066" fg:w="1"/><text x="85.8696%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="85.6610%" y="789" width="0.0414%" height="15" fill="rgb(208,88,43)" fg:x="2067" fg:w="1"/><text x="85.9110%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (9 samples, 0.37%)</title><rect x="85.3709%" y="981" width="0.3730%" height="15" fill="rgb(205,136,37)" fg:x="2060" fg:w="9"/><text x="85.6209%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (9 samples, 0.37%)</title><rect x="85.3709%" y="965" width="0.3730%" height="15" fill="rgb(237,34,14)" fg:x="2060" fg:w="9"/><text x="85.6209%" y="975.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (9 samples, 0.37%)</title><rect x="85.3709%" y="949" width="0.3730%" height="15" fill="rgb(236,193,44)" fg:x="2060" fg:w="9"/><text x="85.6209%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (9 samples, 0.37%)</title><rect x="85.3709%" y="933" width="0.3730%" height="15" fill="rgb(231,48,10)" fg:x="2060" fg:w="9"/><text x="85.6209%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (9 samples, 0.37%)</title><rect x="85.3709%" y="917" width="0.3730%" height="15" fill="rgb(213,141,34)" fg:x="2060" fg:w="9"/><text x="85.6209%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.37%)</title><rect x="85.3709%" y="901" width="0.3730%" height="15" fill="rgb(249,130,34)" fg:x="2060" fg:w="9"/><text x="85.6209%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.37%)</title><rect x="85.3709%" y="885" width="0.3730%" height="15" fill="rgb(219,42,41)" fg:x="2060" fg:w="9"/><text x="85.6209%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.33%)</title><rect x="85.4123%" y="869" width="0.3315%" height="15" fill="rgb(224,100,54)" fg:x="2061" fg:w="8"/><text x="85.6623%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.33%)</title><rect x="85.4123%" y="853" width="0.3315%" height="15" fill="rgb(229,200,27)" fg:x="2061" fg:w="8"/><text x="85.6623%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.33%)</title><rect x="85.4123%" y="837" width="0.3315%" height="15" fill="rgb(217,118,10)" fg:x="2061" fg:w="8"/><text x="85.6623%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (7 samples, 0.29%)</title><rect x="85.4538%" y="821" width="0.2901%" height="15" fill="rgb(206,22,3)" fg:x="2062" fg:w="7"/><text x="85.7038%" y="831.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.08%)</title><rect x="85.6610%" y="805" width="0.0829%" height="15" fill="rgb(232,163,46)" fg:x="2067" fg:w="2"/><text x="85.9110%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.04%)</title><rect x="85.7024%" y="789" width="0.0414%" height="15" fill="rgb(206,95,13)" fg:x="2068" fg:w="1"/><text x="85.9524%" y="799.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.04%)</title><rect x="85.7024%" y="773" width="0.0414%" height="15" fill="rgb(253,154,18)" fg:x="2068" fg:w="1"/><text x="85.9524%" y="783.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (1 samples, 0.04%)</title><rect x="85.7439%" y="981" width="0.0414%" height="15" fill="rgb(219,32,23)" fg:x="2069" fg:w="1"/><text x="85.9939%" y="991.50"></text></g><g><title>nu_parser::parser::parse_datetime (14 samples, 0.58%)</title><rect x="85.3295%" y="997" width="0.5802%" height="15" fill="rgb(230,191,45)" fg:x="2059" fg:w="14"/><text x="85.5795%" y="1007.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (3 samples, 0.12%)</title><rect x="85.7853%" y="981" width="0.1243%" height="15" fill="rgb(229,64,36)" fg:x="2070" fg:w="3"/><text x="86.0353%" y="991.50"></text></g><g><title>nu_protocol::engine::engine_state::EngineState::next_span_start (3 samples, 0.12%)</title><rect x="85.7853%" y="965" width="0.1243%" height="15" fill="rgb(205,129,25)" fg:x="2070" fg:w="3"/><text x="86.0353%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="85.8268%" y="949" width="0.0829%" height="15" fill="rgb(254,112,7)" fg:x="2071" fg:w="2"/><text x="86.0768%" y="959.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="85.8682%" y="933" width="0.0414%" height="15" fill="rgb(226,53,48)" fg:x="2072" fg:w="1"/><text x="86.1182%" y="943.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="85.8682%" y="917" width="0.0414%" height="15" fill="rgb(214,153,38)" fg:x="2072" fg:w="1"/><text x="86.1182%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.04%)</title><rect x="85.8682%" y="901" width="0.0414%" height="15" fill="rgb(243,101,7)" fg:x="2072" fg:w="1"/><text x="86.1182%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="86.0340%" y="805" width="0.0414%" height="15" fill="rgb(240,140,22)" fg:x="2076" fg:w="1"/><text x="86.2840%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="86.0340%" y="789" width="0.0414%" height="15" fill="rgb(235,114,2)" fg:x="2076" fg:w="1"/><text x="86.2840%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.04%)</title><rect x="86.0340%" y="773" width="0.0414%" height="15" fill="rgb(242,59,12)" fg:x="2076" fg:w="1"/><text x="86.2840%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.17%)</title><rect x="85.9511%" y="853" width="0.1658%" height="15" fill="rgb(252,134,9)" fg:x="2074" fg:w="4"/><text x="86.2011%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.12%)</title><rect x="85.9925%" y="837" width="0.1243%" height="15" fill="rgb(236,4,44)" fg:x="2075" fg:w="3"/><text x="86.2425%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.12%)</title><rect x="85.9925%" y="821" width="0.1243%" height="15" fill="rgb(254,172,41)" fg:x="2075" fg:w="3"/><text x="86.2425%" y="831.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="86.0754%" y="805" width="0.0414%" height="15" fill="rgb(244,63,20)" fg:x="2077" fg:w="1"/><text x="86.3254%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.04%)</title><rect x="86.0754%" y="789" width="0.0414%" height="15" fill="rgb(250,73,31)" fg:x="2077" fg:w="1"/><text x="86.3254%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.21%)</title><rect x="85.9511%" y="981" width="0.2072%" height="15" fill="rgb(241,38,36)" fg:x="2074" fg:w="5"/><text x="86.2011%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (5 samples, 0.21%)</title><rect x="85.9511%" y="965" width="0.2072%" height="15" fill="rgb(245,211,2)" fg:x="2074" fg:w="5"/><text x="86.2011%" y="975.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (5 samples, 0.21%)</title><rect x="85.9511%" y="949" width="0.2072%" height="15" fill="rgb(206,120,28)" fg:x="2074" fg:w="5"/><text x="86.2011%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (5 samples, 0.21%)</title><rect x="85.9511%" y="933" width="0.2072%" height="15" fill="rgb(211,59,34)" fg:x="2074" fg:w="5"/><text x="86.2011%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.21%)</title><rect x="85.9511%" y="917" width="0.2072%" height="15" fill="rgb(233,168,5)" fg:x="2074" fg:w="5"/><text x="86.2011%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.21%)</title><rect x="85.9511%" y="901" width="0.2072%" height="15" fill="rgb(234,33,13)" fg:x="2074" fg:w="5"/><text x="86.2011%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.21%)</title><rect x="85.9511%" y="885" width="0.2072%" height="15" fill="rgb(231,150,26)" fg:x="2074" fg:w="5"/><text x="86.2011%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.21%)</title><rect x="85.9511%" y="869" width="0.2072%" height="15" fill="rgb(217,191,4)" fg:x="2074" fg:w="5"/><text x="86.2011%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.04%)</title><rect x="86.1169%" y="853" width="0.0414%" height="15" fill="rgb(246,198,38)" fg:x="2078" fg:w="1"/><text x="86.3669%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="86.1169%" y="837" width="0.0414%" height="15" fill="rgb(245,64,37)" fg:x="2078" fg:w="1"/><text x="86.3669%" y="847.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="86.1169%" y="821" width="0.0414%" height="15" fill="rgb(250,30,36)" fg:x="2078" fg:w="1"/><text x="86.3669%" y="831.50"></text></g><g><title>&lt;log::Level as core::cmp::PartialOrd&lt;log::LevelFilter&gt;&gt;::le (1 samples, 0.04%)</title><rect x="86.1583%" y="981" width="0.0414%" height="15" fill="rgb(217,86,53)" fg:x="2079" fg:w="1"/><text x="86.4083%" y="991.50"></text></g><g><title>log::max_level (2 samples, 0.08%)</title><rect x="86.1998%" y="981" width="0.0829%" height="15" fill="rgb(228,157,16)" fg:x="2080" fg:w="2"/><text x="86.4498%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.08%)</title><rect x="86.1998%" y="965" width="0.0829%" height="15" fill="rgb(217,59,31)" fg:x="2080" fg:w="2"/><text x="86.4498%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.08%)</title><rect x="86.1998%" y="949" width="0.0829%" height="15" fill="rgb(237,138,41)" fg:x="2080" fg:w="2"/><text x="86.4498%" y="959.50"></text></g><g><title>nu_parser::parser::garbage (1 samples, 0.04%)</title><rect x="86.2826%" y="981" width="0.0414%" height="15" fill="rgb(227,91,49)" fg:x="2082" fg:w="1"/><text x="86.5326%" y="991.50"></text></g><g><title>nu_protocol::ast::expression::Expression::garbage (1 samples, 0.04%)</title><rect x="86.2826%" y="965" width="0.0414%" height="15" fill="rgb(247,21,44)" fg:x="2082" fg:w="1"/><text x="86.5326%" y="975.50"></text></g><g><title>nu_parser::parser::parse_duration_bytes (1 samples, 0.04%)</title><rect x="86.3241%" y="981" width="0.0414%" height="15" fill="rgb(219,210,51)" fg:x="2083" fg:w="1"/><text x="86.5741%" y="991.50"></text></g><g><title>nu_parser::parser::parse_duration (14 samples, 0.58%)</title><rect x="85.9097%" y="997" width="0.5802%" height="15" fill="rgb(209,140,6)" fg:x="2073" fg:w="14"/><text x="86.1597%" y="1007.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (3 samples, 0.12%)</title><rect x="86.3655%" y="981" width="0.1243%" height="15" fill="rgb(221,188,24)" fg:x="2084" fg:w="3"/><text x="86.6155%" y="991.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.04%)</title><rect x="86.4484%" y="965" width="0.0414%" height="15" fill="rgb(232,154,20)" fg:x="2086" fg:w="1"/><text x="86.6984%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="86.4484%" y="949" width="0.0414%" height="15" fill="rgb(244,137,50)" fg:x="2086" fg:w="1"/><text x="86.6984%" y="959.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="86.4484%" y="933" width="0.0414%" height="15" fill="rgb(225,185,43)" fg:x="2086" fg:w="1"/><text x="86.6984%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.08%)</title><rect x="86.6142%" y="805" width="0.0829%" height="15" fill="rgb(213,205,38)" fg:x="2090" fg:w="2"/><text x="86.8642%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="86.6142%" y="789" width="0.0829%" height="15" fill="rgb(236,73,12)" fg:x="2090" fg:w="2"/><text x="86.8642%" y="799.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="86.6971%" y="805" width="0.0414%" height="15" fill="rgb(235,219,13)" fg:x="2092" fg:w="1"/><text x="86.9471%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.17%)</title><rect x="86.6142%" y="981" width="0.1658%" height="15" fill="rgb(218,59,36)" fg:x="2090" fg:w="4"/><text x="86.8642%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (4 samples, 0.17%)</title><rect x="86.6142%" y="965" width="0.1658%" height="15" fill="rgb(205,110,39)" fg:x="2090" fg:w="4"/><text x="86.8642%" y="975.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.17%)</title><rect x="86.6142%" y="949" width="0.1658%" height="15" fill="rgb(218,206,42)" fg:x="2090" fg:w="4"/><text x="86.8642%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4 samples, 0.17%)</title><rect x="86.6142%" y="933" width="0.1658%" height="15" fill="rgb(248,125,24)" fg:x="2090" fg:w="4"/><text x="86.8642%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.17%)</title><rect x="86.6142%" y="917" width="0.1658%" height="15" fill="rgb(242,28,27)" fg:x="2090" fg:w="4"/><text x="86.8642%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.17%)</title><rect x="86.6142%" y="901" width="0.1658%" height="15" fill="rgb(216,228,15)" fg:x="2090" fg:w="4"/><text x="86.8642%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.17%)</title><rect x="86.6142%" y="885" width="0.1658%" height="15" fill="rgb(235,116,46)" fg:x="2090" fg:w="4"/><text x="86.8642%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.17%)</title><rect x="86.6142%" y="869" width="0.1658%" height="15" fill="rgb(224,18,32)" fg:x="2090" fg:w="4"/><text x="86.8642%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.17%)</title><rect x="86.6142%" y="853" width="0.1658%" height="15" fill="rgb(252,5,12)" fg:x="2090" fg:w="4"/><text x="86.8642%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.17%)</title><rect x="86.6142%" y="837" width="0.1658%" height="15" fill="rgb(251,36,5)" fg:x="2090" fg:w="4"/><text x="86.8642%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.17%)</title><rect x="86.6142%" y="821" width="0.1658%" height="15" fill="rgb(217,53,14)" fg:x="2090" fg:w="4"/><text x="86.8642%" y="831.50"></text></g><g><title>core::alloc::layout::Layout::size (1 samples, 0.04%)</title><rect x="86.7385%" y="805" width="0.0414%" height="15" fill="rgb(215,86,45)" fg:x="2093" fg:w="1"/><text x="86.9885%" y="815.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="86.7799%" y="981" width="0.0829%" height="15" fill="rgb(242,169,11)" fg:x="2094" fg:w="2"/><text x="87.0299%" y="991.50"></text></g><g><title>nu_parser::parser::parse_filesize (10 samples, 0.41%)</title><rect x="86.4898%" y="997" width="0.4144%" height="15" fill="rgb(211,213,45)" fg:x="2087" fg:w="10"/><text x="86.7398%" y="1007.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (1 samples, 0.04%)</title><rect x="86.8628%" y="981" width="0.0414%" height="15" fill="rgb(205,88,11)" fg:x="2096" fg:w="1"/><text x="87.1128%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="86.9872%" y="853" width="0.0414%" height="15" fill="rgb(252,69,26)" fg:x="2099" fg:w="1"/><text x="87.2372%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="86.9872%" y="837" width="0.0414%" height="15" fill="rgb(246,123,37)" fg:x="2099" fg:w="1"/><text x="87.2372%" y="847.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.12%)</title><rect x="86.9457%" y="981" width="0.1243%" height="15" fill="rgb(212,205,5)" fg:x="2098" fg:w="3"/><text x="87.1957%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (3 samples, 0.12%)</title><rect x="86.9457%" y="965" width="0.1243%" height="15" fill="rgb(253,148,0)" fg:x="2098" fg:w="3"/><text x="87.1957%" y="975.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.12%)</title><rect x="86.9457%" y="949" width="0.1243%" height="15" fill="rgb(239,22,4)" fg:x="2098" fg:w="3"/><text x="87.1957%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.12%)</title><rect x="86.9457%" y="933" width="0.1243%" height="15" fill="rgb(226,26,53)" fg:x="2098" fg:w="3"/><text x="87.1957%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.12%)</title><rect x="86.9457%" y="917" width="0.1243%" height="15" fill="rgb(225,229,45)" fg:x="2098" fg:w="3"/><text x="87.1957%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.12%)</title><rect x="86.9457%" y="901" width="0.1243%" height="15" fill="rgb(220,60,37)" fg:x="2098" fg:w="3"/><text x="87.1957%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.12%)</title><rect x="86.9457%" y="885" width="0.1243%" height="15" fill="rgb(217,180,35)" fg:x="2098" fg:w="3"/><text x="87.1957%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.12%)</title><rect x="86.9457%" y="869" width="0.1243%" height="15" fill="rgb(229,7,53)" fg:x="2098" fg:w="3"/><text x="87.1957%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="87.0286%" y="853" width="0.0414%" height="15" fill="rgb(254,137,3)" fg:x="2100" fg:w="1"/><text x="87.2786%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="87.0286%" y="837" width="0.0414%" height="15" fill="rgb(215,140,41)" fg:x="2100" fg:w="1"/><text x="87.2786%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="87.0286%" y="821" width="0.0414%" height="15" fill="rgb(250,80,15)" fg:x="2100" fg:w="1"/><text x="87.2786%" y="831.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="87.0286%" y="805" width="0.0414%" height="15" fill="rgb(252,191,6)" fg:x="2100" fg:w="1"/><text x="87.2786%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.04%)</title><rect x="87.0286%" y="789" width="0.0414%" height="15" fill="rgb(246,217,18)" fg:x="2100" fg:w="1"/><text x="87.2786%" y="799.50"></text></g><g><title>__rust_probestack (1 samples, 0.04%)</title><rect x="87.0700%" y="981" width="0.0414%" height="15" fill="rgb(223,93,7)" fg:x="2101" fg:w="1"/><text x="87.3200%" y="991.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.08%)</title><rect x="87.1115%" y="981" width="0.0829%" height="15" fill="rgb(225,55,52)" fg:x="2102" fg:w="2"/><text x="87.3615%" y="991.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="87.1529%" y="965" width="0.0414%" height="15" fill="rgb(240,31,24)" fg:x="2103" fg:w="1"/><text x="87.4029%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.17%)</title><rect x="87.1944%" y="965" width="0.1658%" height="15" fill="rgb(205,56,52)" fg:x="2104" fg:w="4"/><text x="87.4444%" y="975.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.12%)</title><rect x="87.2358%" y="949" width="0.1243%" height="15" fill="rgb(246,146,12)" fg:x="2105" fg:w="3"/><text x="87.4858%" y="959.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.08%)</title><rect x="87.2772%" y="933" width="0.0829%" height="15" fill="rgb(239,84,36)" fg:x="2106" fg:w="2"/><text x="87.5272%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (1 samples, 0.04%)</title><rect x="87.3187%" y="917" width="0.0414%" height="15" fill="rgb(207,41,40)" fg:x="2107" fg:w="1"/><text x="87.5687%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::strip_prefix (10 samples, 0.41%)</title><rect x="87.1944%" y="981" width="0.4144%" height="15" fill="rgb(241,179,25)" fg:x="2104" fg:w="10"/><text x="87.4444%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (6 samples, 0.25%)</title><rect x="87.3601%" y="965" width="0.2487%" height="15" fill="rgb(210,0,34)" fg:x="2108" fg:w="6"/><text x="87.6101%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (5 samples, 0.21%)</title><rect x="87.4016%" y="949" width="0.2072%" height="15" fill="rgb(225,217,29)" fg:x="2109" fg:w="5"/><text x="87.6516%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (5 samples, 0.21%)</title><rect x="87.4016%" y="933" width="0.2072%" height="15" fill="rgb(216,191,38)" fg:x="2109" fg:w="5"/><text x="87.6516%" y="943.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (3 samples, 0.12%)</title><rect x="87.4845%" y="917" width="0.1243%" height="15" fill="rgb(232,140,52)" fg:x="2111" fg:w="3"/><text x="87.7345%" y="927.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="87.5259%" y="901" width="0.0829%" height="15" fill="rgb(223,158,51)" fg:x="2112" fg:w="2"/><text x="87.7759%" y="911.50"></text></g><g><title>core::ptr::slice_from_raw_parts (2 samples, 0.08%)</title><rect x="87.5259%" y="885" width="0.0829%" height="15" fill="rgb(235,29,51)" fg:x="2112" fg:w="2"/><text x="87.7759%" y="895.50"></text></g><g><title>nu_parser::parser::parse_int (19 samples, 0.79%)</title><rect x="86.9043%" y="997" width="0.7874%" height="15" fill="rgb(215,181,18)" fg:x="2097" fg:w="19"/><text x="87.1543%" y="1007.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (2 samples, 0.08%)</title><rect x="87.6088%" y="981" width="0.0829%" height="15" fill="rgb(227,125,34)" fg:x="2114" fg:w="2"/><text x="87.8588%" y="991.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for i64&gt;::from_str (1 samples, 0.04%)</title><rect x="87.6502%" y="965" width="0.0414%" height="15" fill="rgb(230,197,49)" fg:x="2115" fg:w="1"/><text x="87.9002%" y="975.50"></text></g><g><title>core::num::from_str_radix (1 samples, 0.04%)</title><rect x="87.6502%" y="949" width="0.0414%" height="15" fill="rgb(239,141,16)" fg:x="2115" fg:w="1"/><text x="87.9002%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.04%)</title><rect x="87.7331%" y="981" width="0.0414%" height="15" fill="rgb(225,105,43)" fg:x="2117" fg:w="1"/><text x="87.9831%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.04%)</title><rect x="87.7331%" y="965" width="0.0414%" height="15" fill="rgb(214,131,14)" fg:x="2117" fg:w="1"/><text x="87.9831%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.04%)</title><rect x="87.7331%" y="949" width="0.0414%" height="15" fill="rgb(229,177,11)" fg:x="2117" fg:w="1"/><text x="87.9831%" y="959.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="87.7331%" y="933" width="0.0414%" height="15" fill="rgb(231,180,14)" fg:x="2117" fg:w="1"/><text x="87.9831%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.04%)</title><rect x="87.7331%" y="917" width="0.0414%" height="15" fill="rgb(232,88,2)" fg:x="2117" fg:w="1"/><text x="87.9831%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="87.7746%" y="949" width="0.0414%" height="15" fill="rgb(205,220,8)" fg:x="2118" fg:w="1"/><text x="88.0246%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_parser::lite_parse::LitePipeline]&gt; (1 samples, 0.04%)</title><rect x="87.7746%" y="933" width="0.0414%" height="15" fill="rgb(225,23,53)" fg:x="2118" fg:w="1"/><text x="88.0246%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_parser::lite_parse::LiteBlock&gt; (2 samples, 0.08%)</title><rect x="87.7746%" y="981" width="0.0829%" height="15" fill="rgb(213,62,29)" fg:x="2118" fg:w="2"/><text x="88.0246%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_parser::lite_parse::LitePipeline&gt;&gt; (2 samples, 0.08%)</title><rect x="87.7746%" y="965" width="0.0829%" height="15" fill="rgb(227,75,7)" fg:x="2118" fg:w="2"/><text x="88.0246%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;nu_parser::lite_parse::LitePipeline&gt;&gt; (1 samples, 0.04%)</title><rect x="87.8160%" y="949" width="0.0414%" height="15" fill="rgb(207,105,14)" fg:x="2119" fg:w="1"/><text x="88.0660%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="87.8160%" y="933" width="0.0414%" height="15" fill="rgb(245,62,29)" fg:x="2119" fg:w="1"/><text x="88.0660%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="87.8160%" y="917" width="0.0414%" height="15" fill="rgb(236,202,4)" fg:x="2119" fg:w="1"/><text x="88.0660%" y="927.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="87.8160%" y="901" width="0.0414%" height="15" fill="rgb(250,67,1)" fg:x="2119" fg:w="1"/><text x="88.0660%" y="911.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (1 samples, 0.04%)</title><rect x="87.8160%" y="885" width="0.0414%" height="15" fill="rgb(253,115,44)" fg:x="2119" fg:w="1"/><text x="88.0660%" y="895.50"></text></g><g><title>nu_parser::parser::parse_list_expression (6 samples, 0.25%)</title><rect x="87.6917%" y="997" width="0.2487%" height="15" fill="rgb(251,139,18)" fg:x="2116" fg:w="6"/><text x="87.9417%" y="1007.50"></text></g><g><title>nu_parser::lex::lex (2 samples, 0.08%)</title><rect x="87.8574%" y="981" width="0.0829%" height="15" fill="rgb(218,22,32)" fg:x="2120" fg:w="2"/><text x="88.1074%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::contains (2 samples, 0.08%)</title><rect x="87.8574%" y="965" width="0.0829%" height="15" fill="rgb(243,53,5)" fg:x="2120" fg:w="2"/><text x="88.1074%" y="975.50"></text></g><g><title>&lt;u8 as core::slice::cmp::SliceContains&gt;::slice_contains (2 samples, 0.08%)</title><rect x="87.8574%" y="949" width="0.0829%" height="15" fill="rgb(227,56,16)" fg:x="2120" fg:w="2"/><text x="88.1074%" y="959.50"></text></g><g><title>core::slice::memchr::memchr (2 samples, 0.08%)</title><rect x="87.8574%" y="933" width="0.0829%" height="15" fill="rgb(245,53,0)" fg:x="2120" fg:w="2"/><text x="88.1074%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (2 samples, 0.08%)</title><rect x="87.8574%" y="917" width="0.0829%" height="15" fill="rgb(216,170,35)" fg:x="2120" fg:w="2"/><text x="88.1074%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="87.8989%" y="901" width="0.0414%" height="15" fill="rgb(211,200,8)" fg:x="2121" fg:w="1"/><text x="88.1489%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="87.8989%" y="885" width="0.0414%" height="15" fill="rgb(228,204,44)" fg:x="2121" fg:w="1"/><text x="88.1489%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (2 samples, 0.08%)</title><rect x="87.9818%" y="789" width="0.0829%" height="15" fill="rgb(214,121,17)" fg:x="2123" fg:w="2"/><text x="88.2318%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.12%)</title><rect x="87.9818%" y="981" width="0.1243%" height="15" fill="rgb(233,64,38)" fg:x="2123" fg:w="3"/><text x="88.2318%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (3 samples, 0.12%)</title><rect x="87.9818%" y="965" width="0.1243%" height="15" fill="rgb(253,54,19)" fg:x="2123" fg:w="3"/><text x="88.2318%" y="975.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.12%)</title><rect x="87.9818%" y="949" width="0.1243%" height="15" fill="rgb(253,94,18)" fg:x="2123" fg:w="3"/><text x="88.2318%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.12%)</title><rect x="87.9818%" y="933" width="0.1243%" height="15" fill="rgb(227,57,52)" fg:x="2123" fg:w="3"/><text x="88.2318%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.12%)</title><rect x="87.9818%" y="917" width="0.1243%" height="15" fill="rgb(230,228,50)" fg:x="2123" fg:w="3"/><text x="88.2318%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.12%)</title><rect x="87.9818%" y="901" width="0.1243%" height="15" fill="rgb(217,205,27)" fg:x="2123" fg:w="3"/><text x="88.2318%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.12%)</title><rect x="87.9818%" y="885" width="0.1243%" height="15" fill="rgb(252,71,50)" fg:x="2123" fg:w="3"/><text x="88.2318%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.12%)</title><rect x="87.9818%" y="869" width="0.1243%" height="15" fill="rgb(209,86,4)" fg:x="2123" fg:w="3"/><text x="88.2318%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.12%)</title><rect x="87.9818%" y="853" width="0.1243%" height="15" fill="rgb(229,94,0)" fg:x="2123" fg:w="3"/><text x="88.2318%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.12%)</title><rect x="87.9818%" y="837" width="0.1243%" height="15" fill="rgb(252,223,21)" fg:x="2123" fg:w="3"/><text x="88.2318%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.12%)</title><rect x="87.9818%" y="821" width="0.1243%" height="15" fill="rgb(230,210,4)" fg:x="2123" fg:w="3"/><text x="88.2318%" y="831.50"></text></g><g><title>core::alloc::layout::Layout::array (3 samples, 0.12%)</title><rect x="87.9818%" y="805" width="0.1243%" height="15" fill="rgb(240,149,38)" fg:x="2123" fg:w="3"/><text x="88.2318%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.04%)</title><rect x="88.0646%" y="789" width="0.0414%" height="15" fill="rgb(254,105,20)" fg:x="2125" fg:w="1"/><text x="88.3146%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;nu_parser::errors::ParseError&gt;&gt; (3 samples, 0.12%)</title><rect x="88.1061%" y="981" width="0.1243%" height="15" fill="rgb(253,87,46)" fg:x="2126" fg:w="3"/><text x="88.3561%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_parser::errors::ParseError&gt; (3 samples, 0.12%)</title><rect x="88.1061%" y="965" width="0.1243%" height="15" fill="rgb(253,116,33)" fg:x="2126" fg:w="3"/><text x="88.3561%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.08%)</title><rect x="88.1475%" y="949" width="0.0829%" height="15" fill="rgb(229,198,5)" fg:x="2127" fg:w="2"/><text x="88.3975%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.08%)</title><rect x="88.1475%" y="933" width="0.0829%" height="15" fill="rgb(242,38,37)" fg:x="2127" fg:w="2"/><text x="88.3975%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.08%)</title><rect x="88.1475%" y="917" width="0.0829%" height="15" fill="rgb(242,69,53)" fg:x="2127" fg:w="2"/><text x="88.3975%" y="927.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="88.1475%" y="901" width="0.0829%" height="15" fill="rgb(249,80,16)" fg:x="2127" fg:w="2"/><text x="88.3975%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.08%)</title><rect x="88.1475%" y="885" width="0.0829%" height="15" fill="rgb(206,128,11)" fg:x="2127" fg:w="2"/><text x="88.3975%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="88.1890%" y="869" width="0.0414%" height="15" fill="rgb(212,35,20)" fg:x="2128" fg:w="1"/><text x="88.4390%" y="879.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (1 samples, 0.04%)</title><rect x="88.1890%" y="853" width="0.0414%" height="15" fill="rgb(236,79,13)" fg:x="2128" fg:w="1"/><text x="88.4390%" y="863.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="88.1890%" y="837" width="0.0414%" height="15" fill="rgb(233,123,3)" fg:x="2128" fg:w="1"/><text x="88.4390%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.08%)</title><rect x="88.2304%" y="789" width="0.0829%" height="15" fill="rgb(214,93,52)" fg:x="2129" fg:w="2"/><text x="88.4804%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="88.2304%" y="773" width="0.0829%" height="15" fill="rgb(251,37,40)" fg:x="2129" fg:w="2"/><text x="88.4804%" y="783.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.04%)</title><rect x="88.3133%" y="789" width="0.0414%" height="15" fill="rgb(227,80,54)" fg:x="2131" fg:w="1"/><text x="88.5633%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="88.3133%" y="773" width="0.0414%" height="15" fill="rgb(254,48,11)" fg:x="2131" fg:w="1"/><text x="88.5633%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.17%)</title><rect x="88.2304%" y="837" width="0.1658%" height="15" fill="rgb(235,193,26)" fg:x="2129" fg:w="4"/><text x="88.4804%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.17%)</title><rect x="88.2304%" y="821" width="0.1658%" height="15" fill="rgb(229,99,21)" fg:x="2129" fg:w="4"/><text x="88.4804%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.17%)</title><rect x="88.2304%" y="805" width="0.1658%" height="15" fill="rgb(211,140,41)" fg:x="2129" fg:w="4"/><text x="88.4804%" y="815.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="88.3547%" y="789" width="0.0414%" height="15" fill="rgb(240,227,30)" fg:x="2132" fg:w="1"/><text x="88.6047%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.21%)</title><rect x="88.2304%" y="965" width="0.2072%" height="15" fill="rgb(215,224,45)" fg:x="2129" fg:w="5"/><text x="88.4804%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (5 samples, 0.21%)</title><rect x="88.2304%" y="949" width="0.2072%" height="15" fill="rgb(206,123,31)" fg:x="2129" fg:w="5"/><text x="88.4804%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (5 samples, 0.21%)</title><rect x="88.2304%" y="933" width="0.2072%" height="15" fill="rgb(210,138,16)" fg:x="2129" fg:w="5"/><text x="88.4804%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (5 samples, 0.21%)</title><rect x="88.2304%" y="917" width="0.2072%" height="15" fill="rgb(228,57,28)" fg:x="2129" fg:w="5"/><text x="88.4804%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.21%)</title><rect x="88.2304%" y="901" width="0.2072%" height="15" fill="rgb(242,170,10)" fg:x="2129" fg:w="5"/><text x="88.4804%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.21%)</title><rect x="88.2304%" y="885" width="0.2072%" height="15" fill="rgb(228,214,39)" fg:x="2129" fg:w="5"/><text x="88.4804%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.21%)</title><rect x="88.2304%" y="869" width="0.2072%" height="15" fill="rgb(218,179,33)" fg:x="2129" fg:w="5"/><text x="88.4804%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.21%)</title><rect x="88.2304%" y="853" width="0.2072%" height="15" fill="rgb(235,193,39)" fg:x="2129" fg:w="5"/><text x="88.4804%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.04%)</title><rect x="88.3962%" y="837" width="0.0414%" height="15" fill="rgb(219,221,36)" fg:x="2133" fg:w="1"/><text x="88.6462%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.04%)</title><rect x="88.3962%" y="821" width="0.0414%" height="15" fill="rgb(248,218,19)" fg:x="2133" fg:w="1"/><text x="88.6462%" y="831.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="88.4376%" y="965" width="0.0414%" height="15" fill="rgb(205,50,9)" fg:x="2134" fg:w="1"/><text x="88.6876%" y="975.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (3 samples, 0.12%)</title><rect x="88.4791%" y="965" width="0.1243%" height="15" fill="rgb(238,81,28)" fg:x="2135" fg:w="3"/><text x="88.7291%" y="975.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.12%)</title><rect x="88.4791%" y="949" width="0.1243%" height="15" fill="rgb(235,110,19)" fg:x="2135" fg:w="3"/><text x="88.7291%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.04%)</title><rect x="88.5620%" y="933" width="0.0414%" height="15" fill="rgb(214,7,14)" fg:x="2137" fg:w="1"/><text x="88.8120%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="88.5620%" y="917" width="0.0414%" height="15" fill="rgb(211,77,3)" fg:x="2137" fg:w="1"/><text x="88.8120%" y="927.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="88.5620%" y="901" width="0.0414%" height="15" fill="rgb(229,5,9)" fg:x="2137" fg:w="1"/><text x="88.8120%" y="911.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="88.5620%" y="885" width="0.0414%" height="15" fill="rgb(225,90,11)" fg:x="2137" fg:w="1"/><text x="88.8120%" y="895.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.04%)</title><rect x="88.5620%" y="869" width="0.0414%" height="15" fill="rgb(242,56,8)" fg:x="2137" fg:w="1"/><text x="88.8120%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.04%)</title><rect x="88.5620%" y="853" width="0.0414%" height="15" fill="rgb(249,212,39)" fg:x="2137" fg:w="1"/><text x="88.8120%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.08%)</title><rect x="88.6448%" y="869" width="0.0829%" height="15" fill="rgb(236,90,9)" fg:x="2139" fg:w="2"/><text x="88.8948%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="88.6863%" y="853" width="0.0414%" height="15" fill="rgb(206,88,35)" fg:x="2140" fg:w="1"/><text x="88.9363%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.04%)</title><rect x="88.6863%" y="837" width="0.0414%" height="15" fill="rgb(205,126,30)" fg:x="2140" fg:w="1"/><text x="88.9363%" y="847.50"></text></g><g><title>core::cmp::min (1 samples, 0.04%)</title><rect x="88.7692%" y="821" width="0.0414%" height="15" fill="rgb(230,176,12)" fg:x="2142" fg:w="1"/><text x="89.0192%" y="831.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.04%)</title><rect x="88.7692%" y="805" width="0.0414%" height="15" fill="rgb(243,19,9)" fg:x="2142" fg:w="1"/><text x="89.0192%" y="815.50"></text></g><g><title>core::cmp::min_by (1 samples, 0.04%)</title><rect x="88.7692%" y="789" width="0.0414%" height="15" fill="rgb(245,171,17)" fg:x="2142" fg:w="1"/><text x="89.0192%" y="799.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.04%)</title><rect x="88.7692%" y="773" width="0.0414%" height="15" fill="rgb(227,52,21)" fg:x="2142" fg:w="1"/><text x="89.0192%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (3 samples, 0.12%)</title><rect x="88.7277%" y="869" width="0.1243%" height="15" fill="rgb(238,69,14)" fg:x="2141" fg:w="3"/><text x="88.9777%" y="879.50"></text></g><g><title>core::iter::adapters::zip::Zip&lt;A,B&gt;::new (3 samples, 0.12%)</title><rect x="88.7277%" y="853" width="0.1243%" height="15" fill="rgb(241,156,39)" fg:x="2141" fg:w="3"/><text x="88.9777%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::new (3 samples, 0.12%)</title><rect x="88.7277%" y="837" width="0.1243%" height="15" fill="rgb(212,227,28)" fg:x="2141" fg:w="3"/><text x="88.9777%" y="847.50"></text></g><g><title>core::iter::adapters::zip::TrustedRandomAccessNoCoerce::size (1 samples, 0.04%)</title><rect x="88.8106%" y="821" width="0.0414%" height="15" fill="rgb(209,118,27)" fg:x="2143" fg:w="1"/><text x="89.0606%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.04%)</title><rect x="88.8106%" y="805" width="0.0414%" height="15" fill="rgb(226,102,5)" fg:x="2143" fg:w="1"/><text x="89.0606%" y="815.50"></text></g><g><title>core::str::&lt;impl str&gt;::parse (7 samples, 0.29%)</title><rect x="88.6034%" y="965" width="0.2901%" height="15" fill="rgb(223,34,3)" fg:x="2138" fg:w="7"/><text x="88.8534%" y="975.50"></text></g><g><title>core::num::dec2flt::&lt;impl core::str::traits::FromStr for f64&gt;::from_str (7 samples, 0.29%)</title><rect x="88.6034%" y="949" width="0.2901%" height="15" fill="rgb(221,81,38)" fg:x="2138" fg:w="7"/><text x="88.8534%" y="959.50"></text></g><g><title>core::num::dec2flt::dec2flt (7 samples, 0.29%)</title><rect x="88.6034%" y="933" width="0.2901%" height="15" fill="rgb(236,219,28)" fg:x="2138" fg:w="7"/><text x="88.8534%" y="943.50"></text></g><g><title>core::num::dec2flt::parse::parse_inf_nan (7 samples, 0.29%)</title><rect x="88.6034%" y="917" width="0.2901%" height="15" fill="rgb(213,200,14)" fg:x="2138" fg:w="7"/><text x="88.8534%" y="927.50"></text></g><g><title>core::num::dec2flt::parse::parse_partial_inf_nan (7 samples, 0.29%)</title><rect x="88.6034%" y="901" width="0.2901%" height="15" fill="rgb(240,33,19)" fg:x="2138" fg:w="7"/><text x="88.8534%" y="911.50"></text></g><g><title>core::num::dec2flt::common::ByteSlice::eq_ignore_case (7 samples, 0.29%)</title><rect x="88.6034%" y="885" width="0.2901%" height="15" fill="rgb(233,113,27)" fg:x="2138" fg:w="7"/><text x="88.8534%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (1 samples, 0.04%)</title><rect x="88.8521%" y="869" width="0.0414%" height="15" fill="rgb(220,221,18)" fg:x="2144" fg:w="1"/><text x="89.1021%" y="879.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="88.8521%" y="853" width="0.0414%" height="15" fill="rgb(238,92,8)" fg:x="2144" fg:w="1"/><text x="89.1021%" y="863.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (1 samples, 0.04%)</title><rect x="88.8521%" y="837" width="0.0414%" height="15" fill="rgb(222,164,16)" fg:x="2144" fg:w="1"/><text x="89.1021%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="88.8521%" y="821" width="0.0414%" height="15" fill="rgb(241,119,3)" fg:x="2144" fg:w="1"/><text x="89.1021%" y="831.50"></text></g><g><title>nu_parser::parser::parse_float (17 samples, 0.70%)</title><rect x="88.2304%" y="981" width="0.7045%" height="15" fill="rgb(241,44,8)" fg:x="2129" fg:w="17"/><text x="88.4804%" y="991.50"></text></g><g><title>nu_parser::parser::garbage (1 samples, 0.04%)</title><rect x="88.8935%" y="965" width="0.0414%" height="15" fill="rgb(230,36,40)" fg:x="2145" fg:w="1"/><text x="89.1435%" y="975.50"></text></g><g><title>nu_protocol::ast::expression::Expression::garbage (1 samples, 0.04%)</title><rect x="88.8935%" y="949" width="0.0414%" height="15" fill="rgb(243,16,36)" fg:x="2145" fg:w="1"/><text x="89.1435%" y="959.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="88.8935%" y="933" width="0.0414%" height="15" fill="rgb(231,4,26)" fg:x="2145" fg:w="1"/><text x="89.1435%" y="943.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.12%)</title><rect x="88.9764%" y="965" width="0.1243%" height="15" fill="rgb(240,9,31)" fg:x="2147" fg:w="3"/><text x="89.2264%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (3 samples, 0.12%)</title><rect x="88.9764%" y="949" width="0.1243%" height="15" fill="rgb(207,173,15)" fg:x="2147" fg:w="3"/><text x="89.2264%" y="959.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (3 samples, 0.12%)</title><rect x="88.9764%" y="933" width="0.1243%" height="15" fill="rgb(224,192,53)" fg:x="2147" fg:w="3"/><text x="89.2264%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (3 samples, 0.12%)</title><rect x="88.9764%" y="917" width="0.1243%" height="15" fill="rgb(223,67,28)" fg:x="2147" fg:w="3"/><text x="89.2264%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (3 samples, 0.12%)</title><rect x="88.9764%" y="901" width="0.1243%" height="15" fill="rgb(211,20,47)" fg:x="2147" fg:w="3"/><text x="89.2264%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.12%)</title><rect x="88.9764%" y="885" width="0.1243%" height="15" fill="rgb(240,228,2)" fg:x="2147" fg:w="3"/><text x="89.2264%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.12%)</title><rect x="88.9764%" y="869" width="0.1243%" height="15" fill="rgb(248,151,12)" fg:x="2147" fg:w="3"/><text x="89.2264%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.12%)</title><rect x="88.9764%" y="853" width="0.1243%" height="15" fill="rgb(244,8,39)" fg:x="2147" fg:w="3"/><text x="89.2264%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.12%)</title><rect x="88.9764%" y="837" width="0.1243%" height="15" fill="rgb(222,26,8)" fg:x="2147" fg:w="3"/><text x="89.2264%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.12%)</title><rect x="88.9764%" y="821" width="0.1243%" height="15" fill="rgb(213,106,44)" fg:x="2147" fg:w="3"/><text x="89.2264%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.12%)</title><rect x="88.9764%" y="805" width="0.1243%" height="15" fill="rgb(214,129,20)" fg:x="2147" fg:w="3"/><text x="89.2264%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.08%)</title><rect x="89.0178%" y="789" width="0.0829%" height="15" fill="rgb(212,32,13)" fg:x="2148" fg:w="2"/><text x="89.2678%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="89.0178%" y="773" width="0.0829%" height="15" fill="rgb(208,168,33)" fg:x="2148" fg:w="2"/><text x="89.2678%" y="783.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (2 samples, 0.08%)</title><rect x="89.0178%" y="757" width="0.0829%" height="15" fill="rgb(231,207,8)" fg:x="2148" fg:w="2"/><text x="89.2678%" y="767.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (2 samples, 0.08%)</title><rect x="89.0178%" y="741" width="0.0829%" height="15" fill="rgb(235,219,23)" fg:x="2148" fg:w="2"/><text x="89.2678%" y="751.50"></text></g><g><title>core::ptr::metadata::from_raw_parts_mut (2 samples, 0.08%)</title><rect x="89.0178%" y="725" width="0.0829%" height="15" fill="rgb(226,216,26)" fg:x="2148" fg:w="2"/><text x="89.2678%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="89.1007%" y="965" width="0.0414%" height="15" fill="rgb(239,137,16)" fg:x="2150" fg:w="1"/><text x="89.3507%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.21%)</title><rect x="89.1421%" y="949" width="0.2072%" height="15" fill="rgb(207,12,36)" fg:x="2151" fg:w="5"/><text x="89.3921%" y="959.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.17%)</title><rect x="89.1836%" y="933" width="0.1658%" height="15" fill="rgb(210,214,24)" fg:x="2152" fg:w="4"/><text x="89.4336%" y="943.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.17%)</title><rect x="89.1836%" y="917" width="0.1658%" height="15" fill="rgb(206,56,30)" fg:x="2152" fg:w="4"/><text x="89.4336%" y="927.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="89.2665%" y="901" width="0.0829%" height="15" fill="rgb(228,143,26)" fg:x="2154" fg:w="2"/><text x="89.5165%" y="911.50"></text></g><g><title>nu_parser::parser::parse_number (36 samples, 1.49%)</title><rect x="87.9403%" y="997" width="1.4919%" height="15" fill="rgb(216,218,46)" fg:x="2122" fg:w="36"/><text x="88.1903%" y="1007.50"></text></g><g><title>nu_parser::parser::parse_int (12 samples, 0.50%)</title><rect x="88.9349%" y="981" width="0.4973%" height="15" fill="rgb(206,6,19)" fg:x="2146" fg:w="12"/><text x="89.1849%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::strip_prefix (7 samples, 0.29%)</title><rect x="89.1421%" y="965" width="0.2901%" height="15" fill="rgb(239,177,51)" fg:x="2151" fg:w="7"/><text x="89.3921%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (2 samples, 0.08%)</title><rect x="89.3494%" y="949" width="0.0829%" height="15" fill="rgb(216,55,25)" fg:x="2156" fg:w="2"/><text x="89.5994%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (2 samples, 0.08%)</title><rect x="89.3494%" y="933" width="0.0829%" height="15" fill="rgb(231,163,29)" fg:x="2156" fg:w="2"/><text x="89.5994%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="89.3494%" y="917" width="0.0829%" height="15" fill="rgb(232,149,50)" fg:x="2156" fg:w="2"/><text x="89.5994%" y="927.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="89.3494%" y="901" width="0.0829%" height="15" fill="rgb(223,142,48)" fg:x="2156" fg:w="2"/><text x="89.5994%" y="911.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="89.3494%" y="885" width="0.0829%" height="15" fill="rgb(245,83,23)" fg:x="2156" fg:w="2"/><text x="89.5994%" y="895.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="89.3908%" y="869" width="0.0414%" height="15" fill="rgb(224,63,2)" fg:x="2157" fg:w="1"/><text x="89.6408%" y="879.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="89.3908%" y="853" width="0.0414%" height="15" fill="rgb(218,65,53)" fg:x="2157" fg:w="1"/><text x="89.6408%" y="863.50"></text></g><g><title>nu_parser::parser::parse_range (1 samples, 0.04%)</title><rect x="89.4322%" y="997" width="0.0414%" height="15" fill="rgb(221,84,29)" fg:x="2158" fg:w="1"/><text x="89.6822%" y="1007.50"></text></g><g><title>__rust_probestack (1 samples, 0.04%)</title><rect x="89.4322%" y="981" width="0.0414%" height="15" fill="rgb(234,0,32)" fg:x="2158" fg:w="1"/><text x="89.6822%" y="991.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="89.5566%" y="981" width="0.0829%" height="15" fill="rgb(206,20,16)" fg:x="2161" fg:w="2"/><text x="89.8066%" y="991.50"></text></g><g><title>alloc::string::String::from_utf8 (1 samples, 0.04%)</title><rect x="89.6809%" y="965" width="0.0414%" height="15" fill="rgb(244,172,18)" fg:x="2164" fg:w="1"/><text x="89.9309%" y="975.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.04%)</title><rect x="89.6809%" y="949" width="0.0414%" height="15" fill="rgb(254,133,1)" fg:x="2164" fg:w="1"/><text x="89.9309%" y="959.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.04%)</title><rect x="89.6809%" y="933" width="0.0414%" height="15" fill="rgb(222,206,41)" fg:x="2164" fg:w="1"/><text x="89.9309%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.04%)</title><rect x="89.7223%" y="933" width="0.0414%" height="15" fill="rgb(212,3,42)" fg:x="2165" fg:w="1"/><text x="89.9723%" y="943.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.04%)</title><rect x="89.7223%" y="917" width="0.0414%" height="15" fill="rgb(241,11,4)" fg:x="2165" fg:w="1"/><text x="89.9723%" y="927.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.04%)</title><rect x="89.7223%" y="901" width="0.0414%" height="15" fill="rgb(205,19,26)" fg:x="2165" fg:w="1"/><text x="89.9723%" y="911.50"></text></g><g><title>core::mem::size_of_val (1 samples, 0.04%)</title><rect x="89.7223%" y="885" width="0.0414%" height="15" fill="rgb(210,179,32)" fg:x="2165" fg:w="1"/><text x="89.9723%" y="895.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::ends_with (4 samples, 0.17%)</title><rect x="89.7223%" y="949" width="0.1658%" height="15" fill="rgb(227,116,49)" fg:x="2165" fg:w="4"/><text x="89.9723%" y="959.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (3 samples, 0.12%)</title><rect x="89.7638%" y="933" width="0.1243%" height="15" fill="rgb(211,146,6)" fg:x="2166" fg:w="3"/><text x="90.0138%" y="943.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (3 samples, 0.12%)</title><rect x="89.7638%" y="917" width="0.1243%" height="15" fill="rgb(219,44,39)" fg:x="2166" fg:w="3"/><text x="90.0138%" y="927.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (2 samples, 0.08%)</title><rect x="89.8052%" y="901" width="0.0829%" height="15" fill="rgb(234,128,11)" fg:x="2167" fg:w="2"/><text x="90.0552%" y="911.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="89.8467%" y="885" width="0.0414%" height="15" fill="rgb(220,183,53)" fg:x="2168" fg:w="1"/><text x="90.0967%" y="895.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="89.8467%" y="869" width="0.0414%" height="15" fill="rgb(213,219,32)" fg:x="2168" fg:w="1"/><text x="90.0967%" y="879.50"></text></g><g><title>nu_parser::parser::trim_quotes (6 samples, 0.25%)</title><rect x="89.7223%" y="965" width="0.2487%" height="15" fill="rgb(232,156,16)" fg:x="2165" fg:w="6"/><text x="89.9723%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (2 samples, 0.08%)</title><rect x="89.8881%" y="949" width="0.0829%" height="15" fill="rgb(246,135,34)" fg:x="2169" fg:w="2"/><text x="90.1381%" y="959.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (2 samples, 0.08%)</title><rect x="89.8881%" y="933" width="0.0829%" height="15" fill="rgb(241,99,0)" fg:x="2169" fg:w="2"/><text x="90.1381%" y="943.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="89.9295%" y="917" width="0.0414%" height="15" fill="rgb(222,103,45)" fg:x="2170" fg:w="1"/><text x="90.1795%" y="927.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.04%)</title><rect x="89.9295%" y="901" width="0.0414%" height="15" fill="rgb(212,57,4)" fg:x="2170" fg:w="1"/><text x="90.1795%" y="911.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="89.9295%" y="885" width="0.0414%" height="15" fill="rgb(215,68,47)" fg:x="2170" fg:w="1"/><text x="90.1795%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (4 samples, 0.17%)</title><rect x="90.4683%" y="933" width="0.1658%" height="15" fill="rgb(230,84,2)" fg:x="2183" fg:w="4"/><text x="90.7183%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.04%)</title><rect x="90.6341%" y="901" width="0.0414%" height="15" fill="rgb(220,102,14)" fg:x="2187" fg:w="1"/><text x="90.8841%" y="911.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="90.6341%" y="885" width="0.0414%" height="15" fill="rgb(240,10,32)" fg:x="2187" fg:w="1"/><text x="90.8841%" y="895.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="90.6755%" y="853" width="0.0414%" height="15" fill="rgb(215,47,27)" fg:x="2188" fg:w="1"/><text x="90.9255%" y="863.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="90.6755%" y="837" width="0.0414%" height="15" fill="rgb(233,188,43)" fg:x="2188" fg:w="1"/><text x="90.9255%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.08%)</title><rect x="90.6755%" y="885" width="0.0829%" height="15" fill="rgb(253,190,1)" fg:x="2188" fg:w="2"/><text x="90.9255%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.08%)</title><rect x="90.6755%" y="869" width="0.0829%" height="15" fill="rgb(206,114,52)" fg:x="2188" fg:w="2"/><text x="90.9255%" y="879.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="90.7169%" y="853" width="0.0414%" height="15" fill="rgb(233,120,37)" fg:x="2189" fg:w="1"/><text x="90.9669%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="90.7169%" y="837" width="0.0414%" height="15" fill="rgb(214,52,39)" fg:x="2189" fg:w="1"/><text x="90.9669%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="90.7169%" y="821" width="0.0414%" height="15" fill="rgb(223,80,29)" fg:x="2189" fg:w="1"/><text x="90.9669%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.29%)</title><rect x="90.7584%" y="885" width="0.2901%" height="15" fill="rgb(230,101,40)" fg:x="2190" fg:w="7"/><text x="91.0084%" y="895.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.29%)</title><rect x="90.7584%" y="869" width="0.2901%" height="15" fill="rgb(219,211,8)" fg:x="2190" fg:w="7"/><text x="91.0084%" y="879.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.29%)</title><rect x="90.7584%" y="853" width="0.2901%" height="15" fill="rgb(252,126,28)" fg:x="2190" fg:w="7"/><text x="91.0084%" y="863.50"></text></g><g><title>realloc (6 samples, 0.25%)</title><rect x="90.7998%" y="837" width="0.2487%" height="15" fill="rgb(215,56,38)" fg:x="2191" fg:w="6"/><text x="91.0498%" y="847.50"></text></g><g><title>[libc.so.6] (5 samples, 0.21%)</title><rect x="90.8413%" y="821" width="0.2072%" height="15" fill="rgb(249,55,44)" fg:x="2192" fg:w="5"/><text x="91.0913%" y="831.50"></text></g><g><title>[libc.so.6] (5 samples, 0.21%)</title><rect x="90.8413%" y="805" width="0.2072%" height="15" fill="rgb(220,221,32)" fg:x="2192" fg:w="5"/><text x="91.0913%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.41%)</title><rect x="90.6755%" y="901" width="0.4144%" height="15" fill="rgb(212,216,41)" fg:x="2188" fg:w="10"/><text x="90.9255%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="91.0485%" y="885" width="0.0414%" height="15" fill="rgb(228,213,43)" fg:x="2197" fg:w="1"/><text x="91.2985%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.04%)</title><rect x="91.0899%" y="885" width="0.0414%" height="15" fill="rgb(211,31,26)" fg:x="2198" fg:w="1"/><text x="91.3399%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="91.1314%" y="885" width="0.0414%" height="15" fill="rgb(229,202,19)" fg:x="2199" fg:w="1"/><text x="91.3814%" y="895.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (3 samples, 0.12%)</title><rect x="91.1728%" y="885" width="0.1243%" height="15" fill="rgb(229,105,46)" fg:x="2200" fg:w="3"/><text x="91.4228%" y="895.50"></text></g><g><title>core::alloc::layout::Layout::array (6 samples, 0.25%)</title><rect x="91.0899%" y="901" width="0.2487%" height="15" fill="rgb(235,108,1)" fg:x="2198" fg:w="6"/><text x="91.3399%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.04%)</title><rect x="91.2971%" y="885" width="0.0414%" height="15" fill="rgb(245,111,35)" fg:x="2203" fg:w="1"/><text x="91.5471%" y="895.50"></text></g><g><title>core::cmp::max (1 samples, 0.04%)</title><rect x="91.3386%" y="901" width="0.0414%" height="15" fill="rgb(219,185,31)" fg:x="2204" fg:w="1"/><text x="91.5886%" y="911.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.04%)</title><rect x="91.3386%" y="885" width="0.0414%" height="15" fill="rgb(214,4,43)" fg:x="2204" fg:w="1"/><text x="91.5886%" y="895.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.04%)</title><rect x="91.3386%" y="869" width="0.0414%" height="15" fill="rgb(235,227,40)" fg:x="2204" fg:w="1"/><text x="91.5886%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (21 samples, 0.87%)</title><rect x="90.6341%" y="933" width="0.8703%" height="15" fill="rgb(230,88,30)" fg:x="2187" fg:w="21"/><text x="90.8841%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.87%)</title><rect x="90.6341%" y="917" width="0.8703%" height="15" fill="rgb(216,217,1)" fg:x="2187" fg:w="21"/><text x="90.8841%" y="927.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.12%)</title><rect x="91.3800%" y="901" width="0.1243%" height="15" fill="rgb(248,139,50)" fg:x="2205" fg:w="3"/><text x="91.6300%" y="911.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (2 samples, 0.08%)</title><rect x="91.4215%" y="885" width="0.0829%" height="15" fill="rgb(233,1,21)" fg:x="2206" fg:w="2"/><text x="91.6715%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (3 samples, 0.12%)</title><rect x="91.5044%" y="933" width="0.1243%" height="15" fill="rgb(215,183,12)" fg:x="2208" fg:w="3"/><text x="91.7544%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (3 samples, 0.12%)</title><rect x="91.5044%" y="917" width="0.1243%" height="15" fill="rgb(229,104,42)" fg:x="2208" fg:w="3"/><text x="91.7544%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.04%)</title><rect x="91.5872%" y="901" width="0.0414%" height="15" fill="rgb(243,34,48)" fg:x="2210" fg:w="1"/><text x="91.8372%" y="911.50"></text></g><g><title>nu_parser::parser::unescape_unquote_string (49 samples, 2.03%)</title><rect x="89.6395%" y="981" width="2.0307%" height="15" fill="rgb(239,11,44)" fg:x="2163" fg:w="49"/><text x="89.8895%" y="991.50">n..</text></g><g><title>nu_parser::parser::unescape_string (41 samples, 1.70%)</title><rect x="89.9710%" y="965" width="1.6991%" height="15" fill="rgb(231,98,35)" fg:x="2171" fg:w="41"/><text x="90.2210%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (34 samples, 1.41%)</title><rect x="90.2611%" y="949" width="1.4090%" height="15" fill="rgb(233,28,25)" fg:x="2178" fg:w="34"/><text x="90.5111%" y="959.50"></text></g><g><title>core::ptr::write (1 samples, 0.04%)</title><rect x="91.6287%" y="933" width="0.0414%" height="15" fill="rgb(234,123,11)" fg:x="2211" fg:w="1"/><text x="91.8787%" y="943.50"></text></g><g><title>nu_parser::parser::parse_string (54 samples, 2.24%)</title><rect x="89.4737%" y="997" width="2.2379%" height="15" fill="rgb(220,69,3)" fg:x="2159" fg:w="54"/><text x="89.7237%" y="1007.50">n..</text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (1 samples, 0.04%)</title><rect x="91.6701%" y="981" width="0.0414%" height="15" fill="rgb(214,64,36)" fg:x="2212" fg:w="1"/><text x="91.9201%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="91.6701%" y="965" width="0.0414%" height="15" fill="rgb(211,138,32)" fg:x="2212" fg:w="1"/><text x="91.9201%" y="975.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="91.6701%" y="949" width="0.0414%" height="15" fill="rgb(213,118,47)" fg:x="2212" fg:w="1"/><text x="91.9201%" y="959.50"></text></g><g><title>__rust_probestack (1 samples, 0.04%)</title><rect x="91.7116%" y="981" width="0.0414%" height="15" fill="rgb(243,124,49)" fg:x="2213" fg:w="1"/><text x="91.9616%" y="991.50"></text></g><g><title>nu_parser::parser::parse_value (2 samples, 0.08%)</title><rect x="91.7116%" y="997" width="0.0829%" height="15" fill="rgb(221,30,28)" fg:x="2213" fg:w="2"/><text x="91.9616%" y="1007.50"></text></g><g><title>nu_parser::parser::parse_value (1 samples, 0.04%)</title><rect x="91.7530%" y="981" width="0.0414%" height="15" fill="rgb(246,37,13)" fg:x="2214" fg:w="1"/><text x="92.0030%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="91.9602%" y="965" width="0.0414%" height="15" fill="rgb(249,66,14)" fg:x="2219" fg:w="1"/><text x="92.2102%" y="975.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="91.9602%" y="949" width="0.0414%" height="15" fill="rgb(213,166,5)" fg:x="2219" fg:w="1"/><text x="92.2102%" y="959.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="91.9602%" y="933" width="0.0414%" height="15" fill="rgb(221,66,24)" fg:x="2219" fg:w="1"/><text x="92.2102%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.04%)</title><rect x="91.9602%" y="917" width="0.0414%" height="15" fill="rgb(210,132,17)" fg:x="2219" fg:w="1"/><text x="92.2102%" y="927.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (5 samples, 0.21%)</title><rect x="91.9602%" y="981" width="0.2072%" height="15" fill="rgb(243,202,5)" fg:x="2219" fg:w="5"/><text x="92.2102%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (4 samples, 0.17%)</title><rect x="92.0017%" y="965" width="0.1658%" height="15" fill="rgb(233,70,48)" fg:x="2220" fg:w="4"/><text x="92.2517%" y="975.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (3 samples, 0.12%)</title><rect x="92.0431%" y="949" width="0.1243%" height="15" fill="rgb(238,41,26)" fg:x="2221" fg:w="3"/><text x="92.2931%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.08%)</title><rect x="92.2089%" y="965" width="0.0829%" height="15" fill="rgb(241,19,31)" fg:x="2225" fg:w="2"/><text x="92.4589%" y="975.50"></text></g><g><title>core::slice::raw::from_raw_parts (2 samples, 0.08%)</title><rect x="92.2089%" y="949" width="0.0829%" height="15" fill="rgb(214,76,10)" fg:x="2225" fg:w="2"/><text x="92.4589%" y="959.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="92.2503%" y="933" width="0.0414%" height="15" fill="rgb(254,202,22)" fg:x="2226" fg:w="1"/><text x="92.5003%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (11 samples, 0.46%)</title><rect x="92.1674%" y="981" width="0.4559%" height="15" fill="rgb(214,72,24)" fg:x="2224" fg:w="11"/><text x="92.4174%" y="991.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (8 samples, 0.33%)</title><rect x="92.2918%" y="965" width="0.3315%" height="15" fill="rgb(221,92,46)" fg:x="2227" fg:w="8"/><text x="92.5418%" y="975.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (7 samples, 0.29%)</title><rect x="92.3332%" y="949" width="0.2901%" height="15" fill="rgb(246,13,50)" fg:x="2228" fg:w="7"/><text x="92.5832%" y="959.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (7 samples, 0.29%)</title><rect x="92.3332%" y="933" width="0.2901%" height="15" fill="rgb(240,165,38)" fg:x="2228" fg:w="7"/><text x="92.5832%" y="943.50"></text></g><g><title>core::ptr::slice_from_raw_parts (4 samples, 0.17%)</title><rect x="92.4575%" y="917" width="0.1658%" height="15" fill="rgb(241,24,51)" fg:x="2231" fg:w="4"/><text x="92.7075%" y="927.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (1 samples, 0.04%)</title><rect x="92.5818%" y="901" width="0.0414%" height="15" fill="rgb(227,51,44)" fg:x="2234" fg:w="1"/><text x="92.8318%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="92.7476%" y="949" width="0.0414%" height="15" fill="rgb(231,121,3)" fg:x="2238" fg:w="1"/><text x="92.9976%" y="959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.21%)</title><rect x="92.6233%" y="981" width="0.2072%" height="15" fill="rgb(245,3,41)" fg:x="2235" fg:w="5"/><text x="92.8733%" y="991.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (3 samples, 0.12%)</title><rect x="92.7062%" y="965" width="0.1243%" height="15" fill="rgb(214,13,26)" fg:x="2237" fg:w="3"/><text x="92.9562%" y="975.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="92.7891%" y="949" width="0.0414%" height="15" fill="rgb(252,75,11)" fg:x="2239" fg:w="1"/><text x="93.0391%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.17%)</title><rect x="92.9963%" y="965" width="0.1658%" height="15" fill="rgb(218,226,17)" fg:x="2244" fg:w="4"/><text x="93.2463%" y="975.50"></text></g><g><title>core::slice::raw::from_raw_parts (4 samples, 0.17%)</title><rect x="92.9963%" y="949" width="0.1658%" height="15" fill="rgb(248,89,38)" fg:x="2244" fg:w="4"/><text x="93.2463%" y="959.50"></text></g><g><title>core::ptr::slice_from_raw_parts (4 samples, 0.17%)</title><rect x="92.9963%" y="933" width="0.1658%" height="15" fill="rgb(237,73,46)" fg:x="2244" fg:w="4"/><text x="93.2463%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.04%)</title><rect x="93.1206%" y="917" width="0.0414%" height="15" fill="rgb(242,78,33)" fg:x="2247" fg:w="1"/><text x="93.3706%" y="927.50"></text></g><g><title>nu_parser::parser::parse_value (302 samples, 12.52%)</title><rect x="80.7294%" y="1013" width="12.5155%" height="15" fill="rgb(235,60,3)" fg:x="1948" fg:w="302"/><text x="80.9794%" y="1023.50">nu_parser::parser::..</text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (35 samples, 1.45%)</title><rect x="91.7944%" y="997" width="1.4505%" height="15" fill="rgb(216,172,19)" fg:x="2215" fg:w="35"/><text x="92.0444%" y="1007.50"></text></g><g><title>nu_protocol::engine::engine_state::EngineState::next_span_start (10 samples, 0.41%)</title><rect x="92.8305%" y="981" width="0.4144%" height="15" fill="rgb(227,6,42)" fg:x="2240" fg:w="10"/><text x="93.0805%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::last (2 samples, 0.08%)</title><rect x="93.1620%" y="965" width="0.0829%" height="15" fill="rgb(223,207,42)" fg:x="2248" fg:w="2"/><text x="93.4120%" y="975.50"></text></g><g><title>nu_parser::parser::trim_quotes (1 samples, 0.04%)</title><rect x="93.2449%" y="1013" width="0.0414%" height="15" fill="rgb(246,138,30)" fg:x="2250" fg:w="1"/><text x="93.4949%" y="1023.50"></text></g><g><title>nu_parser::parser::unescape_unquote_string (1 samples, 0.04%)</title><rect x="93.2864%" y="1013" width="0.0414%" height="15" fill="rgb(251,199,47)" fg:x="2251" fg:w="1"/><text x="93.5364%" y="1023.50"></text></g><g><title>nu_protocol::ast::expression::Expression::garbage (1 samples, 0.04%)</title><rect x="93.3278%" y="1013" width="0.0414%" height="15" fill="rgb(228,218,44)" fg:x="2252" fg:w="1"/><text x="93.5778%" y="1023.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.04%)</title><rect x="93.3692%" y="1013" width="0.0414%" height="15" fill="rgb(220,68,6)" fg:x="2253" fg:w="1"/><text x="93.6192%" y="1023.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.04%)</title><rect x="93.3692%" y="997" width="0.0414%" height="15" fill="rgb(240,60,26)" fg:x="2253" fg:w="1"/><text x="93.6192%" y="1007.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.04%)</title><rect x="93.3692%" y="981" width="0.0414%" height="15" fill="rgb(211,200,19)" fg:x="2253" fg:w="1"/><text x="93.6192%" y="991.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.04%)</title><rect x="93.3692%" y="965" width="0.0414%" height="15" fill="rgb(242,145,30)" fg:x="2253" fg:w="1"/><text x="93.6192%" y="975.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.04%)</title><rect x="93.3692%" y="949" width="0.0414%" height="15" fill="rgb(225,64,13)" fg:x="2253" fg:w="1"/><text x="93.6192%" y="959.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.04%)</title><rect x="93.3692%" y="933" width="0.0414%" height="15" fill="rgb(218,103,35)" fg:x="2253" fg:w="1"/><text x="93.6192%" y="943.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.04%)</title><rect x="93.3692%" y="917" width="0.0414%" height="15" fill="rgb(216,93,46)" fg:x="2253" fg:w="1"/><text x="93.6192%" y="927.50"></text></g><g><title>nu_protocol::ast::expression::Expression::has_in_variable (1 samples, 0.04%)</title><rect x="93.3692%" y="901" width="0.0414%" height="15" fill="rgb(225,159,27)" fg:x="2253" fg:w="1"/><text x="93.6192%" y="911.50"></text></g><g><title>nu_protocol::engine::engine_state::EngineState::merge_delta (1 samples, 0.04%)</title><rect x="93.4107%" y="1013" width="0.0414%" height="15" fill="rgb(225,204,11)" fg:x="2254" fg:w="1"/><text x="93.6607%" y="1023.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.04%)</title><rect x="93.4107%" y="997" width="0.0414%" height="15" fill="rgb(205,56,4)" fg:x="2254" fg:w="1"/><text x="93.6607%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.04%)</title><rect x="93.4107%" y="981" width="0.0414%" height="15" fill="rgb(206,6,35)" fg:x="2254" fg:w="1"/><text x="93.6607%" y="991.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.04%)</title><rect x="93.4107%" y="965" width="0.0414%" height="15" fill="rgb(247,73,52)" fg:x="2254" fg:w="1"/><text x="93.6607%" y="975.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.04%)</title><rect x="93.4107%" y="949" width="0.0414%" height="15" fill="rgb(246,97,4)" fg:x="2254" fg:w="1"/><text x="93.6607%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="93.4107%" y="933" width="0.0414%" height="15" fill="rgb(212,37,15)" fg:x="2254" fg:w="1"/><text x="93.6607%" y="943.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="93.4107%" y="917" width="0.0414%" height="15" fill="rgb(208,130,40)" fg:x="2254" fg:w="1"/><text x="93.6607%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.04%)</title><rect x="93.4107%" y="901" width="0.0414%" height="15" fill="rgb(236,55,29)" fg:x="2254" fg:w="1"/><text x="93.6607%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.04%)</title><rect x="93.4107%" y="885" width="0.0414%" height="15" fill="rgb(209,156,45)" fg:x="2254" fg:w="1"/><text x="93.6607%" y="895.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.04%)</title><rect x="93.4107%" y="869" width="0.0414%" height="15" fill="rgb(249,107,4)" fg:x="2254" fg:w="1"/><text x="93.6607%" y="879.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (1 samples, 0.04%)</title><rect x="93.4521%" y="1013" width="0.0414%" height="15" fill="rgb(227,7,13)" fg:x="2255" fg:w="1"/><text x="93.7021%" y="1023.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.04%)</title><rect x="93.4936%" y="933" width="0.0414%" height="15" fill="rgb(250,129,14)" fg:x="2256" fg:w="1"/><text x="93.7436%" y="943.50"></text></g><g><title>nu_protocol::pipeline_data::PipelineData::print (2 samples, 0.08%)</title><rect x="93.4936%" y="1013" width="0.0829%" height="15" fill="rgb(229,92,13)" fg:x="2256" fg:w="2"/><text x="93.7436%" y="1023.50"></text></g><g><title>&lt;nu_protocol::pipeline_data::PipelineIterator as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="93.4936%" y="997" width="0.0829%" height="15" fill="rgb(245,98,39)" fg:x="2256" fg:w="2"/><text x="93.7436%" y="1007.50"></text></g><g><title>&lt;nu_protocol::value::stream::RawStream as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.08%)</title><rect x="93.4936%" y="981" width="0.0829%" height="15" fill="rgb(234,135,48)" fg:x="2256" fg:w="2"/><text x="93.7436%" y="991.50"></text></g><g><title>alloc::string::String::from_utf8 (2 samples, 0.08%)</title><rect x="93.4936%" y="965" width="0.0829%" height="15" fill="rgb(230,98,28)" fg:x="2256" fg:w="2"/><text x="93.7436%" y="975.50"></text></g><g><title>core::str::converts::from_utf8 (2 samples, 0.08%)</title><rect x="93.4936%" y="949" width="0.0829%" height="15" fill="rgb(223,121,0)" fg:x="2256" fg:w="2"/><text x="93.7436%" y="959.50"></text></g><g><title>core::str::validations::run_utf8_validation (1 samples, 0.04%)</title><rect x="93.5350%" y="933" width="0.0414%" height="15" fill="rgb(234,173,33)" fg:x="2257" fg:w="1"/><text x="93.7850%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="93.5765%" y="997" width="0.0829%" height="15" fill="rgb(245,47,8)" fg:x="2258" fg:w="2"/><text x="93.8265%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.08%)</title><rect x="93.5765%" y="981" width="0.0829%" height="15" fill="rgb(205,17,20)" fg:x="2258" fg:w="2"/><text x="93.8265%" y="991.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.08%)</title><rect x="93.5765%" y="965" width="0.0829%" height="15" fill="rgb(232,151,16)" fg:x="2258" fg:w="2"/><text x="93.8265%" y="975.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.08%)</title><rect x="93.5765%" y="949" width="0.0829%" height="15" fill="rgb(208,30,32)" fg:x="2258" fg:w="2"/><text x="93.8265%" y="959.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="93.6179%" y="933" width="0.0414%" height="15" fill="rgb(254,26,3)" fg:x="2259" fg:w="1"/><text x="93.8679%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="93.6179%" y="917" width="0.0414%" height="15" fill="rgb(240,177,30)" fg:x="2259" fg:w="1"/><text x="93.8679%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="93.6179%" y="901" width="0.0414%" height="15" fill="rgb(248,76,44)" fg:x="2259" fg:w="1"/><text x="93.8679%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="93.6179%" y="885" width="0.0414%" height="15" fill="rgb(241,186,54)" fg:x="2259" fg:w="1"/><text x="93.8679%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="93.6179%" y="869" width="0.0414%" height="15" fill="rgb(249,171,29)" fg:x="2259" fg:w="1"/><text x="93.8679%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="93.6179%" y="853" width="0.0414%" height="15" fill="rgb(237,151,44)" fg:x="2259" fg:w="1"/><text x="93.8679%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="93.6179%" y="837" width="0.0414%" height="15" fill="rgb(228,174,30)" fg:x="2259" fg:w="1"/><text x="93.8679%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="93.6179%" y="821" width="0.0414%" height="15" fill="rgb(252,14,37)" fg:x="2259" fg:w="1"/><text x="93.8679%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="93.6179%" y="805" width="0.0414%" height="15" fill="rgb(207,111,40)" fg:x="2259" fg:w="1"/><text x="93.8679%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="93.6179%" y="789" width="0.0414%" height="15" fill="rgb(248,171,54)" fg:x="2259" fg:w="1"/><text x="93.8679%" y="799.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.04%)</title><rect x="93.6179%" y="773" width="0.0414%" height="15" fill="rgb(211,127,2)" fg:x="2259" fg:w="1"/><text x="93.8679%" y="783.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="93.6179%" y="757" width="0.0414%" height="15" fill="rgb(236,87,47)" fg:x="2259" fg:w="1"/><text x="93.8679%" y="767.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="93.6179%" y="741" width="0.0414%" height="15" fill="rgb(223,190,45)" fg:x="2259" fg:w="1"/><text x="93.8679%" y="751.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="93.6593%" y="837" width="0.0414%" height="15" fill="rgb(215,5,16)" fg:x="2260" fg:w="1"/><text x="93.9093%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.04%)</title><rect x="93.6593%" y="821" width="0.0414%" height="15" fill="rgb(252,82,33)" fg:x="2260" fg:w="1"/><text x="93.9093%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.04%)</title><rect x="93.6593%" y="805" width="0.0414%" height="15" fill="rgb(247,213,44)" fg:x="2260" fg:w="1"/><text x="93.9093%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.04%)</title><rect x="93.6593%" y="789" width="0.0414%" height="15" fill="rgb(205,196,44)" fg:x="2260" fg:w="1"/><text x="93.9093%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.04%)</title><rect x="93.6593%" y="773" width="0.0414%" height="15" fill="rgb(237,96,54)" fg:x="2260" fg:w="1"/><text x="93.9093%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="93.6593%" y="757" width="0.0414%" height="15" fill="rgb(230,113,34)" fg:x="2260" fg:w="1"/><text x="93.9093%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.04%)</title><rect x="93.6593%" y="741" width="0.0414%" height="15" fill="rgb(221,224,12)" fg:x="2260" fg:w="1"/><text x="93.9093%" y="751.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="93.6593%" y="997" width="0.0829%" height="15" fill="rgb(219,112,44)" fg:x="2260" fg:w="2"/><text x="93.9093%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="93.6593%" y="981" width="0.0829%" height="15" fill="rgb(210,31,13)" fg:x="2260" fg:w="2"/><text x="93.9093%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.08%)</title><rect x="93.6593%" y="965" width="0.0829%" height="15" fill="rgb(230,25,16)" fg:x="2260" fg:w="2"/><text x="93.9093%" y="975.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.08%)</title><rect x="93.6593%" y="949" width="0.0829%" height="15" fill="rgb(246,108,53)" fg:x="2260" fg:w="2"/><text x="93.9093%" y="959.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.08%)</title><rect x="93.6593%" y="933" width="0.0829%" height="15" fill="rgb(241,172,50)" fg:x="2260" fg:w="2"/><text x="93.9093%" y="943.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="93.6593%" y="917" width="0.0829%" height="15" fill="rgb(235,141,10)" fg:x="2260" fg:w="2"/><text x="93.9093%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.08%)</title><rect x="93.6593%" y="901" width="0.0829%" height="15" fill="rgb(220,174,43)" fg:x="2260" fg:w="2"/><text x="93.9093%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.08%)</title><rect x="93.6593%" y="885" width="0.0829%" height="15" fill="rgb(215,181,40)" fg:x="2260" fg:w="2"/><text x="93.9093%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.08%)</title><rect x="93.6593%" y="869" width="0.0829%" height="15" fill="rgb(230,97,2)" fg:x="2260" fg:w="2"/><text x="93.9093%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.08%)</title><rect x="93.6593%" y="853" width="0.0829%" height="15" fill="rgb(211,25,27)" fg:x="2260" fg:w="2"/><text x="93.9093%" y="863.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.04%)</title><rect x="93.7008%" y="837" width="0.0414%" height="15" fill="rgb(230,87,26)" fg:x="2261" fg:w="1"/><text x="93.9508%" y="847.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="93.7008%" y="821" width="0.0414%" height="15" fill="rgb(227,160,17)" fg:x="2261" fg:w="1"/><text x="93.9508%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.04%)</title><rect x="93.7422%" y="981" width="0.0414%" height="15" fill="rgb(244,85,34)" fg:x="2262" fg:w="1"/><text x="93.9922%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="93.7422%" y="965" width="0.0414%" height="15" fill="rgb(207,70,0)" fg:x="2262" fg:w="1"/><text x="93.9922%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1 samples, 0.04%)</title><rect x="93.7422%" y="949" width="0.0414%" height="15" fill="rgb(223,129,7)" fg:x="2262" fg:w="1"/><text x="93.9922%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="93.7422%" y="933" width="0.0414%" height="15" fill="rgb(246,105,7)" fg:x="2262" fg:w="1"/><text x="93.9922%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="93.7422%" y="917" width="0.0414%" height="15" fill="rgb(215,154,42)" fg:x="2262" fg:w="1"/><text x="93.9922%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="93.7422%" y="901" width="0.0414%" height="15" fill="rgb(220,215,30)" fg:x="2262" fg:w="1"/><text x="93.9922%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="93.7422%" y="885" width="0.0414%" height="15" fill="rgb(228,81,51)" fg:x="2262" fg:w="1"/><text x="93.9922%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (1 samples, 0.04%)</title><rect x="93.7837%" y="917" width="0.0414%" height="15" fill="rgb(247,71,54)" fg:x="2263" fg:w="1"/><text x="94.0337%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="93.7837%" y="901" width="0.0414%" height="15" fill="rgb(234,176,34)" fg:x="2263" fg:w="1"/><text x="94.0337%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (1 samples, 0.04%)</title><rect x="93.7837%" y="885" width="0.0414%" height="15" fill="rgb(241,103,54)" fg:x="2263" fg:w="1"/><text x="94.0337%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="93.7837%" y="869" width="0.0414%" height="15" fill="rgb(228,22,34)" fg:x="2263" fg:w="1"/><text x="94.0337%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="93.7837%" y="853" width="0.0414%" height="15" fill="rgb(241,179,48)" fg:x="2263" fg:w="1"/><text x="94.0337%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="93.7837%" y="837" width="0.0414%" height="15" fill="rgb(235,167,37)" fg:x="2263" fg:w="1"/><text x="94.0337%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="93.7837%" y="821" width="0.0414%" height="15" fill="rgb(213,109,30)" fg:x="2263" fg:w="1"/><text x="94.0337%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="93.7837%" y="805" width="0.0414%" height="15" fill="rgb(222,172,16)" fg:x="2263" fg:w="1"/><text x="94.0337%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="93.8251%" y="821" width="0.0829%" height="15" fill="rgb(233,192,5)" fg:x="2264" fg:w="2"/><text x="94.0751%" y="831.50"></text></g><g><title>core::ptr::slice_from_raw_parts_mut (1 samples, 0.04%)</title><rect x="93.8666%" y="805" width="0.0414%" height="15" fill="rgb(247,189,41)" fg:x="2265" fg:w="1"/><text x="94.1166%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.12%)</title><rect x="93.8251%" y="853" width="0.1243%" height="15" fill="rgb(218,134,47)" fg:x="2264" fg:w="3"/><text x="94.0751%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.12%)</title><rect x="93.8251%" y="837" width="0.1243%" height="15" fill="rgb(216,29,3)" fg:x="2264" fg:w="3"/><text x="94.0751%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="93.9080%" y="821" width="0.0414%" height="15" fill="rgb(246,140,12)" fg:x="2266" fg:w="1"/><text x="94.1580%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="93.9080%" y="805" width="0.0414%" height="15" fill="rgb(230,136,11)" fg:x="2266" fg:w="1"/><text x="94.1580%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="93.9080%" y="789" width="0.0414%" height="15" fill="rgb(247,22,47)" fg:x="2266" fg:w="1"/><text x="94.1580%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="93.9080%" y="773" width="0.0414%" height="15" fill="rgb(218,84,22)" fg:x="2266" fg:w="1"/><text x="94.1580%" y="783.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="93.9080%" y="757" width="0.0414%" height="15" fill="rgb(216,87,39)" fg:x="2266" fg:w="1"/><text x="94.1580%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="93.9494%" y="773" width="0.0414%" height="15" fill="rgb(221,178,8)" fg:x="2267" fg:w="1"/><text x="94.1994%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="93.9909%" y="741" width="0.0414%" height="15" fill="rgb(230,42,11)" fg:x="2268" fg:w="1"/><text x="94.2409%" y="751.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="93.9909%" y="725" width="0.0414%" height="15" fill="rgb(237,229,4)" fg:x="2268" fg:w="1"/><text x="94.2409%" y="735.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="93.9909%" y="709" width="0.0414%" height="15" fill="rgb(222,31,33)" fg:x="2268" fg:w="1"/><text x="94.2409%" y="719.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="93.9909%" y="693" width="0.0414%" height="15" fill="rgb(210,17,39)" fg:x="2268" fg:w="1"/><text x="94.2409%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (3 samples, 0.12%)</title><rect x="93.9494%" y="853" width="0.1243%" height="15" fill="rgb(244,93,20)" fg:x="2267" fg:w="3"/><text x="94.1994%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.12%)</title><rect x="93.9494%" y="837" width="0.1243%" height="15" fill="rgb(210,40,47)" fg:x="2267" fg:w="3"/><text x="94.1994%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (3 samples, 0.12%)</title><rect x="93.9494%" y="821" width="0.1243%" height="15" fill="rgb(239,211,47)" fg:x="2267" fg:w="3"/><text x="94.1994%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.12%)</title><rect x="93.9494%" y="805" width="0.1243%" height="15" fill="rgb(251,223,49)" fg:x="2267" fg:w="3"/><text x="94.1994%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.12%)</title><rect x="93.9494%" y="789" width="0.1243%" height="15" fill="rgb(221,149,5)" fg:x="2267" fg:w="3"/><text x="94.1994%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.08%)</title><rect x="93.9909%" y="773" width="0.0829%" height="15" fill="rgb(219,224,51)" fg:x="2268" fg:w="2"/><text x="94.2409%" y="783.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.08%)</title><rect x="93.9909%" y="757" width="0.0829%" height="15" fill="rgb(223,7,8)" fg:x="2268" fg:w="2"/><text x="94.2409%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="94.0323%" y="741" width="0.0414%" height="15" fill="rgb(241,217,22)" fg:x="2269" fg:w="1"/><text x="94.2823%" y="751.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.04%)</title><rect x="94.0323%" y="725" width="0.0414%" height="15" fill="rgb(248,209,0)" fg:x="2269" fg:w="1"/><text x="94.2823%" y="735.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::convert::From&lt;core::ptr::unique::Unique&lt;T&gt;&gt;&gt;::from (1 samples, 0.04%)</title><rect x="94.0323%" y="709" width="0.0414%" height="15" fill="rgb(217,205,4)" fg:x="2269" fg:w="1"/><text x="94.2823%" y="719.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="94.0323%" y="693" width="0.0414%" height="15" fill="rgb(228,124,39)" fg:x="2269" fg:w="1"/><text x="94.2823%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.08%)</title><rect x="94.1152%" y="709" width="0.0829%" height="15" fill="rgb(250,116,42)" fg:x="2271" fg:w="2"/><text x="94.3652%" y="719.50"></text></g><g><title>cfree (2 samples, 0.08%)</title><rect x="94.1152%" y="693" width="0.0829%" height="15" fill="rgb(223,202,9)" fg:x="2271" fg:w="2"/><text x="94.3652%" y="703.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="94.1152%" y="677" width="0.0829%" height="15" fill="rgb(242,222,40)" fg:x="2271" fg:w="2"/><text x="94.3652%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.12%)</title><rect x="94.1152%" y="789" width="0.1243%" height="15" fill="rgb(229,99,46)" fg:x="2271" fg:w="3"/><text x="94.3652%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.12%)</title><rect x="94.1152%" y="773" width="0.1243%" height="15" fill="rgb(225,56,46)" fg:x="2271" fg:w="3"/><text x="94.3652%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.12%)</title><rect x="94.1152%" y="757" width="0.1243%" height="15" fill="rgb(227,94,5)" fg:x="2271" fg:w="3"/><text x="94.3652%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.12%)</title><rect x="94.1152%" y="741" width="0.1243%" height="15" fill="rgb(205,112,38)" fg:x="2271" fg:w="3"/><text x="94.3652%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.12%)</title><rect x="94.1152%" y="725" width="0.1243%" height="15" fill="rgb(231,133,46)" fg:x="2271" fg:w="3"/><text x="94.3652%" y="735.50"></text></g><g><title>core::alloc::layout::Layout::size (1 samples, 0.04%)</title><rect x="94.1981%" y="709" width="0.0414%" height="15" fill="rgb(217,16,9)" fg:x="2273" fg:w="1"/><text x="94.4481%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="94.2810%" y="677" width="0.0414%" height="15" fill="rgb(249,173,9)" fg:x="2275" fg:w="1"/><text x="94.5310%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="94.2810%" y="661" width="0.0414%" height="15" fill="rgb(205,163,53)" fg:x="2275" fg:w="1"/><text x="94.5310%" y="671.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="94.2810%" y="645" width="0.0414%" height="15" fill="rgb(217,54,41)" fg:x="2275" fg:w="1"/><text x="94.5310%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="94.2810%" y="629" width="0.0414%" height="15" fill="rgb(228,216,12)" fg:x="2275" fg:w="1"/><text x="94.5310%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (4 samples, 0.17%)</title><rect x="94.2395%" y="789" width="0.1658%" height="15" fill="rgb(244,228,15)" fg:x="2274" fg:w="4"/><text x="94.4895%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.17%)</title><rect x="94.2395%" y="773" width="0.1658%" height="15" fill="rgb(221,176,53)" fg:x="2274" fg:w="4"/><text x="94.4895%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::string::String]&gt; (4 samples, 0.17%)</title><rect x="94.2395%" y="757" width="0.1658%" height="15" fill="rgb(205,94,34)" fg:x="2274" fg:w="4"/><text x="94.4895%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.17%)</title><rect x="94.2395%" y="741" width="0.1658%" height="15" fill="rgb(213,110,48)" fg:x="2274" fg:w="4"/><text x="94.4895%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.17%)</title><rect x="94.2395%" y="725" width="0.1658%" height="15" fill="rgb(236,142,28)" fg:x="2274" fg:w="4"/><text x="94.4895%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.17%)</title><rect x="94.2395%" y="709" width="0.1658%" height="15" fill="rgb(225,135,29)" fg:x="2274" fg:w="4"/><text x="94.4895%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.17%)</title><rect x="94.2395%" y="693" width="0.1658%" height="15" fill="rgb(252,45,31)" fg:x="2274" fg:w="4"/><text x="94.4895%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.08%)</title><rect x="94.3224%" y="677" width="0.0829%" height="15" fill="rgb(211,187,50)" fg:x="2276" fg:w="2"/><text x="94.5724%" y="687.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (1 samples, 0.04%)</title><rect x="94.3639%" y="661" width="0.0414%" height="15" fill="rgb(229,109,7)" fg:x="2277" fg:w="1"/><text x="94.6139%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="94.4467%" y="661" width="0.0414%" height="15" fill="rgb(251,131,51)" fg:x="2279" fg:w="1"/><text x="94.6967%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="94.4467%" y="645" width="0.0414%" height="15" fill="rgb(251,180,35)" fg:x="2279" fg:w="1"/><text x="94.6967%" y="655.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="94.4467%" y="629" width="0.0414%" height="15" fill="rgb(211,46,32)" fg:x="2279" fg:w="1"/><text x="94.6967%" y="639.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="94.4467%" y="613" width="0.0414%" height="15" fill="rgb(248,123,17)" fg:x="2279" fg:w="1"/><text x="94.6967%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.70%)</title><rect x="93.8251%" y="901" width="0.7045%" height="15" fill="rgb(227,141,18)" fg:x="2264" fg:w="17"/><text x="94.0751%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::value::Value]&gt; (17 samples, 0.70%)</title><rect x="93.8251%" y="885" width="0.7045%" height="15" fill="rgb(216,102,9)" fg:x="2264" fg:w="17"/><text x="94.0751%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::value::Value&gt; (17 samples, 0.70%)</title><rect x="93.8251%" y="869" width="0.7045%" height="15" fill="rgb(253,47,13)" fg:x="2264" fg:w="17"/><text x="94.0751%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (11 samples, 0.46%)</title><rect x="94.0738%" y="853" width="0.4559%" height="15" fill="rgb(226,93,23)" fg:x="2270" fg:w="11"/><text x="94.3238%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.46%)</title><rect x="94.0738%" y="837" width="0.4559%" height="15" fill="rgb(247,104,17)" fg:x="2270" fg:w="11"/><text x="94.3238%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::value::Value]&gt; (11 samples, 0.46%)</title><rect x="94.0738%" y="821" width="0.4559%" height="15" fill="rgb(233,203,26)" fg:x="2270" fg:w="11"/><text x="94.3238%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::value::Value&gt; (11 samples, 0.46%)</title><rect x="94.0738%" y="805" width="0.4559%" height="15" fill="rgb(244,98,49)" fg:x="2270" fg:w="11"/><text x="94.3238%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (3 samples, 0.12%)</title><rect x="94.4053%" y="789" width="0.1243%" height="15" fill="rgb(235,134,22)" fg:x="2278" fg:w="3"/><text x="94.6553%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.12%)</title><rect x="94.4053%" y="773" width="0.1243%" height="15" fill="rgb(221,70,32)" fg:x="2278" fg:w="3"/><text x="94.6553%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::value::Value]&gt; (3 samples, 0.12%)</title><rect x="94.4053%" y="757" width="0.1243%" height="15" fill="rgb(238,15,50)" fg:x="2278" fg:w="3"/><text x="94.6553%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::value::Value&gt; (3 samples, 0.12%)</title><rect x="94.4053%" y="741" width="0.1243%" height="15" fill="rgb(215,221,48)" fg:x="2278" fg:w="3"/><text x="94.6553%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.12%)</title><rect x="94.4053%" y="725" width="0.1243%" height="15" fill="rgb(236,73,3)" fg:x="2278" fg:w="3"/><text x="94.6553%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.12%)</title><rect x="94.4053%" y="709" width="0.1243%" height="15" fill="rgb(250,107,11)" fg:x="2278" fg:w="3"/><text x="94.6553%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.12%)</title><rect x="94.4053%" y="693" width="0.1243%" height="15" fill="rgb(242,39,14)" fg:x="2278" fg:w="3"/><text x="94.6553%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.12%)</title><rect x="94.4053%" y="677" width="0.1243%" height="15" fill="rgb(248,164,37)" fg:x="2278" fg:w="3"/><text x="94.6553%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.04%)</title><rect x="94.4882%" y="661" width="0.0414%" height="15" fill="rgb(217,60,12)" fg:x="2280" fg:w="1"/><text x="94.7382%" y="671.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::cast (1 samples, 0.04%)</title><rect x="94.4882%" y="645" width="0.0414%" height="15" fill="rgb(240,125,29)" fg:x="2280" fg:w="1"/><text x="94.7382%" y="655.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::new_unchecked (1 samples, 0.04%)</title><rect x="94.4882%" y="629" width="0.0414%" height="15" fill="rgb(208,207,28)" fg:x="2280" fg:w="1"/><text x="94.7382%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::value::Value&gt; (20 samples, 0.83%)</title><rect x="93.7422%" y="997" width="0.8288%" height="15" fill="rgb(209,159,27)" fg:x="2262" fg:w="20"/><text x="93.9922%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (19 samples, 0.79%)</title><rect x="93.7837%" y="981" width="0.7874%" height="15" fill="rgb(251,176,53)" fg:x="2263" fg:w="19"/><text x="94.0337%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.79%)</title><rect x="93.7837%" y="965" width="0.7874%" height="15" fill="rgb(211,85,7)" fg:x="2263" fg:w="19"/><text x="94.0337%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[nu_protocol::value::Value]&gt; (19 samples, 0.79%)</title><rect x="93.7837%" y="949" width="0.7874%" height="15" fill="rgb(216,64,54)" fg:x="2263" fg:w="19"/><text x="94.0337%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::value::Value&gt; (19 samples, 0.79%)</title><rect x="93.7837%" y="933" width="0.7874%" height="15" fill="rgb(217,54,24)" fg:x="2263" fg:w="19"/><text x="94.0337%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (18 samples, 0.75%)</title><rect x="93.8251%" y="917" width="0.7460%" height="15" fill="rgb(208,206,53)" fg:x="2264" fg:w="18"/><text x="94.0751%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;nu_protocol::value::Value&gt;&gt; (1 samples, 0.04%)</title><rect x="94.5296%" y="901" width="0.0414%" height="15" fill="rgb(251,74,39)" fg:x="2281" fg:w="1"/><text x="94.7796%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="94.5296%" y="885" width="0.0414%" height="15" fill="rgb(226,47,5)" fg:x="2281" fg:w="1"/><text x="94.7796%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="94.5296%" y="869" width="0.0414%" height="15" fill="rgb(234,111,33)" fg:x="2281" fg:w="1"/><text x="94.7796%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="94.5296%" y="853" width="0.0414%" height="15" fill="rgb(251,14,10)" fg:x="2281" fg:w="1"/><text x="94.7796%" y="863.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="94.5296%" y="837" width="0.0414%" height="15" fill="rgb(232,43,0)" fg:x="2281" fg:w="1"/><text x="94.7796%" y="847.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="94.5296%" y="821" width="0.0414%" height="15" fill="rgb(222,68,43)" fg:x="2281" fg:w="1"/><text x="94.7796%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.04%)</title><rect x="94.5711%" y="821" width="0.0414%" height="15" fill="rgb(217,24,23)" fg:x="2282" fg:w="1"/><text x="94.8211%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="94.5711%" y="805" width="0.0414%" height="15" fill="rgb(229,209,14)" fg:x="2282" fg:w="1"/><text x="94.8211%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.04%)</title><rect x="94.5711%" y="789" width="0.0414%" height="15" fill="rgb(250,149,48)" fg:x="2282" fg:w="1"/><text x="94.8211%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.04%)</title><rect x="94.5711%" y="773" width="0.0414%" height="15" fill="rgb(210,120,37)" fg:x="2282" fg:w="1"/><text x="94.8211%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.04%)</title><rect x="94.5711%" y="757" width="0.0414%" height="15" fill="rgb(210,21,8)" fg:x="2282" fg:w="1"/><text x="94.8211%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.04%)</title><rect x="94.5711%" y="741" width="0.0414%" height="15" fill="rgb(243,145,7)" fg:x="2282" fg:w="1"/><text x="94.8211%" y="751.50"></text></g><g><title>cfree (1 samples, 0.04%)</title><rect x="94.5711%" y="725" width="0.0414%" height="15" fill="rgb(238,178,32)" fg:x="2282" fg:w="1"/><text x="94.8211%" y="735.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="94.5711%" y="709" width="0.0414%" height="15" fill="rgb(222,4,10)" fg:x="2282" fg:w="1"/><text x="94.8211%" y="719.50"></text></g><g><title>nu_protocol::value::Value::follow_cell_path (26 samples, 1.08%)</title><rect x="93.5765%" y="1013" width="1.0775%" height="15" fill="rgb(239,7,37)" fg:x="2258" fg:w="26"/><text x="93.8265%" y="1023.50"></text></g><g><title>nu_protocol::shell_error::did_you_mean (2 samples, 0.08%)</title><rect x="94.5711%" y="997" width="0.0829%" height="15" fill="rgb(215,31,37)" fg:x="2282" fg:w="2"/><text x="94.8211%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.08%)</title><rect x="94.5711%" y="981" width="0.0829%" height="15" fill="rgb(224,83,33)" fg:x="2282" fg:w="2"/><text x="94.8211%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.08%)</title><rect x="94.5711%" y="965" width="0.0829%" height="15" fill="rgb(239,55,3)" fg:x="2282" fg:w="2"/><text x="94.8211%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.08%)</title><rect x="94.5711%" y="949" width="0.0829%" height="15" fill="rgb(247,92,11)" fg:x="2282" fg:w="2"/><text x="94.8211%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.08%)</title><rect x="94.5711%" y="933" width="0.0829%" height="15" fill="rgb(239,200,7)" fg:x="2282" fg:w="2"/><text x="94.8211%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.08%)</title><rect x="94.5711%" y="917" width="0.0829%" height="15" fill="rgb(227,115,8)" fg:x="2282" fg:w="2"/><text x="94.8211%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.08%)</title><rect x="94.5711%" y="901" width="0.0829%" height="15" fill="rgb(215,189,27)" fg:x="2282" fg:w="2"/><text x="94.8211%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.08%)</title><rect x="94.5711%" y="885" width="0.0829%" height="15" fill="rgb(251,216,39)" fg:x="2282" fg:w="2"/><text x="94.8211%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.08%)</title><rect x="94.5711%" y="869" width="0.0829%" height="15" fill="rgb(207,29,47)" fg:x="2282" fg:w="2"/><text x="94.8211%" y="879.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.08%)</title><rect x="94.5711%" y="853" width="0.0829%" height="15" fill="rgb(210,71,34)" fg:x="2282" fg:w="2"/><text x="94.8211%" y="863.50"></text></g><g><title>nu_protocol::shell_error::did_you_mean::{{closure}} (2 samples, 0.08%)</title><rect x="94.5711%" y="837" width="0.0829%" height="15" fill="rgb(253,217,51)" fg:x="2282" fg:w="2"/><text x="94.8211%" y="847.50"></text></g><g><title>nu_protocol::shell_error::levenshtein_distance (1 samples, 0.04%)</title><rect x="94.6125%" y="821" width="0.0414%" height="15" fill="rgb(222,117,46)" fg:x="2283" fg:w="1"/><text x="94.8625%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.04%)</title><rect x="94.6125%" y="805" width="0.0414%" height="15" fill="rgb(226,132,6)" fg:x="2283" fg:w="1"/><text x="94.8625%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="94.6125%" y="789" width="0.0414%" height="15" fill="rgb(254,145,51)" fg:x="2283" fg:w="1"/><text x="94.8625%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="94.6125%" y="773" width="0.0414%" height="15" fill="rgb(231,199,27)" fg:x="2283" fg:w="1"/><text x="94.8625%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.04%)</title><rect x="94.6125%" y="757" width="0.0414%" height="15" fill="rgb(245,158,14)" fg:x="2283" fg:w="1"/><text x="94.8625%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.04%)</title><rect x="94.6125%" y="741" width="0.0414%" height="15" fill="rgb(240,113,14)" fg:x="2283" fg:w="1"/><text x="94.8625%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="94.6125%" y="725" width="0.0414%" height="15" fill="rgb(210,20,13)" fg:x="2283" fg:w="1"/><text x="94.8625%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="94.6125%" y="709" width="0.0414%" height="15" fill="rgb(241,144,13)" fg:x="2283" fg:w="1"/><text x="94.8625%" y="719.50"></text></g><g><title>papergrid::Grid::style (2 samples, 0.08%)</title><rect x="94.6540%" y="1013" width="0.0829%" height="15" fill="rgb(235,43,34)" fg:x="2284" fg:w="2"/><text x="94.9040%" y="1023.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="94.7368%" y="773" width="0.0414%" height="15" fill="rgb(208,36,20)" fg:x="2286" fg:w="1"/><text x="94.9868%" y="783.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="94.7368%" y="757" width="0.0414%" height="15" fill="rgb(239,204,10)" fg:x="2286" fg:w="1"/><text x="94.9868%" y="767.50"></text></g><g><title>std::io::buffered::linewritershim::LineWriterShim&lt;W&gt;::flush_if_completed_line (1 samples, 0.04%)</title><rect x="94.7368%" y="741" width="0.0414%" height="15" fill="rgb(217,84,43)" fg:x="2286" fg:w="1"/><text x="94.9868%" y="751.50"></text></g><g><title>std::io::buffered::linewritershim::LineWriterShim&lt;W&gt;::buffered (1 samples, 0.04%)</title><rect x="94.7368%" y="725" width="0.0414%" height="15" fill="rgb(241,170,50)" fg:x="2286" fg:w="1"/><text x="94.9868%" y="735.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::buffer (1 samples, 0.04%)</title><rect x="94.7368%" y="709" width="0.0414%" height="15" fill="rgb(226,205,29)" fg:x="2286" fg:w="1"/><text x="94.9868%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.04%)</title><rect x="94.7368%" y="693" width="0.0414%" height="15" fill="rgb(233,113,1)" fg:x="2286" fg:w="1"/><text x="94.9868%" y="703.50"></text></g><g><title>core::slice::raw::from_raw_parts (1 samples, 0.04%)</title><rect x="94.7368%" y="677" width="0.0414%" height="15" fill="rgb(253,98,13)" fg:x="2286" fg:w="1"/><text x="94.9868%" y="687.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="94.7368%" y="661" width="0.0414%" height="15" fill="rgb(211,115,12)" fg:x="2286" fg:w="1"/><text x="94.9868%" y="671.50"></text></g><g><title>std::io::Write::write_all (2 samples, 0.08%)</title><rect x="94.7368%" y="933" width="0.0829%" height="15" fill="rgb(208,12,16)" fg:x="2286" fg:w="2"/><text x="94.9868%" y="943.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (2 samples, 0.08%)</title><rect x="94.7368%" y="917" width="0.0829%" height="15" fill="rgb(237,193,54)" fg:x="2286" fg:w="2"/><text x="94.9868%" y="927.50"></text></g><g><title>vte::Parser::advance (2 samples, 0.08%)</title><rect x="94.7368%" y="901" width="0.0829%" height="15" fill="rgb(243,22,42)" fg:x="2286" fg:w="2"/><text x="94.9868%" y="911.50"></text></g><g><title>vte::Parser::perform_state_change (2 samples, 0.08%)</title><rect x="94.7368%" y="885" width="0.0829%" height="15" fill="rgb(233,151,36)" fg:x="2286" fg:w="2"/><text x="94.9868%" y="895.50"></text></g><g><title>vte::Parser::perform_action (2 samples, 0.08%)</title><rect x="94.7368%" y="869" width="0.0829%" height="15" fill="rgb(237,57,45)" fg:x="2286" fg:w="2"/><text x="94.9868%" y="879.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::print (2 samples, 0.08%)</title><rect x="94.7368%" y="853" width="0.0829%" height="15" fill="rgb(221,88,17)" fg:x="2286" fg:w="2"/><text x="94.9868%" y="863.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_fmt (2 samples, 0.08%)</title><rect x="94.7368%" y="837" width="0.0829%" height="15" fill="rgb(230,79,15)" fg:x="2286" fg:w="2"/><text x="94.9868%" y="847.50"></text></g><g><title>std::io::Write::write_fmt (2 samples, 0.08%)</title><rect x="94.7368%" y="821" width="0.0829%" height="15" fill="rgb(213,57,13)" fg:x="2286" fg:w="2"/><text x="94.9868%" y="831.50"></text></g><g><title>core::fmt::write (2 samples, 0.08%)</title><rect x="94.7368%" y="805" width="0.0829%" height="15" fill="rgb(222,116,39)" fg:x="2286" fg:w="2"/><text x="94.9868%" y="815.50"></text></g><g><title>core::fmt::Write::write_char (2 samples, 0.08%)</title><rect x="94.7368%" y="789" width="0.0829%" height="15" fill="rgb(245,107,2)" fg:x="2286" fg:w="2"/><text x="94.9868%" y="799.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (1 samples, 0.04%)</title><rect x="94.7783%" y="773" width="0.0414%" height="15" fill="rgb(238,1,10)" fg:x="2287" fg:w="1"/><text x="95.0283%" y="783.50"></text></g><g><title>core::char::methods::encode_utf8_raw (1 samples, 0.04%)</title><rect x="94.7783%" y="757" width="0.0414%" height="15" fill="rgb(249,4,48)" fg:x="2287" fg:w="1"/><text x="95.0283%" y="767.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.04%)</title><rect x="94.7783%" y="741" width="0.0414%" height="15" fill="rgb(223,151,18)" fg:x="2287" fg:w="1"/><text x="95.0283%" y="751.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="94.7783%" y="725" width="0.0414%" height="15" fill="rgb(227,65,43)" fg:x="2287" fg:w="1"/><text x="95.0283%" y="735.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="94.7783%" y="709" width="0.0414%" height="15" fill="rgb(218,40,45)" fg:x="2287" fg:w="1"/><text x="95.0283%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.04%)</title><rect x="94.7783%" y="693" width="0.0414%" height="15" fill="rgb(252,121,31)" fg:x="2287" fg:w="1"/><text x="95.0283%" y="703.50"></text></g><g><title>papergrid::Grid::total_width (3 samples, 0.12%)</title><rect x="94.7368%" y="1013" width="0.1243%" height="15" fill="rgb(219,158,43)" fg:x="2286" fg:w="3"/><text x="94.9868%" y="1023.50"></text></g><g><title>papergrid::cells_content (3 samples, 0.12%)</title><rect x="94.7368%" y="997" width="0.1243%" height="15" fill="rgb(231,162,42)" fg:x="2286" fg:w="3"/><text x="94.9868%" y="1007.50"></text></g><g><title>papergrid::string_width_tab (3 samples, 0.12%)</title><rect x="94.7368%" y="981" width="0.1243%" height="15" fill="rgb(217,179,25)" fg:x="2286" fg:w="3"/><text x="94.9868%" y="991.50"></text></g><g><title>papergrid::string_width (3 samples, 0.12%)</title><rect x="94.7368%" y="965" width="0.1243%" height="15" fill="rgb(206,212,31)" fg:x="2286" fg:w="3"/><text x="94.9868%" y="975.50"></text></g><g><title>strip_ansi_escapes::strip (3 samples, 0.12%)</title><rect x="94.7368%" y="949" width="0.1243%" height="15" fill="rgb(235,144,12)" fg:x="2286" fg:w="3"/><text x="94.9868%" y="959.50"></text></g><g><title>strip_ansi_escapes::Writer&lt;W&gt;::new (1 samples, 0.04%)</title><rect x="94.8197%" y="933" width="0.0414%" height="15" fill="rgb(213,51,10)" fg:x="2288" fg:w="1"/><text x="95.0697%" y="943.50"></text></g><g><title>std::io::buffered::linewriter::LineWriter&lt;W&gt;::new (1 samples, 0.04%)</title><rect x="94.8197%" y="917" width="0.0414%" height="15" fill="rgb(231,145,14)" fg:x="2288" fg:w="1"/><text x="95.0697%" y="927.50"></text></g><g><title>std::io::buffered::linewriter::LineWriter&lt;W&gt;::with_capacity (1 samples, 0.04%)</title><rect x="94.8197%" y="901" width="0.0414%" height="15" fill="rgb(235,15,28)" fg:x="2288" fg:w="1"/><text x="95.0697%" y="911.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::with_capacity (1 samples, 0.04%)</title><rect x="94.8197%" y="885" width="0.0414%" height="15" fill="rgb(237,206,10)" fg:x="2288" fg:w="1"/><text x="95.0697%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.04%)</title><rect x="94.8197%" y="869" width="0.0414%" height="15" fill="rgb(236,227,27)" fg:x="2288" fg:w="1"/><text x="95.0697%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="94.8197%" y="853" width="0.0414%" height="15" fill="rgb(246,83,35)" fg:x="2288" fg:w="1"/><text x="95.0697%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="94.8197%" y="837" width="0.0414%" height="15" fill="rgb(220,136,24)" fg:x="2288" fg:w="1"/><text x="95.0697%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="94.8197%" y="821" width="0.0414%" height="15" fill="rgb(217,3,25)" fg:x="2288" fg:w="1"/><text x="95.0697%" y="831.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::cast (1 samples, 0.04%)</title><rect x="94.8197%" y="805" width="0.0414%" height="15" fill="rgb(239,24,14)" fg:x="2288" fg:w="1"/><text x="95.0697%" y="815.50"></text></g><g><title>std::io::buffered::linewriter::LineWriter&lt;W&gt;::new (1 samples, 0.04%)</title><rect x="94.8612%" y="933" width="0.0414%" height="15" fill="rgb(244,16,53)" fg:x="2289" fg:w="1"/><text x="95.1112%" y="943.50"></text></g><g><title>std::io::buffered::linewriter::LineWriter&lt;W&gt;::with_capacity (1 samples, 0.04%)</title><rect x="94.8612%" y="917" width="0.0414%" height="15" fill="rgb(208,175,44)" fg:x="2289" fg:w="1"/><text x="95.1112%" y="927.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::with_capacity (1 samples, 0.04%)</title><rect x="94.8612%" y="901" width="0.0414%" height="15" fill="rgb(252,18,48)" fg:x="2289" fg:w="1"/><text x="95.1112%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.04%)</title><rect x="94.8612%" y="885" width="0.0414%" height="15" fill="rgb(234,199,32)" fg:x="2289" fg:w="1"/><text x="95.1112%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="94.8612%" y="869" width="0.0414%" height="15" fill="rgb(225,77,54)" fg:x="2289" fg:w="1"/><text x="95.1112%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.04%)</title><rect x="94.8612%" y="853" width="0.0414%" height="15" fill="rgb(225,42,25)" fg:x="2289" fg:w="1"/><text x="95.1112%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.04%)</title><rect x="94.8612%" y="837" width="0.0414%" height="15" fill="rgb(242,227,46)" fg:x="2289" fg:w="1"/><text x="95.1112%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.04%)</title><rect x="94.8612%" y="821" width="0.0414%" height="15" fill="rgb(246,197,35)" fg:x="2289" fg:w="1"/><text x="95.1112%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="94.8612%" y="805" width="0.0414%" height="15" fill="rgb(215,159,26)" fg:x="2289" fg:w="1"/><text x="95.1112%" y="815.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="94.8612%" y="789" width="0.0414%" height="15" fill="rgb(212,194,50)" fg:x="2289" fg:w="1"/><text x="95.1112%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="94.8612%" y="773" width="0.0414%" height="15" fill="rgb(246,132,1)" fg:x="2289" fg:w="1"/><text x="95.1112%" y="783.50"></text></g><g><title>&lt;vte::params::Params as core::default::Default&gt;::default (2 samples, 0.08%)</title><rect x="94.9026%" y="901" width="0.0829%" height="15" fill="rgb(217,71,7)" fg:x="2290" fg:w="2"/><text x="95.1526%" y="911.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: 32]&gt;::default (2 samples, 0.08%)</title><rect x="94.9026%" y="885" width="0.0829%" height="15" fill="rgb(252,59,32)" fg:x="2290" fg:w="2"/><text x="95.1526%" y="895.50"></text></g><g><title>[libc.so.6] (2 samples, 0.08%)</title><rect x="94.9855%" y="901" width="0.0829%" height="15" fill="rgb(253,204,25)" fg:x="2292" fg:w="2"/><text x="95.2355%" y="911.50"></text></g><g><title>papergrid::cells_content (6 samples, 0.25%)</title><rect x="94.8612%" y="1013" width="0.2487%" height="15" fill="rgb(232,21,16)" fg:x="2289" fg:w="6"/><text x="95.1112%" y="1023.50"></text></g><g><title>papergrid::string_width_tab (6 samples, 0.25%)</title><rect x="94.8612%" y="997" width="0.2487%" height="15" fill="rgb(248,90,29)" fg:x="2289" fg:w="6"/><text x="95.1112%" y="1007.50"></text></g><g><title>papergrid::string_width (6 samples, 0.25%)</title><rect x="94.8612%" y="981" width="0.2487%" height="15" fill="rgb(249,223,7)" fg:x="2289" fg:w="6"/><text x="95.1112%" y="991.50"></text></g><g><title>strip_ansi_escapes::strip (6 samples, 0.25%)</title><rect x="94.8612%" y="965" width="0.2487%" height="15" fill="rgb(231,119,42)" fg:x="2289" fg:w="6"/><text x="95.1112%" y="975.50"></text></g><g><title>strip_ansi_escapes::Writer&lt;W&gt;::new (6 samples, 0.25%)</title><rect x="94.8612%" y="949" width="0.2487%" height="15" fill="rgb(215,41,35)" fg:x="2289" fg:w="6"/><text x="95.1112%" y="959.50"></text></g><g><title>vte::Parser::new (5 samples, 0.21%)</title><rect x="94.9026%" y="933" width="0.2072%" height="15" fill="rgb(220,44,45)" fg:x="2290" fg:w="5"/><text x="95.1526%" y="943.50"></text></g><g><title>&lt;vte::Parser as core::default::Default&gt;::default (5 samples, 0.21%)</title><rect x="94.9026%" y="917" width="0.2072%" height="15" fill="rgb(253,197,36)" fg:x="2290" fg:w="5"/><text x="95.1526%" y="927.50"></text></g><g><title>core::array::&lt;impl core::default::Default for [T: _]&gt;::default (1 samples, 0.04%)</title><rect x="95.0684%" y="901" width="0.0414%" height="15" fill="rgb(245,225,54)" fg:x="2294" fg:w="1"/><text x="95.3184%" y="911.50"></text></g><g><title>papergrid::lookup_entity_value (3 samples, 0.12%)</title><rect x="95.1098%" y="1013" width="0.1243%" height="15" fill="rgb(239,94,37)" fg:x="2295" fg:w="3"/><text x="95.3598%" y="1023.50"></text></g><g><title>papergrid::repeat_char (2 samples, 0.08%)</title><rect x="95.2341%" y="1013" width="0.0829%" height="15" fill="rgb(242,217,10)" fg:x="2298" fg:w="2"/><text x="95.4841%" y="1023.50"></text></g><g><title>papergrid::string_width (3 samples, 0.12%)</title><rect x="95.3170%" y="1013" width="0.1243%" height="15" fill="rgb(250,193,7)" fg:x="2300" fg:w="3"/><text x="95.5670%" y="1023.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.08%)</title><rect x="95.4414%" y="1013" width="0.0829%" height="15" fill="rgb(230,104,19)" fg:x="2303" fg:w="2"/><text x="95.6914%" y="1023.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.04%)</title><rect x="95.5242%" y="1013" width="0.0414%" height="15" fill="rgb(230,181,4)" fg:x="2305" fg:w="1"/><text x="95.7742%" y="1023.50"></text></g><g><title>strip_ansi_escapes::Writer&lt;W&gt;::new (2 samples, 0.08%)</title><rect x="95.5657%" y="1013" width="0.0829%" height="15" fill="rgb(216,219,49)" fg:x="2306" fg:w="2"/><text x="95.8157%" y="1023.50"></text></g><g><title>strip_ansi_escapes::strip (1 samples, 0.04%)</title><rect x="95.6486%" y="1013" width="0.0414%" height="15" fill="rgb(254,144,0)" fg:x="2308" fg:w="1"/><text x="95.8986%" y="1023.50"></text></g><g><title>strip_ansi_escapes::Writer&lt;W&gt;::new (1 samples, 0.04%)</title><rect x="95.6486%" y="997" width="0.0414%" height="15" fill="rgb(205,209,38)" fg:x="2308" fg:w="1"/><text x="95.8986%" y="1007.50"></text></g><g><title>vte::Parser::new (1 samples, 0.04%)</title><rect x="95.6486%" y="981" width="0.0414%" height="15" fill="rgb(240,21,42)" fg:x="2308" fg:w="1"/><text x="95.8986%" y="991.50"></text></g><g><title>&lt;vte::Parser as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="95.6486%" y="965" width="0.0414%" height="15" fill="rgb(241,132,3)" fg:x="2308" fg:w="1"/><text x="95.8986%" y="975.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::default::Default&gt;::default (1 samples, 0.04%)</title><rect x="95.6486%" y="949" width="0.0414%" height="15" fill="rgb(225,14,2)" fg:x="2308" fg:w="1"/><text x="95.8986%" y="959.50"></text></g><g><title>arrayvec::ArrayVec&lt;A&gt;::new (1 samples, 0.04%)</title><rect x="95.6486%" y="933" width="0.0414%" height="15" fill="rgb(210,141,35)" fg:x="2308" fg:w="1"/><text x="95.8986%" y="943.50"></text></g><g><title>arrayvec::maybe_uninit::MaybeUninit&lt;T&gt;::uninitialized (1 samples, 0.04%)</title><rect x="95.6486%" y="917" width="0.0414%" height="15" fill="rgb(251,14,44)" fg:x="2308" fg:w="1"/><text x="95.8986%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="95.6486%" y="901" width="0.0414%" height="15" fill="rgb(247,48,18)" fg:x="2308" fg:w="1"/><text x="95.8986%" y="911.50"></text></g><g><title>tabled::table::Table::with (1 samples, 0.04%)</title><rect x="95.6900%" y="1013" width="0.0414%" height="15" fill="rgb(225,0,40)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="1023.50"></text></g><g><title>&lt;tabled::width::Wrap&lt;W,P&gt; as tabled::table::TableOption&gt;::change (1 samples, 0.04%)</title><rect x="95.6900%" y="997" width="0.0414%" height="15" fill="rgb(221,31,33)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="1007.50"></text></g><g><title>tabled::width::wrap_total_width (1 samples, 0.04%)</title><rect x="95.6900%" y="981" width="0.0414%" height="15" fill="rgb(237,42,40)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="991.50"></text></g><g><title>&lt;tabled::width::Wrap&lt;W&gt; as tabled::table::CellOption&gt;::change_cell (1 samples, 0.04%)</title><rect x="95.6900%" y="965" width="0.0414%" height="15" fill="rgb(233,51,29)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="975.50"></text></g><g><title>papergrid::string_width_multiline (1 samples, 0.04%)</title><rect x="95.6900%" y="949" width="0.0414%" height="15" fill="rgb(226,58,20)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="959.50"></text></g><g><title>strip_ansi_escapes::strip (1 samples, 0.04%)</title><rect x="95.6900%" y="933" width="0.0414%" height="15" fill="rgb(208,98,7)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="943.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.04%)</title><rect x="95.6900%" y="917" width="0.0414%" height="15" fill="rgb(228,143,44)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="927.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.04%)</title><rect x="95.6900%" y="901" width="0.0414%" height="15" fill="rgb(246,55,38)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="911.50"></text></g><g><title>vte::Parser::advance (1 samples, 0.04%)</title><rect x="95.6900%" y="885" width="0.0414%" height="15" fill="rgb(247,87,16)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="895.50"></text></g><g><title>vte::Parser::perform_state_change (1 samples, 0.04%)</title><rect x="95.6900%" y="869" width="0.0414%" height="15" fill="rgb(234,129,42)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="879.50"></text></g><g><title>vte::Parser::perform_action (1 samples, 0.04%)</title><rect x="95.6900%" y="853" width="0.0414%" height="15" fill="rgb(220,82,16)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="863.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::execute (1 samples, 0.04%)</title><rect x="95.6900%" y="837" width="0.0414%" height="15" fill="rgb(211,88,4)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="847.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_fmt (1 samples, 0.04%)</title><rect x="95.6900%" y="821" width="0.0414%" height="15" fill="rgb(248,151,21)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="831.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.04%)</title><rect x="95.6900%" y="805" width="0.0414%" height="15" fill="rgb(238,163,6)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="815.50"></text></g><g><title>core::fmt::write (1 samples, 0.04%)</title><rect x="95.6900%" y="789" width="0.0414%" height="15" fill="rgb(209,183,11)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="799.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.04%)</title><rect x="95.6900%" y="773" width="0.0414%" height="15" fill="rgb(219,37,20)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="783.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.04%)</title><rect x="95.6900%" y="757" width="0.0414%" height="15" fill="rgb(210,158,4)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at (1 samples, 0.04%)</title><rect x="95.6900%" y="741" width="0.0414%" height="15" fill="rgb(221,167,53)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="751.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_unchecked (1 samples, 0.04%)</title><rect x="95.6900%" y="725" width="0.0414%" height="15" fill="rgb(237,151,45)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="95.6900%" y="709" width="0.0414%" height="15" fill="rgb(231,39,3)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="719.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="95.6900%" y="693" width="0.0414%" height="15" fill="rgb(212,167,28)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="703.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.04%)</title><rect x="95.6900%" y="677" width="0.0414%" height="15" fill="rgb(232,178,8)" fg:x="2309" fg:w="1"/><text x="95.9400%" y="687.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="95.7315%" y="805" width="0.0414%" height="15" fill="rgb(225,151,20)" fg:x="2310" fg:w="1"/><text x="95.9815%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (1 samples, 0.04%)</title><rect x="95.8558%" y="693" width="0.0414%" height="15" fill="rgb(238,3,37)" fg:x="2313" fg:w="1"/><text x="96.1058%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.04%)</title><rect x="95.8558%" y="677" width="0.0414%" height="15" fill="rgb(251,147,42)" fg:x="2313" fg:w="1"/><text x="96.1058%" y="687.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::spare_capacity (2 samples, 0.08%)</title><rect x="95.8558%" y="709" width="0.0829%" height="15" fill="rgb(208,173,10)" fg:x="2313" fg:w="2"/><text x="96.1058%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::len (1 samples, 0.04%)</title><rect x="95.8972%" y="693" width="0.0414%" height="15" fill="rgb(246,225,4)" fg:x="2314" fg:w="1"/><text x="96.1472%" y="703.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (4 samples, 0.17%)</title><rect x="95.8143%" y="757" width="0.1658%" height="15" fill="rgb(248,102,6)" fg:x="2312" fg:w="4"/><text x="96.0643%" y="767.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 0.12%)</title><rect x="95.8558%" y="741" width="0.1243%" height="15" fill="rgb(232,6,21)" fg:x="2313" fg:w="3"/><text x="96.1058%" y="751.50"></text></g><g><title>&lt;std::io::buffered::bufwriter::BufWriter&lt;W&gt; as std::io::Write&gt;::write_all (3 samples, 0.12%)</title><rect x="95.8558%" y="725" width="0.1243%" height="15" fill="rgb(221,179,22)" fg:x="2313" fg:w="3"/><text x="96.1058%" y="735.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::write_to_buffer_unchecked (1 samples, 0.04%)</title><rect x="95.9387%" y="709" width="0.0414%" height="15" fill="rgb(252,50,20)" fg:x="2315" fg:w="1"/><text x="96.1887%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.04%)</title><rect x="95.9387%" y="693" width="0.0414%" height="15" fill="rgb(222,56,38)" fg:x="2315" fg:w="1"/><text x="96.1887%" y="703.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_fmt (7 samples, 0.29%)</title><rect x="95.7315%" y="821" width="0.2901%" height="15" fill="rgb(206,193,29)" fg:x="2310" fg:w="7"/><text x="95.9815%" y="831.50"></text></g><g><title>std::io::Write::write_fmt (6 samples, 0.25%)</title><rect x="95.7729%" y="805" width="0.2487%" height="15" fill="rgb(239,192,45)" fg:x="2311" fg:w="6"/><text x="96.0229%" y="815.50"></text></g><g><title>core::fmt::write (5 samples, 0.21%)</title><rect x="95.8143%" y="789" width="0.2072%" height="15" fill="rgb(254,18,36)" fg:x="2312" fg:w="5"/><text x="96.0643%" y="799.50"></text></g><g><title>core::fmt::Write::write_char (5 samples, 0.21%)</title><rect x="95.8143%" y="773" width="0.2072%" height="15" fill="rgb(221,127,11)" fg:x="2312" fg:w="5"/><text x="96.0643%" y="783.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (1 samples, 0.04%)</title><rect x="95.9801%" y="757" width="0.0414%" height="15" fill="rgb(234,146,35)" fg:x="2316" fg:w="1"/><text x="96.2301%" y="767.50"></text></g><g><title>core::char::methods::encode_utf8_raw (1 samples, 0.04%)</title><rect x="95.9801%" y="741" width="0.0414%" height="15" fill="rgb(254,201,37)" fg:x="2316" fg:w="1"/><text x="96.2301%" y="751.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.04%)</title><rect x="95.9801%" y="725" width="0.0414%" height="15" fill="rgb(211,202,23)" fg:x="2316" fg:w="1"/><text x="96.2301%" y="735.50"></text></g><g><title>&lt;core::ops::range::RangeTo&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="95.9801%" y="709" width="0.0414%" height="15" fill="rgb(237,91,2)" fg:x="2316" fg:w="1"/><text x="96.2301%" y="719.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.04%)</title><rect x="95.9801%" y="693" width="0.0414%" height="15" fill="rgb(226,228,36)" fg:x="2316" fg:w="1"/><text x="96.2301%" y="703.50"></text></g><g><title>papergrid::Grid::build_widths (8 samples, 0.33%)</title><rect x="95.7315%" y="997" width="0.3315%" height="15" fill="rgb(213,63,50)" fg:x="2310" fg:w="8"/><text x="95.9815%" y="1007.50"></text></g><g><title>papergrid::cells_content (8 samples, 0.33%)</title><rect x="95.7315%" y="981" width="0.3315%" height="15" fill="rgb(235,194,19)" fg:x="2310" fg:w="8"/><text x="95.9815%" y="991.50"></text></g><g><title>papergrid::string_width_tab (8 samples, 0.33%)</title><rect x="95.7315%" y="965" width="0.3315%" height="15" fill="rgb(207,204,18)" fg:x="2310" fg:w="8"/><text x="95.9815%" y="975.50"></text></g><g><title>papergrid::string_width (8 samples, 0.33%)</title><rect x="95.7315%" y="949" width="0.3315%" height="15" fill="rgb(248,8,7)" fg:x="2310" fg:w="8"/><text x="95.9815%" y="959.50"></text></g><g><title>strip_ansi_escapes::strip (8 samples, 0.33%)</title><rect x="95.7315%" y="933" width="0.3315%" height="15" fill="rgb(223,145,47)" fg:x="2310" fg:w="8"/><text x="95.9815%" y="943.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.33%)</title><rect x="95.7315%" y="917" width="0.3315%" height="15" fill="rgb(228,84,11)" fg:x="2310" fg:w="8"/><text x="95.9815%" y="927.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (8 samples, 0.33%)</title><rect x="95.7315%" y="901" width="0.3315%" height="15" fill="rgb(218,76,45)" fg:x="2310" fg:w="8"/><text x="95.9815%" y="911.50"></text></g><g><title>vte::Parser::advance (8 samples, 0.33%)</title><rect x="95.7315%" y="885" width="0.3315%" height="15" fill="rgb(223,80,15)" fg:x="2310" fg:w="8"/><text x="95.9815%" y="895.50"></text></g><g><title>vte::Parser::perform_state_change (8 samples, 0.33%)</title><rect x="95.7315%" y="869" width="0.3315%" height="15" fill="rgb(219,218,33)" fg:x="2310" fg:w="8"/><text x="95.9815%" y="879.50"></text></g><g><title>vte::Parser::perform_action (8 samples, 0.33%)</title><rect x="95.7315%" y="853" width="0.3315%" height="15" fill="rgb(208,51,11)" fg:x="2310" fg:w="8"/><text x="95.9815%" y="863.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::print (8 samples, 0.33%)</title><rect x="95.7315%" y="837" width="0.3315%" height="15" fill="rgb(229,165,39)" fg:x="2310" fg:w="8"/><text x="95.9815%" y="847.50"></text></g><g><title>core::fmt::Arguments::new_v1 (1 samples, 0.04%)</title><rect x="96.0215%" y="821" width="0.0414%" height="15" fill="rgb(241,100,24)" fg:x="2317" fg:w="1"/><text x="96.2715%" y="831.50"></text></g><g><title>tabled::width::decrease_total_width_fn (9 samples, 0.37%)</title><rect x="95.7315%" y="1013" width="0.3730%" height="15" fill="rgb(228,14,23)" fg:x="2310" fg:w="9"/><text x="95.9815%" y="1023.50"></text></g><g><title>tabled::width::build_min_widths (1 samples, 0.04%)</title><rect x="96.0630%" y="997" width="0.0414%" height="15" fill="rgb(247,116,52)" fg:x="2318" fg:w="1"/><text x="96.3130%" y="1007.50"></text></g><g><title>papergrid::Grid::build_widths (1 samples, 0.04%)</title><rect x="96.0630%" y="981" width="0.0414%" height="15" fill="rgb(216,149,33)" fg:x="2318" fg:w="1"/><text x="96.3130%" y="991.50"></text></g><g><title>papergrid::cells_content (1 samples, 0.04%)</title><rect x="96.0630%" y="965" width="0.0414%" height="15" fill="rgb(238,142,29)" fg:x="2318" fg:w="1"/><text x="96.3130%" y="975.50"></text></g><g><title>papergrid::string_width_tab (1 samples, 0.04%)</title><rect x="96.0630%" y="949" width="0.0414%" height="15" fill="rgb(224,83,40)" fg:x="2318" fg:w="1"/><text x="96.3130%" y="959.50"></text></g><g><title>papergrid::string_width (1 samples, 0.04%)</title><rect x="96.0630%" y="933" width="0.0414%" height="15" fill="rgb(234,165,11)" fg:x="2318" fg:w="1"/><text x="96.3130%" y="943.50"></text></g><g><title>strip_ansi_escapes::strip (1 samples, 0.04%)</title><rect x="96.0630%" y="917" width="0.0414%" height="15" fill="rgb(215,96,23)" fg:x="2318" fg:w="1"/><text x="96.3130%" y="927.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="96.0630%" y="901" width="0.0414%" height="15" fill="rgb(233,179,26)" fg:x="2318" fg:w="1"/><text x="96.3130%" y="911.50"></text></g><g><title>tabled::width::wrap_total_width (1 samples, 0.04%)</title><rect x="96.1044%" y="1013" width="0.0414%" height="15" fill="rgb(225,129,33)" fg:x="2319" fg:w="1"/><text x="96.3544%" y="1023.50"></text></g><g><title>tabled::width::decrease_total_width_fn (1 samples, 0.04%)</title><rect x="96.1044%" y="997" width="0.0414%" height="15" fill="rgb(237,49,13)" fg:x="2319" fg:w="1"/><text x="96.3544%" y="1007.50"></text></g><g><title>papergrid::Grid::build_widths (1 samples, 0.04%)</title><rect x="96.1044%" y="981" width="0.0414%" height="15" fill="rgb(211,3,31)" fg:x="2319" fg:w="1"/><text x="96.3544%" y="991.50"></text></g><g><title>papergrid::cells_content (1 samples, 0.04%)</title><rect x="96.1044%" y="965" width="0.0414%" height="15" fill="rgb(216,152,19)" fg:x="2319" fg:w="1"/><text x="96.3544%" y="975.50"></text></g><g><title>papergrid::string_width_tab (1 samples, 0.04%)</title><rect x="96.1044%" y="949" width="0.0414%" height="15" fill="rgb(251,121,35)" fg:x="2319" fg:w="1"/><text x="96.3544%" y="959.50"></text></g><g><title>papergrid::string_width (1 samples, 0.04%)</title><rect x="96.1044%" y="933" width="0.0414%" height="15" fill="rgb(210,217,47)" fg:x="2319" fg:w="1"/><text x="96.3544%" y="943.50"></text></g><g><title>strip_ansi_escapes::strip (1 samples, 0.04%)</title><rect x="96.1044%" y="917" width="0.0414%" height="15" fill="rgb(244,116,22)" fg:x="2319" fg:w="1"/><text x="96.3544%" y="927.50"></text></g><g><title>strip_ansi_escapes::Writer&lt;W&gt;::into_inner (1 samples, 0.04%)</title><rect x="96.1044%" y="901" width="0.0414%" height="15" fill="rgb(228,17,21)" fg:x="2319" fg:w="1"/><text x="96.3544%" y="911.50"></text></g><g><title>strip_ansi_escapes::Performer&lt;W&gt;::into_inner (1 samples, 0.04%)</title><rect x="96.1044%" y="885" width="0.0414%" height="15" fill="rgb(240,149,34)" fg:x="2319" fg:w="1"/><text x="96.3544%" y="895.50"></text></g><g><title>std::io::buffered::linewriter::LineWriter&lt;W&gt;::into_inner (1 samples, 0.04%)</title><rect x="96.1044%" y="869" width="0.0414%" height="15" fill="rgb(208,125,47)" fg:x="2319" fg:w="1"/><text x="96.3544%" y="879.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::into_inner (1 samples, 0.04%)</title><rect x="96.1044%" y="853" width="0.0414%" height="15" fill="rgb(249,186,39)" fg:x="2319" fg:w="1"/><text x="96.3544%" y="863.50"></text></g><g><title>[unknown] (1,940 samples, 80.40%)</title><rect x="15.7895%" y="1029" width="80.3978%" height="15" fill="rgb(240,220,33)" fg:x="381" fg:w="1940"/><text x="16.0395%" y="1039.50">[unknown]</text></g><g><title>vte::Parser::perform_state_change (1 samples, 0.04%)</title><rect x="96.1459%" y="1013" width="0.0414%" height="15" fill="rgb(243,110,23)" fg:x="2320" fg:w="1"/><text x="96.3959%" y="1023.50"></text></g><g><title>__clone (6 samples, 0.25%)</title><rect x="96.1873%" y="1029" width="0.2487%" height="15" fill="rgb(219,163,46)" fg:x="2321" fg:w="6"/><text x="96.4373%" y="1039.50"></text></g><g><title>[libc.so.6] (1 samples, 0.04%)</title><rect x="96.3945%" y="1013" width="0.0414%" height="15" fill="rgb(216,126,30)" fg:x="2326" fg:w="1"/><text x="96.6445%" y="1023.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.04%)</title><rect x="96.3945%" y="997" width="0.0414%" height="15" fill="rgb(208,139,11)" fg:x="2326" fg:w="1"/><text x="96.6445%" y="1007.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 0.04%)</title><rect x="96.3945%" y="981" width="0.0414%" height="15" fill="rgb(213,118,36)" fg:x="2326" fg:w="1"/><text x="96.6445%" y="991.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.04%)</title><rect x="96.3945%" y="965" width="0.0414%" height="15" fill="rgb(226,43,17)" fg:x="2326" fg:w="1"/><text x="96.6445%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.04%)</title><rect x="96.3945%" y="949" width="0.0414%" height="15" fill="rgb(254,217,4)" fg:x="2326" fg:w="1"/><text x="96.6445%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.04%)</title><rect x="96.3945%" y="933" width="0.0414%" height="15" fill="rgb(210,134,47)" fg:x="2326" fg:w="1"/><text x="96.6445%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.04%)</title><rect x="96.4360%" y="1029" width="0.0414%" height="15" fill="rgb(237,24,49)" fg:x="2327" fg:w="1"/><text x="96.6860%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.08%)</title><rect x="96.4774%" y="1029" width="0.0829%" height="15" fill="rgb(251,39,46)" fg:x="2328" fg:w="2"/><text x="96.7274%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.12%)</title><rect x="96.5603%" y="1029" width="0.1243%" height="15" fill="rgb(251,220,3)" fg:x="2330" fg:w="3"/><text x="96.8103%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.04%)</title><rect x="96.6846%" y="1029" width="0.0414%" height="15" fill="rgb(228,105,12)" fg:x="2333" fg:w="1"/><text x="96.9346%" y="1039.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.08%)</title><rect x="96.7261%" y="1029" width="0.0829%" height="15" fill="rgb(215,196,1)" fg:x="2334" fg:w="2"/><text x="96.9761%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.08%)</title><rect x="96.8090%" y="1029" width="0.0829%" height="15" fill="rgb(214,33,39)" fg:x="2336" fg:w="2"/><text x="97.0590%" y="1039.50"></text></g><g><title>ansi_parser::parsers::cursor_down (3 samples, 0.12%)</title><rect x="96.8918%" y="1029" width="0.1243%" height="15" fill="rgb(220,19,52)" fg:x="2338" fg:w="3"/><text x="97.1418%" y="1039.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (2 samples, 0.08%)</title><rect x="96.9333%" y="1013" width="0.0829%" height="15" fill="rgb(221,78,38)" fg:x="2339" fg:w="2"/><text x="97.1833%" y="1023.50"></text></g><g><title>ansi_parser::parsers::graphics_mode1 (1 samples, 0.04%)</title><rect x="97.0162%" y="1029" width="0.0414%" height="15" fill="rgb(253,30,16)" fg:x="2341" fg:w="1"/><text x="97.2662%" y="1039.50"></text></g><g><title>&lt;&amp;str as nom::traits::Compare&lt;&amp;str&gt;&gt;::compare (1 samples, 0.04%)</title><rect x="97.0162%" y="1013" width="0.0414%" height="15" fill="rgb(242,65,0)" fg:x="2341" fg:w="1"/><text x="97.2662%" y="1023.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (1 samples, 0.04%)</title><rect x="97.0576%" y="1029" width="0.0414%" height="15" fill="rgb(235,201,12)" fg:x="2342" fg:w="1"/><text x="97.3076%" y="1039.50"></text></g><g><title>core::alloc::layout::Layout::from_size_align_unchecked (2 samples, 0.08%)</title><rect x="97.0990%" y="1029" width="0.0829%" height="15" fill="rgb(233,161,9)" fg:x="2343" fg:w="2"/><text x="97.3490%" y="1039.50"></text></g><g><title>core::core_arch::x86::m128iExt::as_i8x16 (1 samples, 0.04%)</title><rect x="97.1819%" y="1029" width="0.0414%" height="15" fill="rgb(241,207,41)" fg:x="2345" fg:w="1"/><text x="97.4319%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::position (3 samples, 0.12%)</title><rect x="97.2234%" y="1029" width="0.1243%" height="15" fill="rgb(212,69,46)" fg:x="2346" fg:w="3"/><text x="97.4734%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.12%)</title><rect x="97.3477%" y="1029" width="0.1243%" height="15" fill="rgb(239,69,45)" fg:x="2349" fg:w="3"/><text x="97.5977%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.04%)</title><rect x="97.4720%" y="1029" width="0.0414%" height="15" fill="rgb(242,117,48)" fg:x="2352" fg:w="1"/><text x="97.7220%" y="1039.50"></text></g><g><title>core::mem::replace (1 samples, 0.04%)</title><rect x="97.5135%" y="1029" width="0.0414%" height="15" fill="rgb(228,41,36)" fg:x="2353" fg:w="1"/><text x="97.7635%" y="1039.50"></text></g><g><title>core::num::nonzero::NonZeroUsize::new_unchecked (2 samples, 0.08%)</title><rect x="97.5549%" y="1029" width="0.0829%" height="15" fill="rgb(212,3,32)" fg:x="2354" fg:w="2"/><text x="97.8049%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::cast (1 samples, 0.04%)</title><rect x="97.6378%" y="1029" width="0.0414%" height="15" fill="rgb(233,41,49)" fg:x="2356" fg:w="1"/><text x="97.8878%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::guaranteed_eq (3 samples, 0.12%)</title><rect x="97.6792%" y="1029" width="0.1243%" height="15" fill="rgb(252,170,49)" fg:x="2357" fg:w="3"/><text x="97.9292%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::is_null (2 samples, 0.08%)</title><rect x="97.8036%" y="1029" width="0.0829%" height="15" fill="rgb(229,53,26)" fg:x="2360" fg:w="2"/><text x="98.0536%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const [T]&gt;::len (1 samples, 0.04%)</title><rect x="97.8864%" y="1029" width="0.0414%" height="15" fill="rgb(217,157,12)" fg:x="2362" fg:w="1"/><text x="98.1364%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;(nu_protocol::ast::expression::Expression,core::option::Option&lt;nu_parser::errors::ParseError&gt;)&gt; (3 samples, 0.12%)</title><rect x="97.9279%" y="1029" width="0.1243%" height="15" fill="rgb(227,17,9)" fg:x="2363" fg:w="3"/><text x="98.1779%" y="1039.50"></text></g><g><title>core::ptr::metadata::from_raw_parts (2 samples, 0.08%)</title><rect x="98.0522%" y="1029" width="0.0829%" height="15" fill="rgb(218,84,12)" fg:x="2366" fg:w="2"/><text x="98.3022%" y="1039.50"></text></g><g><title>core::ptr::metadata::metadata (1 samples, 0.04%)</title><rect x="98.1351%" y="1029" width="0.0414%" height="15" fill="rgb(212,79,24)" fg:x="2368" fg:w="1"/><text x="98.3851%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (2 samples, 0.08%)</title><rect x="98.1765%" y="1029" width="0.0829%" height="15" fill="rgb(217,222,37)" fg:x="2369" fg:w="2"/><text x="98.4265%" y="1039.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ptr (2 samples, 0.08%)</title><rect x="98.2594%" y="1029" width="0.0829%" height="15" fill="rgb(246,208,8)" fg:x="2371" fg:w="2"/><text x="98.5094%" y="1039.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new (1 samples, 0.04%)</title><rect x="98.3423%" y="1029" width="0.0414%" height="15" fill="rgb(244,133,10)" fg:x="2373" fg:w="1"/><text x="98.5923%" y="1039.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (6 samples, 0.25%)</title><rect x="98.3838%" y="1029" width="0.2487%" height="15" fill="rgb(209,219,41)" fg:x="2374" fg:w="6"/><text x="98.6338%" y="1039.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;[T]&gt;::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="98.6324%" y="1029" width="0.0414%" height="15" fill="rgb(253,175,45)" fg:x="2380" fg:w="1"/><text x="98.8824%" y="1039.50"></text></g><g><title>core::ptr::slice_from_raw_parts (1 samples, 0.04%)</title><rect x="98.6738%" y="1029" width="0.0414%" height="15" fill="rgb(235,100,37)" fg:x="2381" fg:w="1"/><text x="98.9238%" y="1039.50"></text></g><g><title>core::ptr::unique::Unique&lt;T&gt;::as_ptr (1 samples, 0.04%)</title><rect x="98.7153%" y="1029" width="0.0414%" height="15" fill="rgb(225,87,19)" fg:x="2382" fg:w="1"/><text x="98.9653%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::as_ptr (2 samples, 0.08%)</title><rect x="98.7567%" y="1029" width="0.0829%" height="15" fill="rgb(217,152,17)" fg:x="2383" fg:w="2"/><text x="99.0067%" y="1039.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (3 samples, 0.12%)</title><rect x="98.8396%" y="1029" width="0.1243%" height="15" fill="rgb(235,72,13)" fg:x="2385" fg:w="3"/><text x="99.0896%" y="1039.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.21%)</title><rect x="98.9639%" y="1029" width="0.2072%" height="15" fill="rgb(233,140,18)" fg:x="2388" fg:w="5"/><text x="99.2139%" y="1039.50"></text></g><g><title>core::slice::raw::from_raw_parts (3 samples, 0.12%)</title><rect x="99.1712%" y="1029" width="0.1243%" height="15" fill="rgb(207,212,28)" fg:x="2393" fg:w="3"/><text x="99.4212%" y="1039.50"></text></g><g><title>core::slice::raw::from_raw_parts_mut (1 samples, 0.04%)</title><rect x="99.2955%" y="1029" width="0.0414%" height="15" fill="rgb(220,130,25)" fg:x="2396" fg:w="1"/><text x="99.5455%" y="1039.50"></text></g><g><title>core::str::&lt;impl str&gt;::chars (3 samples, 0.12%)</title><rect x="99.3369%" y="1029" width="0.1243%" height="15" fill="rgb(205,55,34)" fg:x="2397" fg:w="3"/><text x="99.5869%" y="1039.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.04%)</title><rect x="99.4613%" y="1029" width="0.0414%" height="15" fill="rgb(237,54,35)" fg:x="2400" fg:w="1"/><text x="99.7113%" y="1039.50"></text></g><g><title>core::str::&lt;impl str&gt;::len (1 samples, 0.04%)</title><rect x="99.5027%" y="1029" width="0.0414%" height="15" fill="rgb(208,67,23)" fg:x="2401" fg:w="1"/><text x="99.7527%" y="1039.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (1 samples, 0.04%)</title><rect x="99.5441%" y="1029" width="0.0414%" height="15" fill="rgb(206,207,50)" fg:x="2402" fg:w="1"/><text x="99.7941%" y="1039.50"></text></g><g><title>malloc (1 samples, 0.04%)</title><rect x="99.5856%" y="1029" width="0.0414%" height="15" fill="rgb(213,211,42)" fg:x="2403" fg:w="1"/><text x="99.8356%" y="1039.50"></text></g><g><title>nu_parser::lex::is_special_item (2 samples, 0.08%)</title><rect x="99.6270%" y="1029" width="0.0829%" height="15" fill="rgb(252,197,50)" fg:x="2404" fg:w="2"/><text x="99.8770%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.08%)</title><rect x="99.7099%" y="1029" width="0.0829%" height="15" fill="rgb(251,211,41)" fg:x="2406" fg:w="2"/><text x="99.9599%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.17%)</title><rect x="99.7928%" y="1013" width="0.1658%" height="15" fill="rgb(229,211,5)" fg:x="2408" fg:w="4"/><text x="100.0428%" y="1023.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.04%)</title><rect x="99.9171%" y="997" width="0.0414%" height="15" fill="rgb(239,36,31)" fg:x="2411" fg:w="1"/><text x="100.1671%" y="1007.50"></text></g><g><title>all (2,413 samples, 100%)</title><rect x="0.0000%" y="1061" width="100.0000%" height="15" fill="rgb(248,67,31)" fg:x="0" fg:w="2413"/><text x="0.2500%" y="1071.50"></text></g><g><title>nu (2,413 samples, 100.00%)</title><rect x="0.0000%" y="1045" width="100.0000%" height="15" fill="rgb(249,55,44)" fg:x="0" fg:w="2413"/><text x="0.2500%" y="1055.50">nu</text></g><g><title>str.0 (5 samples, 0.21%)</title><rect x="99.7928%" y="1029" width="0.2072%" height="15" fill="rgb(216,82,12)" fg:x="2408" fg:w="5"/><text x="100.0428%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.04%)</title><rect x="99.9586%" y="1013" width="0.0414%" height="15" fill="rgb(242,174,1)" fg:x="2412" fg:w="1"/><text x="100.2086%" y="1023.50"></text></g></svg></svg>