<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="566" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="549.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="549.00"> </text><svg id="frames" x="10" width="1180" total_samples="221"><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position (1 samples, 0.45%)</title><rect x="0.0000%" y="469" width="0.4525%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.45%)</title><rect x="0.4525%" y="469" width="0.4525%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="1"/><text x="0.7025%" y="479.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.45%)</title><rect x="0.9050%" y="469" width="0.4525%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="1.1550%" y="479.50"></text></g><g><title>[libc.so.6] (2 samples, 0.90%)</title><rect x="1.3575%" y="469" width="0.9050%" height="15" fill="rgb(248,212,6)" fg:x="3" fg:w="2"/><text x="1.6075%" y="479.50"></text></g><g><title>__rdl_alloc (1 samples, 0.45%)</title><rect x="2.2624%" y="469" width="0.4525%" height="15" fill="rgb(208,68,35)" fg:x="5" fg:w="1"/><text x="2.5124%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.45%)</title><rect x="2.7149%" y="469" width="0.4525%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="1"/><text x="2.9649%" y="479.50"></text></g><g><title>ansi_parser::parsers::erase_line (1 samples, 0.45%)</title><rect x="3.1674%" y="469" width="0.4525%" height="15" fill="rgb(207,160,47)" fg:x="7" fg:w="1"/><text x="3.4174%" y="479.50"></text></g><g><title>[[heap]] (9 samples, 4.07%)</title><rect x="0.0000%" y="485" width="4.0724%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="9"/><text x="0.2500%" y="495.50">[[he..</text></g><g><title>nu_parser::parser::discover_captures_in_expr (1 samples, 0.45%)</title><rect x="3.6199%" y="469" width="0.4525%" height="15" fill="rgb(218,30,26)" fg:x="8" fg:w="1"/><text x="3.8699%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (1 samples, 0.45%)</title><rect x="4.0724%" y="469" width="0.4525%" height="15" fill="rgb(220,122,19)" fg:x="9" fg:w="1"/><text x="4.3224%" y="479.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::print (1 samples, 0.45%)</title><rect x="4.5249%" y="469" width="0.4525%" height="15" fill="rgb(250,228,42)" fg:x="10" fg:w="1"/><text x="4.7749%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.45%)</title><rect x="4.9774%" y="469" width="0.4525%" height="15" fill="rgb(240,193,28)" fg:x="11" fg:w="1"/><text x="5.2274%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;(nu_protocol::ast::expression::Expression,core::option::Option&lt;nu_parser::errors::ParseError&gt;)&gt; (1 samples, 0.45%)</title><rect x="5.4299%" y="469" width="0.4525%" height="15" fill="rgb(216,20,37)" fg:x="12" fg:w="1"/><text x="5.6799%" y="479.50"></text></g><g><title>[[stack]] (5 samples, 2.26%)</title><rect x="4.0724%" y="485" width="2.2624%" height="15" fill="rgb(206,188,39)" fg:x="9" fg:w="5"/><text x="4.3224%" y="495.50">[..</text></g><g><title>core::ptr::drop_in_place&lt;nu_parser::errors::ParseError&gt; (1 samples, 0.45%)</title><rect x="5.8824%" y="469" width="0.4525%" height="15" fill="rgb(217,207,13)" fg:x="13" fg:w="1"/><text x="6.1324%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (8 samples, 3.62%)</title><rect x="6.3348%" y="485" width="3.6199%" height="15" fill="rgb(231,73,38)" fg:x="14" fg:w="8"/><text x="6.5848%" y="495.50">[ld-..</text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.90%)</title><rect x="9.0498%" y="469" width="0.9050%" height="15" fill="rgb(225,20,46)" fg:x="20" fg:w="2"/><text x="9.2998%" y="479.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.90%)</title><rect x="9.0498%" y="453" width="0.9050%" height="15" fill="rgb(210,31,41)" fg:x="20" fg:w="2"/><text x="9.2998%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.90%)</title><rect x="9.0498%" y="437" width="0.9050%" height="15" fill="rgb(221,200,47)" fg:x="20" fg:w="2"/><text x="9.2998%" y="447.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.90%)</title><rect x="9.0498%" y="421" width="0.9050%" height="15" fill="rgb(226,26,5)" fg:x="20" fg:w="2"/><text x="9.2998%" y="431.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.90%)</title><rect x="12.2172%" y="469" width="0.9050%" height="15" fill="rgb(249,33,26)" fg:x="27" fg:w="2"/><text x="12.4672%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (1 samples, 0.45%)</title><rect x="13.1222%" y="469" width="0.4525%" height="15" fill="rgb(235,183,28)" fg:x="29" fg:w="1"/><text x="13.3722%" y="479.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.45%)</title><rect x="13.5747%" y="469" width="0.4525%" height="15" fill="rgb(221,5,38)" fg:x="30" fg:w="1"/><text x="13.8247%" y="479.50"></text></g><g><title>&lt;tabled::modify::ModifyList&lt;O,S&gt; as tabled::table::TableOption&gt;::change (1 samples, 0.45%)</title><rect x="14.0271%" y="421" width="0.4525%" height="15" fill="rgb(247,18,42)" fg:x="31" fg:w="1"/><text x="14.2771%" y="431.50"></text></g><g><title>&lt;tabled::alignment::Alignment as tabled::table::CellOption&gt;::change_cell (1 samples, 0.45%)</title><rect x="14.0271%" y="405" width="0.4525%" height="15" fill="rgb(241,131,45)" fg:x="31" fg:w="1"/><text x="14.2771%" y="415.50"></text></g><g><title>papergrid::Grid::set (1 samples, 0.45%)</title><rect x="14.0271%" y="389" width="0.4525%" height="15" fill="rgb(249,31,29)" fg:x="31" fg:w="1"/><text x="14.2771%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.45%)</title><rect x="14.0271%" y="373" width="0.4525%" height="15" fill="rgb(225,111,53)" fg:x="31" fg:w="1"/><text x="14.2771%" y="383.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.45%)</title><rect x="14.4796%" y="373" width="0.4525%" height="15" fill="rgb(238,160,17)" fg:x="32" fg:w="1"/><text x="14.7296%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.45%)</title><rect x="14.4796%" y="357" width="0.4525%" height="15" fill="rgb(214,148,48)" fg:x="32" fg:w="1"/><text x="14.7296%" y="367.50"></text></g><g><title>malloc (1 samples, 0.45%)</title><rect x="14.4796%" y="341" width="0.4525%" height="15" fill="rgb(232,36,49)" fg:x="32" fg:w="1"/><text x="14.7296%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="14.4796%" y="325" width="0.4525%" height="15" fill="rgb(209,103,24)" fg:x="32" fg:w="1"/><text x="14.7296%" y="335.50"></text></g><g><title>&lt;tabled::width::Wrap&lt;W,P&gt; as tabled::table::TableOption&gt;::change (3 samples, 1.36%)</title><rect x="14.4796%" y="421" width="1.3575%" height="15" fill="rgb(229,88,8)" fg:x="32" fg:w="3"/><text x="14.7296%" y="431.50"></text></g><g><title>papergrid::Grid::total_width (3 samples, 1.36%)</title><rect x="14.4796%" y="405" width="1.3575%" height="15" fill="rgb(213,181,19)" fg:x="32" fg:w="3"/><text x="14.7296%" y="415.50"></text></g><g><title>papergrid::cells_content (3 samples, 1.36%)</title><rect x="14.4796%" y="389" width="1.3575%" height="15" fill="rgb(254,191,54)" fg:x="32" fg:w="3"/><text x="14.7296%" y="399.50"></text></g><g><title>papergrid::string_width (2 samples, 0.90%)</title><rect x="14.9321%" y="373" width="0.9050%" height="15" fill="rgb(241,83,37)" fg:x="33" fg:w="2"/><text x="15.1821%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.90%)</title><rect x="14.9321%" y="357" width="0.9050%" height="15" fill="rgb(233,36,39)" fg:x="33" fg:w="2"/><text x="15.1821%" y="367.50"></text></g><g><title>papergrid::string_width_multiline (1 samples, 0.45%)</title><rect x="15.8371%" y="389" width="0.4525%" height="15" fill="rgb(226,3,54)" fg:x="35" fg:w="1"/><text x="16.0871%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.90%)</title><rect x="16.2896%" y="341" width="0.9050%" height="15" fill="rgb(245,192,40)" fg:x="36" fg:w="2"/><text x="16.5396%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.90%)</title><rect x="16.2896%" y="325" width="0.9050%" height="15" fill="rgb(238,167,29)" fg:x="36" fg:w="2"/><text x="16.5396%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.90%)</title><rect x="16.2896%" y="309" width="0.9050%" height="15" fill="rgb(232,182,51)" fg:x="36" fg:w="2"/><text x="16.5396%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.45%)</title><rect x="16.7421%" y="293" width="0.4525%" height="15" fill="rgb(231,60,39)" fg:x="37" fg:w="1"/><text x="16.9921%" y="303.50"></text></g><g><title>realloc (1 samples, 0.45%)</title><rect x="16.7421%" y="277" width="0.4525%" height="15" fill="rgb(208,69,12)" fg:x="37" fg:w="1"/><text x="16.9921%" y="287.50"></text></g><g><title>&lt;tabled::width::Wrap&lt;W&gt; as tabled::table::CellOption&gt;::change_cell (4 samples, 1.81%)</title><rect x="15.8371%" y="405" width="1.8100%" height="15" fill="rgb(235,93,37)" fg:x="35" fg:w="4"/><text x="16.0871%" y="415.50">&lt;..</text></g><g><title>papergrid::wrap_text (3 samples, 1.36%)</title><rect x="16.2896%" y="389" width="1.3575%" height="15" fill="rgb(213,116,39)" fg:x="36" fg:w="3"/><text x="16.5396%" y="399.50"></text></g><g><title>papergrid::split_by_lines (3 samples, 1.36%)</title><rect x="16.2896%" y="373" width="1.3575%" height="15" fill="rgb(222,207,29)" fg:x="36" fg:w="3"/><text x="16.5396%" y="383.50"></text></g><g><title>&lt;str as ansi_str::AnsiStr&gt;::ansi_split_at (3 samples, 1.36%)</title><rect x="16.2896%" y="357" width="1.3575%" height="15" fill="rgb(206,96,30)" fg:x="36" fg:w="3"/><text x="16.5396%" y="367.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.45%)</title><rect x="17.1946%" y="341" width="0.4525%" height="15" fill="rgb(218,138,4)" fg:x="38" fg:w="1"/><text x="17.4446%" y="351.50"></text></g><g><title>nu_command::viewers::table::build_table (9 samples, 4.07%)</title><rect x="14.0271%" y="453" width="4.0724%" height="15" fill="rgb(250,191,14)" fg:x="31" fg:w="9"/><text x="14.2771%" y="463.50">nu_c..</text></g><g><title>tabled::table::Table::with (9 samples, 4.07%)</title><rect x="14.0271%" y="437" width="4.0724%" height="15" fill="rgb(239,60,40)" fg:x="31" fg:w="9"/><text x="14.2771%" y="447.50">tabl..</text></g><g><title>tabled::width::wrap_total_width (5 samples, 2.26%)</title><rect x="15.8371%" y="421" width="2.2624%" height="15" fill="rgb(206,27,48)" fg:x="35" fg:w="5"/><text x="16.0871%" y="431.50">t..</text></g><g><title>tabled::width::decrease_total_width_fn (1 samples, 0.45%)</title><rect x="17.6471%" y="405" width="0.4525%" height="15" fill="rgb(225,35,8)" fg:x="39" fg:w="1"/><text x="17.8971%" y="415.50"></text></g><g><title>papergrid::Grid::build_widths (1 samples, 0.45%)</title><rect x="17.6471%" y="389" width="0.4525%" height="15" fill="rgb(250,213,24)" fg:x="39" fg:w="1"/><text x="17.8971%" y="399.50"></text></g><g><title>papergrid::cells_content (1 samples, 0.45%)</title><rect x="17.6471%" y="373" width="0.4525%" height="15" fill="rgb(247,123,22)" fg:x="39" fg:w="1"/><text x="17.8971%" y="383.50"></text></g><g><title>&lt;ansi_str::AnsiSplit as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.45%)</title><rect x="17.6471%" y="357" width="0.4525%" height="15" fill="rgb(231,138,38)" fg:x="39" fg:w="1"/><text x="17.8971%" y="367.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.45%)</title><rect x="17.6471%" y="341" width="0.4525%" height="15" fill="rgb(231,145,46)" fg:x="39" fg:w="1"/><text x="17.8971%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.45%)</title><rect x="18.0995%" y="357" width="0.4525%" height="15" fill="rgb(251,118,11)" fg:x="40" fg:w="1"/><text x="18.3495%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="18.0995%" y="341" width="0.4525%" height="15" fill="rgb(217,147,25)" fg:x="40" fg:w="1"/><text x="18.3495%" y="351.50"></text></g><g><title>&lt;nu_command::viewers::table::PagingTableCreator as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 4.98%)</title><rect x="14.0271%" y="469" width="4.9774%" height="15" fill="rgb(247,81,37)" fg:x="31" fg:w="11"/><text x="14.2771%" y="479.50">&lt;nu_co..</text></g><g><title>nu_protocol::value::Value::follow_cell_path (2 samples, 0.90%)</title><rect x="18.0995%" y="453" width="0.9050%" height="15" fill="rgb(209,12,38)" fg:x="40" fg:w="2"/><text x="18.3495%" y="463.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (2 samples, 0.90%)</title><rect x="18.0995%" y="437" width="0.9050%" height="15" fill="rgb(227,1,9)" fg:x="40" fg:w="2"/><text x="18.3495%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.90%)</title><rect x="18.0995%" y="421" width="0.9050%" height="15" fill="rgb(248,47,43)" fg:x="40" fg:w="2"/><text x="18.3495%" y="431.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (2 samples, 0.90%)</title><rect x="18.0995%" y="405" width="0.9050%" height="15" fill="rgb(221,10,30)" fg:x="40" fg:w="2"/><text x="18.3495%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.90%)</title><rect x="18.0995%" y="389" width="0.9050%" height="15" fill="rgb(210,229,1)" fg:x="40" fg:w="2"/><text x="18.3495%" y="399.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (2 samples, 0.90%)</title><rect x="18.0995%" y="373" width="0.9050%" height="15" fill="rgb(222,148,37)" fg:x="40" fg:w="2"/><text x="18.3495%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.45%)</title><rect x="18.5520%" y="357" width="0.4525%" height="15" fill="rgb(234,67,33)" fg:x="41" fg:w="1"/><text x="18.8020%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.45%)</title><rect x="18.5520%" y="341" width="0.4525%" height="15" fill="rgb(247,98,35)" fg:x="41" fg:w="1"/><text x="18.8020%" y="351.50"></text></g><g><title>malloc (1 samples, 0.45%)</title><rect x="18.5520%" y="325" width="0.4525%" height="15" fill="rgb(247,138,52)" fg:x="41" fg:w="1"/><text x="18.8020%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="18.5520%" y="309" width="0.4525%" height="15" fill="rgb(213,79,30)" fg:x="41" fg:w="1"/><text x="18.8020%" y="319.50"></text></g><g><title>[libc.so.6] (3 samples, 1.36%)</title><rect x="19.0045%" y="469" width="1.3575%" height="15" fill="rgb(246,177,23)" fg:x="42" fg:w="3"/><text x="19.2545%" y="479.50"></text></g><g><title>__libc_start_main (3 samples, 1.36%)</title><rect x="20.3620%" y="469" width="1.3575%" height="15" fill="rgb(230,62,27)" fg:x="45" fg:w="3"/><text x="20.6120%" y="479.50"></text></g><g><title>[libc.so.6] (3 samples, 1.36%)</title><rect x="20.3620%" y="453" width="1.3575%" height="15" fill="rgb(216,154,8)" fg:x="45" fg:w="3"/><text x="20.6120%" y="463.50"></text></g><g><title>main (3 samples, 1.36%)</title><rect x="20.3620%" y="437" width="1.3575%" height="15" fill="rgb(244,35,45)" fg:x="45" fg:w="3"/><text x="20.6120%" y="447.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 1.36%)</title><rect x="20.3620%" y="421" width="1.3575%" height="15" fill="rgb(251,115,12)" fg:x="45" fg:w="3"/><text x="20.6120%" y="431.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 1.36%)</title><rect x="20.3620%" y="405" width="1.3575%" height="15" fill="rgb(240,54,50)" fg:x="45" fg:w="3"/><text x="20.6120%" y="415.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 1.36%)</title><rect x="20.3620%" y="389" width="1.3575%" height="15" fill="rgb(233,84,52)" fg:x="45" fg:w="3"/><text x="20.6120%" y="399.50"></text></g><g><title>nu::main (3 samples, 1.36%)</title><rect x="20.3620%" y="373" width="1.3575%" height="15" fill="rgb(207,117,47)" fg:x="45" fg:w="3"/><text x="20.6120%" y="383.50"></text></g><g><title>nu_cli::eval_file::evaluate_file (3 samples, 1.36%)</title><rect x="20.3620%" y="357" width="1.3575%" height="15" fill="rgb(249,43,39)" fg:x="45" fg:w="3"/><text x="20.6120%" y="367.50"></text></g><g><title>nu_parser::parser::parse (3 samples, 1.36%)</title><rect x="20.3620%" y="341" width="1.3575%" height="15" fill="rgb(209,38,44)" fg:x="45" fg:w="3"/><text x="20.6120%" y="351.50"></text></g><g><title>nu_parser::lex::lex (3 samples, 1.36%)</title><rect x="20.3620%" y="325" width="1.3575%" height="15" fill="rgb(236,212,23)" fg:x="45" fg:w="3"/><text x="20.6120%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.45%)</title><rect x="21.7195%" y="469" width="0.4525%" height="15" fill="rgb(242,79,21)" fg:x="48" fg:w="1"/><text x="21.9695%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.45%)</title><rect x="22.1719%" y="469" width="0.4525%" height="15" fill="rgb(211,96,35)" fg:x="49" fg:w="1"/><text x="22.4219%" y="479.50"></text></g><g><title>ansi_parser::parsers::parse_int (1 samples, 0.45%)</title><rect x="22.6244%" y="469" width="0.4525%" height="15" fill="rgb(253,215,40)" fg:x="50" fg:w="1"/><text x="22.8744%" y="479.50"></text></g><g><title>cfree (1 samples, 0.45%)</title><rect x="23.0769%" y="469" width="0.4525%" height="15" fill="rgb(211,81,21)" fg:x="51" fg:w="1"/><text x="23.3269%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (1 samples, 0.45%)</title><rect x="23.5294%" y="469" width="0.4525%" height="15" fill="rgb(208,190,38)" fg:x="52" fg:w="1"/><text x="23.7794%" y="479.50"></text></g><g><title>core::str::converts::from_utf8 (1 samples, 0.45%)</title><rect x="23.9819%" y="469" width="0.4525%" height="15" fill="rgb(235,213,38)" fg:x="53" fg:w="1"/><text x="24.2319%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::block::Block&gt; (1 samples, 0.45%)</title><rect x="24.4344%" y="421" width="0.4525%" height="15" fill="rgb(237,122,38)" fg:x="54" fg:w="1"/><text x="24.6844%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::pipeline::Pipeline&gt;&gt; (1 samples, 0.45%)</title><rect x="24.4344%" y="405" width="0.4525%" height="15" fill="rgb(244,218,35)" fg:x="54" fg:w="1"/><text x="24.6844%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.45%)</title><rect x="24.4344%" y="389" width="0.4525%" height="15" fill="rgb(240,68,47)" fg:x="54" fg:w="1"/><text x="24.6844%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt; (1 samples, 0.45%)</title><rect x="24.4344%" y="373" width="0.4525%" height="15" fill="rgb(210,16,53)" fg:x="54" fg:w="1"/><text x="24.6844%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.45%)</title><rect x="24.4344%" y="357" width="0.4525%" height="15" fill="rgb(235,124,12)" fg:x="54" fg:w="1"/><text x="24.6844%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.45%)</title><rect x="24.4344%" y="341" width="0.4525%" height="15" fill="rgb(224,169,11)" fg:x="54" fg:w="1"/><text x="24.6844%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.45%)</title><rect x="24.4344%" y="325" width="0.4525%" height="15" fill="rgb(250,166,2)" fg:x="54" fg:w="1"/><text x="24.6844%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.45%)</title><rect x="24.4344%" y="309" width="0.4525%" height="15" fill="rgb(242,216,29)" fg:x="54" fg:w="1"/><text x="24.6844%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt; (1 samples, 0.45%)</title><rect x="24.4344%" y="293" width="0.4525%" height="15" fill="rgb(230,116,27)" fg:x="54" fg:w="1"/><text x="24.6844%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.45%)</title><rect x="24.4344%" y="277" width="0.4525%" height="15" fill="rgb(228,99,48)" fg:x="54" fg:w="1"/><text x="24.6844%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.45%)</title><rect x="24.4344%" y="261" width="0.4525%" height="15" fill="rgb(253,11,6)" fg:x="54" fg:w="1"/><text x="24.6844%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.45%)</title><rect x="24.4344%" y="245" width="0.4525%" height="15" fill="rgb(247,143,39)" fg:x="54" fg:w="1"/><text x="24.6844%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.45%)</title><rect x="24.4344%" y="229" width="0.4525%" height="15" fill="rgb(236,97,10)" fg:x="54" fg:w="1"/><text x="24.6844%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt;&gt; (1 samples, 0.45%)</title><rect x="24.4344%" y="213" width="0.4525%" height="15" fill="rgb(233,208,19)" fg:x="54" fg:w="1"/><text x="24.6844%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.45%)</title><rect x="24.4344%" y="197" width="0.4525%" height="15" fill="rgb(216,164,2)" fg:x="54" fg:w="1"/><text x="24.6844%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt; (1 samples, 0.45%)</title><rect x="24.4344%" y="181" width="0.4525%" height="15" fill="rgb(220,129,5)" fg:x="54" fg:w="1"/><text x="24.6844%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.45%)</title><rect x="24.4344%" y="165" width="0.4525%" height="15" fill="rgb(242,17,10)" fg:x="54" fg:w="1"/><text x="24.6844%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.45%)</title><rect x="24.4344%" y="149" width="0.4525%" height="15" fill="rgb(242,107,0)" fg:x="54" fg:w="1"/><text x="24.6844%" y="159.50"></text></g><g><title>nu_parser::parser::parse (2 samples, 0.90%)</title><rect x="24.8869%" y="421" width="0.9050%" height="15" fill="rgb(251,28,31)" fg:x="55" fg:w="2"/><text x="25.1369%" y="431.50"></text></g><g><title>nu_parser::lex::lex (2 samples, 0.90%)</title><rect x="24.8869%" y="405" width="0.9050%" height="15" fill="rgb(233,223,10)" fg:x="55" fg:w="2"/><text x="25.1369%" y="415.50"></text></g><g><title>&lt;nu_command::viewers::table::PagingTableCreator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.45%)</title><rect x="25.7919%" y="373" width="0.4525%" height="15" fill="rgb(215,21,27)" fg:x="57" fg:w="1"/><text x="26.0419%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.45%)</title><rect x="25.7919%" y="357" width="0.4525%" height="15" fill="rgb(232,23,21)" fg:x="57" fg:w="1"/><text x="26.0419%" y="367.50"></text></g><g><title>malloc (1 samples, 0.45%)</title><rect x="25.7919%" y="341" width="0.4525%" height="15" fill="rgb(244,5,23)" fg:x="57" fg:w="1"/><text x="26.0419%" y="351.50"></text></g><g><title>&lt;nu_protocol::pipeline_data::PipelineIterator as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.36%)</title><rect x="25.7919%" y="405" width="1.3575%" height="15" fill="rgb(226,81,46)" fg:x="57" fg:w="3"/><text x="26.0419%" y="415.50"></text></g><g><title>&lt;nu_protocol::value::stream::RawStream as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.36%)</title><rect x="25.7919%" y="389" width="1.3575%" height="15" fill="rgb(247,70,30)" fg:x="57" fg:w="3"/><text x="26.0419%" y="399.50"></text></g><g><title>core::str::converts::from_utf8 (2 samples, 0.90%)</title><rect x="26.2443%" y="373" width="0.9050%" height="15" fill="rgb(212,68,19)" fg:x="58" fg:w="2"/><text x="26.4943%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="27.1493%" y="373" width="0.4525%" height="15" fill="rgb(240,187,13)" fg:x="60" fg:w="1"/><text x="27.3993%" y="383.50"></text></g><g><title>nu_cli::eval_file::evaluate_file (12 samples, 5.43%)</title><rect x="24.4344%" y="453" width="5.4299%" height="15" fill="rgb(223,113,26)" fg:x="54" fg:w="12"/><text x="24.6844%" y="463.50">nu_cli:..</text></g><g><title>nu_cli::util::eval_source (12 samples, 5.43%)</title><rect x="24.4344%" y="437" width="5.4299%" height="15" fill="rgb(206,192,2)" fg:x="54" fg:w="12"/><text x="24.6844%" y="447.50">nu_cli:..</text></g><g><title>nu_protocol::pipeline_data::PipelineData::print (9 samples, 4.07%)</title><rect x="25.7919%" y="421" width="4.0724%" height="15" fill="rgb(241,108,4)" fg:x="57" fg:w="9"/><text x="26.0419%" y="431.50">nu_p..</text></g><g><title>nu_utils::utils::stdout_write_all_and_flush (6 samples, 2.71%)</title><rect x="27.1493%" y="405" width="2.7149%" height="15" fill="rgb(247,173,49)" fg:x="60" fg:w="6"/><text x="27.3993%" y="415.50">nu..</text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (6 samples, 2.71%)</title><rect x="27.1493%" y="389" width="2.7149%" height="15" fill="rgb(224,114,35)" fg:x="60" fg:w="6"/><text x="27.3993%" y="399.50">&lt;s..</text></g><g><title>std::io::Write::write_all (5 samples, 2.26%)</title><rect x="27.6018%" y="373" width="2.2624%" height="15" fill="rgb(245,159,27)" fg:x="61" fg:w="5"/><text x="27.8518%" y="383.50">s..</text></g><g><title>write (5 samples, 2.26%)</title><rect x="27.6018%" y="357" width="2.2624%" height="15" fill="rgb(245,172,44)" fg:x="61" fg:w="5"/><text x="27.8518%" y="367.50">w..</text></g><g><title>nu::main (13 samples, 5.88%)</title><rect x="24.4344%" y="469" width="5.8824%" height="15" fill="rgb(236,23,11)" fg:x="54" fg:w="13"/><text x="24.6844%" y="479.50">nu::main</text></g><g><title>nu_parser::parser::parse (1 samples, 0.45%)</title><rect x="29.8643%" y="453" width="0.4525%" height="15" fill="rgb(205,117,38)" fg:x="66" fg:w="1"/><text x="30.1143%" y="463.50"></text></g><g><title>nu_parser::parser::parse_block (1 samples, 0.45%)</title><rect x="29.8643%" y="437" width="0.4525%" height="15" fill="rgb(237,72,25)" fg:x="66" fg:w="1"/><text x="30.1143%" y="447.50"></text></g><g><title>&lt;nu_protocol::ast::block::Block as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.45%)</title><rect x="29.8643%" y="421" width="0.4525%" height="15" fill="rgb(244,70,9)" fg:x="66" fg:w="1"/><text x="30.1143%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.45%)</title><rect x="29.8643%" y="405" width="0.4525%" height="15" fill="rgb(217,125,39)" fg:x="66" fg:w="1"/><text x="30.1143%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.45%)</title><rect x="29.8643%" y="389" width="0.4525%" height="15" fill="rgb(235,36,10)" fg:x="66" fg:w="1"/><text x="30.1143%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.45%)</title><rect x="29.8643%" y="373" width="0.4525%" height="15" fill="rgb(251,123,47)" fg:x="66" fg:w="1"/><text x="30.1143%" y="383.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::find_decl (1 samples, 0.45%)</title><rect x="29.8643%" y="357" width="0.4525%" height="15" fill="rgb(221,13,13)" fg:x="66" fg:w="1"/><text x="30.1143%" y="367.50"></text></g><g><title>&lt;nu_protocol::ty::Type as core::fmt::Display&gt;::fmt (1 samples, 0.45%)</title><rect x="30.3167%" y="373" width="0.4525%" height="15" fill="rgb(238,131,9)" fg:x="67" fg:w="1"/><text x="30.5667%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.45%)</title><rect x="30.3167%" y="357" width="0.4525%" height="15" fill="rgb(211,50,8)" fg:x="67" fg:w="1"/><text x="30.5667%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.45%)</title><rect x="30.3167%" y="341" width="0.4525%" height="15" fill="rgb(245,182,24)" fg:x="67" fg:w="1"/><text x="30.5667%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.45%)</title><rect x="30.3167%" y="325" width="0.4525%" height="15" fill="rgb(242,14,37)" fg:x="67" fg:w="1"/><text x="30.5667%" y="335.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.45%)</title><rect x="30.3167%" y="309" width="0.4525%" height="15" fill="rgb(246,228,12)" fg:x="67" fg:w="1"/><text x="30.5667%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.45%)</title><rect x="30.3167%" y="293" width="0.4525%" height="15" fill="rgb(213,55,15)" fg:x="67" fg:w="1"/><text x="30.5667%" y="303.50"></text></g><g><title>&lt;nu_protocol::ty::Type as core::fmt::Display&gt;::fmt (1 samples, 0.45%)</title><rect x="30.3167%" y="277" width="0.4525%" height="15" fill="rgb(209,9,3)" fg:x="67" fg:w="1"/><text x="30.5667%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.45%)</title><rect x="30.3167%" y="261" width="0.4525%" height="15" fill="rgb(230,59,30)" fg:x="67" fg:w="1"/><text x="30.5667%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.45%)</title><rect x="30.3167%" y="245" width="0.4525%" height="15" fill="rgb(209,121,21)" fg:x="67" fg:w="1"/><text x="30.5667%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.45%)</title><rect x="30.3167%" y="229" width="0.4525%" height="15" fill="rgb(220,109,13)" fg:x="67" fg:w="1"/><text x="30.5667%" y="239.50"></text></g><g><title>alloc::fmt::format (1 samples, 0.45%)</title><rect x="30.3167%" y="213" width="0.4525%" height="15" fill="rgb(232,18,1)" fg:x="67" fg:w="1"/><text x="30.5667%" y="223.50"></text></g><g><title>core::fmt::write (1 samples, 0.45%)</title><rect x="30.3167%" y="197" width="0.4525%" height="15" fill="rgb(215,41,42)" fg:x="67" fg:w="1"/><text x="30.5667%" y="207.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (5 samples, 2.26%)</title><rect x="30.7692%" y="373" width="2.2624%" height="15" fill="rgb(224,123,36)" fg:x="68" fg:w="5"/><text x="31.0192%" y="383.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 2.26%)</title><rect x="30.7692%" y="357" width="2.2624%" height="15" fill="rgb(240,125,3)" fg:x="68" fg:w="5"/><text x="31.0192%" y="367.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 2.26%)</title><rect x="30.7692%" y="341" width="2.2624%" height="15" fill="rgb(205,98,50)" fg:x="68" fg:w="5"/><text x="31.0192%" y="351.50">a..</text></g><g><title>malloc (5 samples, 2.26%)</title><rect x="30.7692%" y="325" width="2.2624%" height="15" fill="rgb(205,185,37)" fg:x="68" fg:w="5"/><text x="31.0192%" y="335.50">m..</text></g><g><title>[libc.so.6] (4 samples, 1.81%)</title><rect x="31.2217%" y="309" width="1.8100%" height="15" fill="rgb(238,207,15)" fg:x="69" fg:w="4"/><text x="31.4717%" y="319.50">[..</text></g><g><title>[libc.so.6] (4 samples, 1.81%)</title><rect x="31.2217%" y="293" width="1.8100%" height="15" fill="rgb(213,199,42)" fg:x="69" fg:w="4"/><text x="31.4717%" y="303.50">[..</text></g><g><title>nu_command::viewers::table::colorize_value (1 samples, 0.45%)</title><rect x="33.0317%" y="373" width="0.4525%" height="15" fill="rgb(235,201,11)" fg:x="73" fg:w="1"/><text x="33.2817%" y="383.50"></text></g><g><title>nu_command::viewers::table::use_primitive_style (1 samples, 0.45%)</title><rect x="33.0317%" y="357" width="0.4525%" height="15" fill="rgb(207,46,11)" fg:x="73" fg:w="1"/><text x="33.2817%" y="367.50"></text></g><g><title>nu_ansi_term::display::AnsiGenericString&lt;S&gt;::write_to_any (1 samples, 0.45%)</title><rect x="33.0317%" y="341" width="0.4525%" height="15" fill="rgb(241,35,35)" fg:x="73" fg:w="1"/><text x="33.2817%" y="351.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (1 samples, 0.45%)</title><rect x="33.0317%" y="325" width="0.4525%" height="15" fill="rgb(243,32,47)" fg:x="73" fg:w="1"/><text x="33.2817%" y="335.50"></text></g><g><title>core::fmt::write (1 samples, 0.45%)</title><rect x="33.0317%" y="309" width="0.4525%" height="15" fill="rgb(247,202,23)" fg:x="73" fg:w="1"/><text x="33.2817%" y="319.50"></text></g><g><title>nu_ansi_term::ansi::&lt;impl nu_ansi_term::style::Style&gt;::write_prefix (1 samples, 0.45%)</title><rect x="33.0317%" y="293" width="0.4525%" height="15" fill="rgb(219,102,11)" fg:x="73" fg:w="1"/><text x="33.2817%" y="303.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (1 samples, 0.45%)</title><rect x="33.0317%" y="277" width="0.4525%" height="15" fill="rgb(243,110,44)" fg:x="73" fg:w="1"/><text x="33.2817%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (1 samples, 0.45%)</title><rect x="35.2941%" y="325" width="0.4525%" height="15" fill="rgb(222,74,54)" fg:x="78" fg:w="1"/><text x="35.5441%" y="335.50"></text></g><g><title>papergrid::Grid::style (4 samples, 1.81%)</title><rect x="35.7466%" y="325" width="1.8100%" height="15" fill="rgb(216,99,12)" fg:x="79" fg:w="4"/><text x="35.9966%" y="335.50">p..</text></g><g><title>core::hash::BuildHasher::hash_one (3 samples, 1.36%)</title><rect x="36.1991%" y="309" width="1.3575%" height="15" fill="rgb(226,22,26)" fg:x="80" fg:w="3"/><text x="36.4491%" y="319.50"></text></g><g><title>&lt;papergrid::Entity as core::hash::Hash&gt;::hash (3 samples, 1.36%)</title><rect x="36.1991%" y="293" width="1.3575%" height="15" fill="rgb(217,163,10)" fg:x="80" fg:w="3"/><text x="36.4491%" y="303.50"></text></g><g><title>core::hash::Hasher::write_usize (3 samples, 1.36%)</title><rect x="36.1991%" y="277" width="1.3575%" height="15" fill="rgb(213,25,53)" fg:x="80" fg:w="3"/><text x="36.4491%" y="287.50"></text></g><g><title>nu_cli::eval_file::evaluate_file (18 samples, 8.14%)</title><rect x="30.3167%" y="469" width="8.1448%" height="15" fill="rgb(252,105,26)" fg:x="67" fg:w="18"/><text x="30.5667%" y="479.50">nu_cli::eva..</text></g><g><title>nu_cli::util::eval_source (18 samples, 8.14%)</title><rect x="30.3167%" y="453" width="8.1448%" height="15" fill="rgb(220,39,43)" fg:x="67" fg:w="18"/><text x="30.5667%" y="463.50">nu_cli::uti..</text></g><g><title>nu_protocol::pipeline_data::PipelineData::print (18 samples, 8.14%)</title><rect x="30.3167%" y="437" width="8.1448%" height="15" fill="rgb(229,68,48)" fg:x="67" fg:w="18"/><text x="30.5667%" y="447.50">nu_protocol..</text></g><g><title>&lt;nu_protocol::pipeline_data::PipelineIterator as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 8.14%)</title><rect x="30.3167%" y="421" width="8.1448%" height="15" fill="rgb(252,8,32)" fg:x="67" fg:w="18"/><text x="30.5667%" y="431.50">&lt;nu_protoco..</text></g><g><title>&lt;nu_protocol::value::stream::RawStream as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 8.14%)</title><rect x="30.3167%" y="405" width="8.1448%" height="15" fill="rgb(223,20,43)" fg:x="67" fg:w="18"/><text x="30.5667%" y="415.50">&lt;nu_protoco..</text></g><g><title>&lt;nu_command::viewers::table::PagingTableCreator as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 8.14%)</title><rect x="30.3167%" y="389" width="8.1448%" height="15" fill="rgb(229,81,49)" fg:x="67" fg:w="18"/><text x="30.5667%" y="399.50">&lt;nu_command..</text></g><g><title>nu_command::viewers::table::print_table (11 samples, 4.98%)</title><rect x="33.4842%" y="373" width="4.9774%" height="15" fill="rgb(236,28,36)" fg:x="74" fg:w="11"/><text x="33.7342%" y="383.50">nu_com..</text></g><g><title>core::fmt::write (11 samples, 4.98%)</title><rect x="33.4842%" y="357" width="4.9774%" height="15" fill="rgb(249,185,26)" fg:x="74" fg:w="11"/><text x="33.7342%" y="367.50">core::..</text></g><g><title>&lt;papergrid::Grid as core::fmt::Display&gt;::fmt (11 samples, 4.98%)</title><rect x="33.4842%" y="341" width="4.9774%" height="15" fill="rgb(249,174,33)" fg:x="74" fg:w="11"/><text x="33.7342%" y="351.50">&lt;paper..</text></g><g><title>papergrid::print_text_formated (2 samples, 0.90%)</title><rect x="37.5566%" y="325" width="0.9050%" height="15" fill="rgb(233,201,37)" fg:x="83" fg:w="2"/><text x="37.8066%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (2 samples, 0.90%)</title><rect x="37.5566%" y="309" width="0.9050%" height="15" fill="rgb(221,78,26)" fg:x="83" fg:w="2"/><text x="37.8066%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.45%)</title><rect x="38.4615%" y="325" width="0.4525%" height="15" fill="rgb(250,127,30)" fg:x="85" fg:w="1"/><text x="38.7115%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.90%)</title><rect x="38.4615%" y="341" width="0.9050%" height="15" fill="rgb(230,49,44)" fg:x="85" fg:w="2"/><text x="38.7115%" y="351.50"></text></g><g><title>malloc (1 samples, 0.45%)</title><rect x="38.9140%" y="325" width="0.4525%" height="15" fill="rgb(229,67,23)" fg:x="86" fg:w="1"/><text x="39.1640%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.45%)</title><rect x="39.3665%" y="325" width="0.4525%" height="15" fill="rgb(249,83,47)" fg:x="87" fg:w="1"/><text x="39.6165%" y="335.50"></text></g><g><title>malloc (1 samples, 0.45%)</title><rect x="39.3665%" y="309" width="0.4525%" height="15" fill="rgb(215,43,3)" fg:x="87" fg:w="1"/><text x="39.6165%" y="319.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (4 samples, 1.81%)</title><rect x="38.4615%" y="389" width="1.8100%" height="15" fill="rgb(238,154,13)" fg:x="85" fg:w="4"/><text x="38.7115%" y="399.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 1.81%)</title><rect x="38.4615%" y="373" width="1.8100%" height="15" fill="rgb(219,56,2)" fg:x="85" fg:w="4"/><text x="38.7115%" y="383.50">&lt;..</text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (4 samples, 1.81%)</title><rect x="38.4615%" y="357" width="1.8100%" height="15" fill="rgb(233,0,4)" fg:x="85" fg:w="4"/><text x="38.7115%" y="367.50">&lt;..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.90%)</title><rect x="39.3665%" y="341" width="0.9050%" height="15" fill="rgb(235,30,7)" fg:x="87" fg:w="2"/><text x="39.6165%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.45%)</title><rect x="39.8190%" y="325" width="0.4525%" height="15" fill="rgb(250,79,13)" fg:x="88" fg:w="1"/><text x="40.0690%" y="335.50"></text></g><g><title>malloc (1 samples, 0.45%)</title><rect x="39.8190%" y="309" width="0.4525%" height="15" fill="rgb(211,146,34)" fg:x="88" fg:w="1"/><text x="40.0690%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="39.8190%" y="293" width="0.4525%" height="15" fill="rgb(228,22,38)" fg:x="88" fg:w="1"/><text x="40.0690%" y="303.50"></text></g><g><title>nu_command::viewers::table::colorize_value (1 samples, 0.45%)</title><rect x="40.2715%" y="389" width="0.4525%" height="15" fill="rgb(235,168,5)" fg:x="89" fg:w="1"/><text x="40.5215%" y="399.50"></text></g><g><title>nu_command::viewers::table::use_primitive_style (1 samples, 0.45%)</title><rect x="40.2715%" y="373" width="0.4525%" height="15" fill="rgb(221,155,16)" fg:x="89" fg:w="1"/><text x="40.5215%" y="383.50"></text></g><g><title>nu_ansi_term::display::AnsiGenericString&lt;S&gt;::write_to_any (1 samples, 0.45%)</title><rect x="40.2715%" y="357" width="0.4525%" height="15" fill="rgb(215,215,53)" fg:x="89" fg:w="1"/><text x="40.5215%" y="367.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (1 samples, 0.45%)</title><rect x="40.2715%" y="341" width="0.4525%" height="15" fill="rgb(223,4,10)" fg:x="89" fg:w="1"/><text x="40.5215%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.45%)</title><rect x="40.2715%" y="325" width="0.4525%" height="15" fill="rgb(234,103,6)" fg:x="89" fg:w="1"/><text x="40.5215%" y="335.50"></text></g><g><title>&lt;nu_ansi_term::ansi::Suffix as core::fmt::Display&gt;::fmt (1 samples, 0.45%)</title><rect x="40.2715%" y="309" width="0.4525%" height="15" fill="rgb(227,97,0)" fg:x="89" fg:w="1"/><text x="40.5215%" y="319.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_fmt (1 samples, 0.45%)</title><rect x="40.2715%" y="293" width="0.4525%" height="15" fill="rgb(234,150,53)" fg:x="89" fg:w="1"/><text x="40.5215%" y="303.50"></text></g><g><title>core::fmt::write (1 samples, 0.45%)</title><rect x="40.2715%" y="277" width="0.4525%" height="15" fill="rgb(228,201,54)" fg:x="89" fg:w="1"/><text x="40.5215%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.45%)</title><rect x="40.2715%" y="261" width="0.4525%" height="15" fill="rgb(222,22,37)" fg:x="89" fg:w="1"/><text x="40.5215%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.45%)</title><rect x="40.2715%" y="245" width="0.4525%" height="15" fill="rgb(237,53,32)" fg:x="89" fg:w="1"/><text x="40.5215%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.45%)</title><rect x="40.2715%" y="229" width="0.4525%" height="15" fill="rgb(233,25,53)" fg:x="89" fg:w="1"/><text x="40.5215%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.45%)</title><rect x="40.2715%" y="213" width="0.4525%" height="15" fill="rgb(210,40,34)" fg:x="89" fg:w="1"/><text x="40.5215%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.45%)</title><rect x="40.2715%" y="197" width="0.4525%" height="15" fill="rgb(241,220,44)" fg:x="89" fg:w="1"/><text x="40.5215%" y="207.50"></text></g><g><title>realloc (1 samples, 0.45%)</title><rect x="40.2715%" y="181" width="0.4525%" height="15" fill="rgb(235,28,35)" fg:x="89" fg:w="1"/><text x="40.5215%" y="191.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="40.2715%" y="165" width="0.4525%" height="15" fill="rgb(210,56,17)" fg:x="89" fg:w="1"/><text x="40.5215%" y="175.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="40.2715%" y="149" width="0.4525%" height="15" fill="rgb(224,130,29)" fg:x="89" fg:w="1"/><text x="40.5215%" y="159.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.45%)</title><rect x="41.1765%" y="309" width="0.4525%" height="15" fill="rgb(235,212,8)" fg:x="91" fg:w="1"/><text x="41.4265%" y="319.50"></text></g><g><title>&lt;ansi_str::AnsiSplit as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 1.36%)</title><rect x="40.7240%" y="325" width="1.3575%" height="15" fill="rgb(223,33,50)" fg:x="90" fg:w="3"/><text x="40.9740%" y="335.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.45%)</title><rect x="41.6290%" y="309" width="0.4525%" height="15" fill="rgb(219,149,13)" fg:x="92" fg:w="1"/><text x="41.8790%" y="319.50"></text></g><g><title>nu_command::viewers::table::print_table (4 samples, 1.81%)</title><rect x="40.7240%" y="389" width="1.8100%" height="15" fill="rgb(250,156,29)" fg:x="90" fg:w="4"/><text x="40.9740%" y="399.50">n..</text></g><g><title>core::fmt::write (4 samples, 1.81%)</title><rect x="40.7240%" y="373" width="1.8100%" height="15" fill="rgb(216,193,19)" fg:x="90" fg:w="4"/><text x="40.9740%" y="383.50">c..</text></g><g><title>&lt;papergrid::Grid as core::fmt::Display&gt;::fmt (4 samples, 1.81%)</title><rect x="40.7240%" y="357" width="1.8100%" height="15" fill="rgb(216,135,14)" fg:x="90" fg:w="4"/><text x="40.9740%" y="367.50">&lt;..</text></g><g><title>papergrid::cells_content (4 samples, 1.81%)</title><rect x="40.7240%" y="341" width="1.8100%" height="15" fill="rgb(241,47,5)" fg:x="90" fg:w="4"/><text x="40.9740%" y="351.50">p..</text></g><g><title>papergrid::is_cell_overriden (1 samples, 0.45%)</title><rect x="42.0814%" y="325" width="0.4525%" height="15" fill="rgb(233,42,35)" fg:x="93" fg:w="1"/><text x="42.3314%" y="335.50"></text></g><g><title>cfree (1 samples, 0.45%)</title><rect x="42.5339%" y="341" width="0.4525%" height="15" fill="rgb(231,13,6)" fg:x="94" fg:w="1"/><text x="42.7839%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="42.5339%" y="325" width="0.4525%" height="15" fill="rgb(207,181,40)" fg:x="94" fg:w="1"/><text x="42.7839%" y="335.50"></text></g><g><title>nu_cli::util::eval_source (12 samples, 5.43%)</title><rect x="38.4615%" y="469" width="5.4299%" height="15" fill="rgb(254,173,49)" fg:x="85" fg:w="12"/><text x="38.7115%" y="479.50">nu_cli:..</text></g><g><title>nu_protocol::pipeline_data::PipelineData::print (12 samples, 5.43%)</title><rect x="38.4615%" y="453" width="5.4299%" height="15" fill="rgb(221,1,38)" fg:x="85" fg:w="12"/><text x="38.7115%" y="463.50">nu_prot..</text></g><g><title>&lt;nu_protocol::pipeline_data::PipelineIterator as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 5.43%)</title><rect x="38.4615%" y="437" width="5.4299%" height="15" fill="rgb(206,124,46)" fg:x="85" fg:w="12"/><text x="38.7115%" y="447.50">&lt;nu_pro..</text></g><g><title>&lt;nu_protocol::value::stream::RawStream as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 5.43%)</title><rect x="38.4615%" y="421" width="5.4299%" height="15" fill="rgb(249,21,11)" fg:x="85" fg:w="12"/><text x="38.7115%" y="431.50">&lt;nu_pro..</text></g><g><title>&lt;nu_command::viewers::table::PagingTableCreator as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 5.43%)</title><rect x="38.4615%" y="405" width="5.4299%" height="15" fill="rgb(222,201,40)" fg:x="85" fg:w="12"/><text x="38.7115%" y="415.50">&lt;nu_com..</text></g><g><title>nu_protocol::value::Value::follow_cell_path (3 samples, 1.36%)</title><rect x="42.5339%" y="389" width="1.3575%" height="15" fill="rgb(235,61,29)" fg:x="94" fg:w="3"/><text x="42.7839%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (3 samples, 1.36%)</title><rect x="42.5339%" y="373" width="1.3575%" height="15" fill="rgb(219,207,3)" fg:x="94" fg:w="3"/><text x="42.7839%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 1.36%)</title><rect x="42.5339%" y="357" width="1.3575%" height="15" fill="rgb(222,56,46)" fg:x="94" fg:w="3"/><text x="42.7839%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::value::Value&gt;&gt; (2 samples, 0.90%)</title><rect x="42.9864%" y="341" width="0.9050%" height="15" fill="rgb(239,76,54)" fg:x="95" fg:w="2"/><text x="43.2364%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.90%)</title><rect x="42.9864%" y="325" width="0.9050%" height="15" fill="rgb(231,124,27)" fg:x="95" fg:w="2"/><text x="43.2364%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::value::Value&gt; (2 samples, 0.90%)</title><rect x="42.9864%" y="309" width="0.9050%" height="15" fill="rgb(249,195,6)" fg:x="95" fg:w="2"/><text x="43.2364%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (2 samples, 0.90%)</title><rect x="42.9864%" y="293" width="0.9050%" height="15" fill="rgb(237,174,47)" fg:x="95" fg:w="2"/><text x="43.2364%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.90%)</title><rect x="42.9864%" y="277" width="0.9050%" height="15" fill="rgb(206,201,31)" fg:x="95" fg:w="2"/><text x="43.2364%" y="287.50"></text></g><g><title>cfree (2 samples, 0.90%)</title><rect x="42.9864%" y="261" width="0.9050%" height="15" fill="rgb(231,57,52)" fg:x="95" fg:w="2"/><text x="43.2364%" y="271.50"></text></g><g><title>[libc.so.6] (2 samples, 0.90%)</title><rect x="42.9864%" y="245" width="0.9050%" height="15" fill="rgb(248,177,22)" fg:x="95" fg:w="2"/><text x="43.2364%" y="255.50"></text></g><g><title>&lt;ansi_str::AnsiSplit as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.45%)</title><rect x="43.8914%" y="389" width="0.4525%" height="15" fill="rgb(215,211,37)" fg:x="97" fg:w="1"/><text x="44.1414%" y="399.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.45%)</title><rect x="43.8914%" y="373" width="0.4525%" height="15" fill="rgb(241,128,51)" fg:x="97" fg:w="1"/><text x="44.1414%" y="383.50"></text></g><g><title>ansi_parser::parsers::parse_escape (1 samples, 0.45%)</title><rect x="43.8914%" y="357" width="0.4525%" height="15" fill="rgb(227,165,31)" fg:x="97" fg:w="1"/><text x="44.1414%" y="367.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (1 samples, 0.45%)</title><rect x="43.8914%" y="341" width="0.4525%" height="15" fill="rgb(228,167,24)" fg:x="97" fg:w="1"/><text x="44.1414%" y="351.50"></text></g><g><title>&lt;tabled::width::Wrap&lt;W,P&gt; as tabled::table::TableOption&gt;::change (2 samples, 0.90%)</title><rect x="43.8914%" y="437" width="0.9050%" height="15" fill="rgb(228,143,12)" fg:x="97" fg:w="2"/><text x="44.1414%" y="447.50"></text></g><g><title>papergrid::Grid::total_width (2 samples, 0.90%)</title><rect x="43.8914%" y="421" width="0.9050%" height="15" fill="rgb(249,149,8)" fg:x="97" fg:w="2"/><text x="44.1414%" y="431.50"></text></g><g><title>papergrid::cells_content (2 samples, 0.90%)</title><rect x="43.8914%" y="405" width="0.9050%" height="15" fill="rgb(243,35,44)" fg:x="97" fg:w="2"/><text x="44.1414%" y="415.50"></text></g><g><title>papergrid::string_width (1 samples, 0.45%)</title><rect x="44.3439%" y="389" width="0.4525%" height="15" fill="rgb(246,89,9)" fg:x="98" fg:w="1"/><text x="44.5939%" y="399.50"></text></g><g><title>strip_ansi_escapes::strip (1 samples, 0.45%)</title><rect x="44.3439%" y="373" width="0.4525%" height="15" fill="rgb(233,213,13)" fg:x="98" fg:w="1"/><text x="44.5939%" y="383.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.45%)</title><rect x="44.3439%" y="357" width="0.4525%" height="15" fill="rgb(233,141,41)" fg:x="98" fg:w="1"/><text x="44.5939%" y="367.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (1 samples, 0.45%)</title><rect x="44.3439%" y="341" width="0.4525%" height="15" fill="rgb(239,167,4)" fg:x="98" fg:w="1"/><text x="44.5939%" y="351.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::print (1 samples, 0.45%)</title><rect x="44.3439%" y="325" width="0.4525%" height="15" fill="rgb(209,217,16)" fg:x="98" fg:w="1"/><text x="44.5939%" y="335.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.45%)</title><rect x="44.3439%" y="309" width="0.4525%" height="15" fill="rgb(219,88,35)" fg:x="98" fg:w="1"/><text x="44.5939%" y="319.50"></text></g><g><title>core::fmt::write (1 samples, 0.45%)</title><rect x="44.3439%" y="293" width="0.4525%" height="15" fill="rgb(220,193,23)" fg:x="98" fg:w="1"/><text x="44.5939%" y="303.50"></text></g><g><title>core::fmt::Write::write_char (1 samples, 0.45%)</title><rect x="44.3439%" y="277" width="0.4525%" height="15" fill="rgb(230,90,52)" fg:x="98" fg:w="1"/><text x="44.5939%" y="287.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.45%)</title><rect x="44.3439%" y="261" width="0.4525%" height="15" fill="rgb(252,106,19)" fg:x="98" fg:w="1"/><text x="44.5939%" y="271.50"></text></g><g><title>papergrid::string_width_multiline (4 samples, 1.81%)</title><rect x="44.7964%" y="405" width="1.8100%" height="15" fill="rgb(206,74,20)" fg:x="99" fg:w="4"/><text x="45.0464%" y="415.50">p..</text></g><g><title>strip_ansi_escapes::strip (4 samples, 1.81%)</title><rect x="44.7964%" y="389" width="1.8100%" height="15" fill="rgb(230,138,44)" fg:x="99" fg:w="4"/><text x="45.0464%" y="399.50">s..</text></g><g><title>std::io::Write::write_all (4 samples, 1.81%)</title><rect x="44.7964%" y="373" width="1.8100%" height="15" fill="rgb(235,182,43)" fg:x="99" fg:w="4"/><text x="45.0464%" y="383.50">s..</text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (4 samples, 1.81%)</title><rect x="44.7964%" y="357" width="1.8100%" height="15" fill="rgb(242,16,51)" fg:x="99" fg:w="4"/><text x="45.0464%" y="367.50">&lt;..</text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::print (3 samples, 1.36%)</title><rect x="45.2489%" y="341" width="1.3575%" height="15" fill="rgb(248,9,4)" fg:x="100" fg:w="3"/><text x="45.4989%" y="351.50"></text></g><g><title>std::io::Write::write_fmt (3 samples, 1.36%)</title><rect x="45.2489%" y="325" width="1.3575%" height="15" fill="rgb(210,31,22)" fg:x="100" fg:w="3"/><text x="45.4989%" y="335.50"></text></g><g><title>core::fmt::write (2 samples, 0.90%)</title><rect x="45.7014%" y="309" width="0.9050%" height="15" fill="rgb(239,54,39)" fg:x="101" fg:w="2"/><text x="45.9514%" y="319.50"></text></g><g><title>core::fmt::Write::write_char (2 samples, 0.90%)</title><rect x="45.7014%" y="293" width="0.9050%" height="15" fill="rgb(230,99,41)" fg:x="101" fg:w="2"/><text x="45.9514%" y="303.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (2 samples, 0.90%)</title><rect x="45.7014%" y="277" width="0.9050%" height="15" fill="rgb(253,106,12)" fg:x="101" fg:w="2"/><text x="45.9514%" y="287.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (2 samples, 0.90%)</title><rect x="45.7014%" y="261" width="0.9050%" height="15" fill="rgb(213,46,41)" fg:x="101" fg:w="2"/><text x="45.9514%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="46.1538%" y="245" width="0.4525%" height="15" fill="rgb(215,133,35)" fg:x="102" fg:w="1"/><text x="46.4038%" y="255.50"></text></g><g><title>ansi_parser::parsers::cursor_backward (2 samples, 0.90%)</title><rect x="47.0588%" y="325" width="0.9050%" height="15" fill="rgb(213,28,5)" fg:x="104" fg:w="2"/><text x="47.3088%" y="335.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (1 samples, 0.45%)</title><rect x="47.5113%" y="309" width="0.4525%" height="15" fill="rgb(215,77,49)" fg:x="105" fg:w="1"/><text x="47.7613%" y="319.50"></text></g><g><title>ansi_parser::parsers::cursor_save (1 samples, 0.45%)</title><rect x="47.9638%" y="325" width="0.4525%" height="15" fill="rgb(248,100,22)" fg:x="106" fg:w="1"/><text x="48.2138%" y="335.50"></text></g><g><title>ansi_parser::parsers::graphics_mode (1 samples, 0.45%)</title><rect x="48.4163%" y="325" width="0.4525%" height="15" fill="rgb(208,67,9)" fg:x="107" fg:w="1"/><text x="48.6663%" y="335.50"></text></g><g><title>&lt;str as ansi_str::AnsiStr&gt;::ansi_split_at (7 samples, 3.17%)</title><rect x="46.6063%" y="373" width="3.1674%" height="15" fill="rgb(219,133,21)" fg:x="103" fg:w="7"/><text x="46.8563%" y="383.50">&lt;st..</text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 3.17%)</title><rect x="46.6063%" y="357" width="3.1674%" height="15" fill="rgb(246,46,29)" fg:x="103" fg:w="7"/><text x="46.8563%" y="367.50">&lt;an..</text></g><g><title>ansi_parser::parsers::parse_escape (7 samples, 3.17%)</title><rect x="46.6063%" y="341" width="3.1674%" height="15" fill="rgb(246,185,52)" fg:x="103" fg:w="7"/><text x="46.8563%" y="351.50">ans..</text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (2 samples, 0.90%)</title><rect x="48.8688%" y="325" width="0.9050%" height="15" fill="rgb(252,136,11)" fg:x="108" fg:w="2"/><text x="49.1188%" y="335.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (1 samples, 0.45%)</title><rect x="49.3213%" y="309" width="0.4525%" height="15" fill="rgb(219,138,53)" fg:x="109" fg:w="1"/><text x="49.5713%" y="319.50"></text></g><g><title>ansi_parser::parsers::cursor_forward (1 samples, 0.45%)</title><rect x="51.1312%" y="325" width="0.4525%" height="15" fill="rgb(211,51,23)" fg:x="113" fg:w="1"/><text x="51.3812%" y="335.50"></text></g><g><title>&lt;tabled::width::Wrap&lt;W&gt; as tabled::table::CellOption&gt;::change_cell (17 samples, 7.69%)</title><rect x="44.7964%" y="421" width="7.6923%" height="15" fill="rgb(247,221,28)" fg:x="99" fg:w="17"/><text x="45.0464%" y="431.50">&lt;tabled::wi..</text></g><g><title>papergrid::wrap_text (13 samples, 5.88%)</title><rect x="46.6063%" y="405" width="5.8824%" height="15" fill="rgb(251,222,45)" fg:x="103" fg:w="13"/><text x="46.8563%" y="415.50">papergr..</text></g><g><title>papergrid::split_by_lines (13 samples, 5.88%)</title><rect x="46.6063%" y="389" width="5.8824%" height="15" fill="rgb(217,162,53)" fg:x="103" fg:w="13"/><text x="46.8563%" y="399.50">papergr..</text></g><g><title>&lt;str as ansi_str::AnsiStr&gt;::ansi_strip (6 samples, 2.71%)</title><rect x="49.7738%" y="373" width="2.7149%" height="15" fill="rgb(229,93,14)" fg:x="110" fg:w="6"/><text x="50.0238%" y="383.50">&lt;s..</text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 2.71%)</title><rect x="49.7738%" y="357" width="2.7149%" height="15" fill="rgb(209,67,49)" fg:x="110" fg:w="6"/><text x="50.0238%" y="367.50">&lt;a..</text></g><g><title>ansi_parser::parsers::parse_escape (6 samples, 2.71%)</title><rect x="49.7738%" y="341" width="2.7149%" height="15" fill="rgb(213,87,29)" fg:x="110" fg:w="6"/><text x="50.0238%" y="351.50">an..</text></g><g><title>ansi_parser::parsers::graphics_mode (2 samples, 0.90%)</title><rect x="51.5837%" y="325" width="0.9050%" height="15" fill="rgb(205,151,52)" fg:x="114" fg:w="2"/><text x="51.8337%" y="335.50"></text></g><g><title>nu_command::viewers::table::build_table (22 samples, 9.95%)</title><rect x="43.8914%" y="469" width="9.9548%" height="15" fill="rgb(253,215,39)" fg:x="97" fg:w="22"/><text x="44.1414%" y="479.50">nu_command::vi..</text></g><g><title>tabled::table::Table::with (22 samples, 9.95%)</title><rect x="43.8914%" y="453" width="9.9548%" height="15" fill="rgb(221,220,41)" fg:x="97" fg:w="22"/><text x="44.1414%" y="463.50">tabled::table:..</text></g><g><title>tabled::width::wrap_total_width (20 samples, 9.05%)</title><rect x="44.7964%" y="437" width="9.0498%" height="15" fill="rgb(218,133,21)" fg:x="99" fg:w="20"/><text x="45.0464%" y="447.50">tabled::width..</text></g><g><title>tabled::width::decrease_total_width_fn (3 samples, 1.36%)</title><rect x="52.4887%" y="421" width="1.3575%" height="15" fill="rgb(221,193,43)" fg:x="116" fg:w="3"/><text x="52.7387%" y="431.50"></text></g><g><title>papergrid::Grid::build_widths (3 samples, 1.36%)</title><rect x="52.4887%" y="405" width="1.3575%" height="15" fill="rgb(240,128,52)" fg:x="116" fg:w="3"/><text x="52.7387%" y="415.50"></text></g><g><title>papergrid::cells_content (3 samples, 1.36%)</title><rect x="52.4887%" y="389" width="1.3575%" height="15" fill="rgb(253,114,12)" fg:x="116" fg:w="3"/><text x="52.7387%" y="399.50"></text></g><g><title>papergrid::string_width (3 samples, 1.36%)</title><rect x="52.4887%" y="373" width="1.3575%" height="15" fill="rgb(215,223,47)" fg:x="116" fg:w="3"/><text x="52.7387%" y="383.50"></text></g><g><title>strip_ansi_escapes::strip (3 samples, 1.36%)</title><rect x="52.4887%" y="357" width="1.3575%" height="15" fill="rgb(248,225,23)" fg:x="116" fg:w="3"/><text x="52.7387%" y="367.50"></text></g><g><title>std::io::Write::write_all (3 samples, 1.36%)</title><rect x="52.4887%" y="341" width="1.3575%" height="15" fill="rgb(250,108,0)" fg:x="116" fg:w="3"/><text x="52.7387%" y="351.50"></text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (3 samples, 1.36%)</title><rect x="52.4887%" y="325" width="1.3575%" height="15" fill="rgb(228,208,7)" fg:x="116" fg:w="3"/><text x="52.7387%" y="335.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::print (3 samples, 1.36%)</title><rect x="52.4887%" y="309" width="1.3575%" height="15" fill="rgb(244,45,10)" fg:x="116" fg:w="3"/><text x="52.7387%" y="319.50"></text></g><g><title>std::io::Write::write_fmt (2 samples, 0.90%)</title><rect x="52.9412%" y="293" width="0.9050%" height="15" fill="rgb(207,125,25)" fg:x="117" fg:w="2"/><text x="53.1912%" y="303.50"></text></g><g><title>core::fmt::write (2 samples, 0.90%)</title><rect x="52.9412%" y="277" width="0.9050%" height="15" fill="rgb(210,195,18)" fg:x="117" fg:w="2"/><text x="53.1912%" y="287.50"></text></g><g><title>core::fmt::Write::write_char (1 samples, 0.45%)</title><rect x="53.3937%" y="261" width="0.4525%" height="15" fill="rgb(249,80,12)" fg:x="118" fg:w="1"/><text x="53.6437%" y="271.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.45%)</title><rect x="53.3937%" y="245" width="0.4525%" height="15" fill="rgb(221,65,9)" fg:x="118" fg:w="1"/><text x="53.6437%" y="255.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.45%)</title><rect x="53.3937%" y="229" width="0.4525%" height="15" fill="rgb(235,49,36)" fg:x="118" fg:w="1"/><text x="53.6437%" y="239.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="53.3937%" y="213" width="0.4525%" height="15" fill="rgb(225,32,20)" fg:x="118" fg:w="1"/><text x="53.6437%" y="223.50"></text></g><g><title>nu_engine::eval::eval_expression (2 samples, 0.90%)</title><rect x="53.8462%" y="469" width="0.9050%" height="15" fill="rgb(215,141,46)" fg:x="119" fg:w="2"/><text x="54.0962%" y="479.50"></text></g><g><title>nu_engine::eval::eval_expression (2 samples, 0.90%)</title><rect x="53.8462%" y="453" width="0.9050%" height="15" fill="rgb(250,160,47)" fg:x="119" fg:w="2"/><text x="54.0962%" y="463.50"></text></g><g><title>nu_engine::eval::eval_expression (2 samples, 0.90%)</title><rect x="53.8462%" y="437" width="0.9050%" height="15" fill="rgb(216,222,40)" fg:x="119" fg:w="2"/><text x="54.0962%" y="447.50"></text></g><g><title>nu_engine::eval::eval_expression (2 samples, 0.90%)</title><rect x="53.8462%" y="421" width="0.9050%" height="15" fill="rgb(234,217,39)" fg:x="119" fg:w="2"/><text x="54.0962%" y="431.50"></text></g><g><title>nu_protocol::value::Value::as_string (1 samples, 0.45%)</title><rect x="54.2986%" y="405" width="0.4525%" height="15" fill="rgb(207,178,40)" fg:x="120" fg:w="1"/><text x="54.5486%" y="415.50"></text></g><g><title>nu_parser::lex::lex (2 samples, 0.90%)</title><rect x="54.7511%" y="469" width="0.9050%" height="15" fill="rgb(221,136,13)" fg:x="121" fg:w="2"/><text x="55.0011%" y="479.50"></text></g><g><title>nu_parser::parser::parse_binary_with_base (1 samples, 0.45%)</title><rect x="55.6561%" y="469" width="0.4525%" height="15" fill="rgb(249,199,10)" fg:x="123" fg:w="1"/><text x="55.9061%" y="479.50"></text></g><g><title>nu_parser::parser::parse_builtin_commands (1 samples, 0.45%)</title><rect x="56.1086%" y="469" width="0.4525%" height="15" fill="rgb(249,222,13)" fg:x="124" fg:w="1"/><text x="56.3586%" y="479.50"></text></g><g><title>nu_parser::parser::parse_expression (1 samples, 0.45%)</title><rect x="56.1086%" y="453" width="0.4525%" height="15" fill="rgb(244,185,38)" fg:x="124" fg:w="1"/><text x="56.3586%" y="463.50"></text></g><g><title>nu_parser::parser::parse_math_expression (1 samples, 0.45%)</title><rect x="56.1086%" y="437" width="0.4525%" height="15" fill="rgb(236,202,9)" fg:x="124" fg:w="1"/><text x="56.3586%" y="447.50"></text></g><g><title>nu_parser::parser::parse_value (1 samples, 0.45%)</title><rect x="56.1086%" y="421" width="0.4525%" height="15" fill="rgb(250,229,37)" fg:x="124" fg:w="1"/><text x="56.3586%" y="431.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (1 samples, 0.45%)</title><rect x="56.1086%" y="405" width="0.4525%" height="15" fill="rgb(206,174,23)" fg:x="124" fg:w="1"/><text x="56.3586%" y="415.50"></text></g><g><title>nu_parser::lex::lex (1 samples, 0.45%)</title><rect x="56.1086%" y="389" width="0.4525%" height="15" fill="rgb(211,33,43)" fg:x="124" fg:w="1"/><text x="56.3586%" y="399.50"></text></g><g><title>nu_parser::parser::parse_expression (3 samples, 1.36%)</title><rect x="56.5611%" y="469" width="1.3575%" height="15" fill="rgb(245,58,50)" fg:x="125" fg:w="3"/><text x="56.8111%" y="479.50"></text></g><g><title>nu_parser::parser::parse_math_expression (3 samples, 1.36%)</title><rect x="56.5611%" y="453" width="1.3575%" height="15" fill="rgb(244,68,36)" fg:x="125" fg:w="3"/><text x="56.8111%" y="463.50"></text></g><g><title>nu_parser::parser::parse_value (3 samples, 1.36%)</title><rect x="56.5611%" y="437" width="1.3575%" height="15" fill="rgb(232,229,15)" fg:x="125" fg:w="3"/><text x="56.8111%" y="447.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (3 samples, 1.36%)</title><rect x="56.5611%" y="421" width="1.3575%" height="15" fill="rgb(254,30,23)" fg:x="125" fg:w="3"/><text x="56.8111%" y="431.50"></text></g><g><title>nu_parser::parser::parse_table_expression (3 samples, 1.36%)</title><rect x="56.5611%" y="405" width="1.3575%" height="15" fill="rgb(235,160,14)" fg:x="125" fg:w="3"/><text x="56.8111%" y="415.50"></text></g><g><title>nu_parser::lex::lex (3 samples, 1.36%)</title><rect x="56.5611%" y="389" width="1.3575%" height="15" fill="rgb(212,155,44)" fg:x="125" fg:w="3"/><text x="56.8111%" y="399.50"></text></g><g><title>nu_parser::parser::parse_record (1 samples, 0.45%)</title><rect x="57.9186%" y="453" width="0.4525%" height="15" fill="rgb(226,2,50)" fg:x="128" fg:w="1"/><text x="58.1686%" y="463.50"></text></g><g><title>nu_parser::parser::parse_value (1 samples, 0.45%)</title><rect x="57.9186%" y="437" width="0.4525%" height="15" fill="rgb(234,177,6)" fg:x="128" fg:w="1"/><text x="58.1686%" y="447.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (1 samples, 0.45%)</title><rect x="57.9186%" y="421" width="0.4525%" height="15" fill="rgb(217,24,9)" fg:x="128" fg:w="1"/><text x="58.1686%" y="431.50"></text></g><g><title>nu_parser::parser::parse_record (1 samples, 0.45%)</title><rect x="57.9186%" y="405" width="0.4525%" height="15" fill="rgb(220,13,46)" fg:x="128" fg:w="1"/><text x="58.1686%" y="415.50"></text></g><g><title>nu_parser::parser::parse_value (1 samples, 0.45%)</title><rect x="57.9186%" y="389" width="0.4525%" height="15" fill="rgb(239,221,27)" fg:x="128" fg:w="1"/><text x="58.1686%" y="399.50"></text></g><g><title>cfree (1 samples, 0.45%)</title><rect x="57.9186%" y="373" width="0.4525%" height="15" fill="rgb(222,198,25)" fg:x="128" fg:w="1"/><text x="58.1686%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="57.9186%" y="357" width="0.4525%" height="15" fill="rgb(211,99,13)" fg:x="128" fg:w="1"/><text x="58.1686%" y="367.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (4 samples, 1.81%)</title><rect x="57.9186%" y="469" width="1.8100%" height="15" fill="rgb(232,111,31)" fg:x="128" fg:w="4"/><text x="58.1686%" y="479.50">n..</text></g><g><title>nu_parser::parser::parse_table_expression (3 samples, 1.36%)</title><rect x="58.3710%" y="453" width="1.3575%" height="15" fill="rgb(245,82,37)" fg:x="129" fg:w="3"/><text x="58.6210%" y="463.50"></text></g><g><title>nu_parser::parser::parse_list_expression (3 samples, 1.36%)</title><rect x="58.3710%" y="437" width="1.3575%" height="15" fill="rgb(227,149,46)" fg:x="129" fg:w="3"/><text x="58.6210%" y="447.50"></text></g><g><title>nu_parser::parser::parse_multispan_value (3 samples, 1.36%)</title><rect x="58.3710%" y="421" width="1.3575%" height="15" fill="rgb(218,36,50)" fg:x="129" fg:w="3"/><text x="58.6210%" y="431.50"></text></g><g><title>nu_parser::parser::parse_value (3 samples, 1.36%)</title><rect x="58.3710%" y="405" width="1.3575%" height="15" fill="rgb(226,80,48)" fg:x="129" fg:w="3"/><text x="58.6210%" y="415.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (3 samples, 1.36%)</title><rect x="58.3710%" y="389" width="1.3575%" height="15" fill="rgb(238,224,15)" fg:x="129" fg:w="3"/><text x="58.6210%" y="399.50"></text></g><g><title>nu_parser::lex::lex (3 samples, 1.36%)</title><rect x="58.3710%" y="373" width="1.3575%" height="15" fill="rgb(241,136,10)" fg:x="129" fg:w="3"/><text x="58.6210%" y="383.50"></text></g><g><title>nu_parser::parser::parse_int (1 samples, 0.45%)</title><rect x="59.7285%" y="469" width="0.4525%" height="15" fill="rgb(208,32,45)" fg:x="132" fg:w="1"/><text x="59.9785%" y="479.50"></text></g><g><title>nu_parser::parser::parse_int (1 samples, 0.45%)</title><rect x="60.6335%" y="357" width="0.4525%" height="15" fill="rgb(207,135,9)" fg:x="134" fg:w="1"/><text x="60.8835%" y="367.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (1 samples, 0.45%)</title><rect x="60.6335%" y="341" width="0.4525%" height="15" fill="rgb(206,86,44)" fg:x="134" fg:w="1"/><text x="60.8835%" y="351.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.45%)</title><rect x="60.6335%" y="325" width="0.4525%" height="15" fill="rgb(245,177,15)" fg:x="134" fg:w="1"/><text x="60.8835%" y="335.50"></text></g><g><title>nu_parser::parser::unescape_unquote_string (1 samples, 0.45%)</title><rect x="61.0860%" y="341" width="0.4525%" height="15" fill="rgb(206,64,50)" fg:x="135" fg:w="1"/><text x="61.3360%" y="351.50"></text></g><g><title>nu_parser::parser::parse_string (2 samples, 0.90%)</title><rect x="61.0860%" y="357" width="0.9050%" height="15" fill="rgb(234,36,40)" fg:x="135" fg:w="2"/><text x="61.3360%" y="367.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (1 samples, 0.45%)</title><rect x="61.5385%" y="341" width="0.4525%" height="15" fill="rgb(213,64,8)" fg:x="136" fg:w="1"/><text x="61.7885%" y="351.50"></text></g><g><title>nu_parser::parser::parse_list_expression (6 samples, 2.71%)</title><rect x="60.1810%" y="469" width="2.7149%" height="15" fill="rgb(210,75,36)" fg:x="133" fg:w="6"/><text x="60.4310%" y="479.50">nu..</text></g><g><title>nu_parser::parser::parse_multispan_value (6 samples, 2.71%)</title><rect x="60.1810%" y="453" width="2.7149%" height="15" fill="rgb(229,88,21)" fg:x="133" fg:w="6"/><text x="60.4310%" y="463.50">nu..</text></g><g><title>nu_parser::parser::parse_value (6 samples, 2.71%)</title><rect x="60.1810%" y="437" width="2.7149%" height="15" fill="rgb(252,204,47)" fg:x="133" fg:w="6"/><text x="60.4310%" y="447.50">nu..</text></g><g><title>nu_parser::parser::parse_full_cell_path (6 samples, 2.71%)</title><rect x="60.1810%" y="421" width="2.7149%" height="15" fill="rgb(208,77,27)" fg:x="133" fg:w="6"/><text x="60.4310%" y="431.50">nu..</text></g><g><title>nu_parser::parser::parse_record (6 samples, 2.71%)</title><rect x="60.1810%" y="405" width="2.7149%" height="15" fill="rgb(221,76,26)" fg:x="133" fg:w="6"/><text x="60.4310%" y="415.50">nu..</text></g><g><title>nu_parser::parser::parse_value (6 samples, 2.71%)</title><rect x="60.1810%" y="389" width="2.7149%" height="15" fill="rgb(225,139,18)" fg:x="133" fg:w="6"/><text x="60.4310%" y="399.50">nu..</text></g><g><title>nu_parser::parser::parse_value (6 samples, 2.71%)</title><rect x="60.1810%" y="373" width="2.7149%" height="15" fill="rgb(230,137,11)" fg:x="133" fg:w="6"/><text x="60.4310%" y="383.50">nu..</text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (2 samples, 0.90%)</title><rect x="61.9910%" y="357" width="0.9050%" height="15" fill="rgb(212,28,1)" fg:x="137" fg:w="2"/><text x="62.2410%" y="367.50"></text></g><g><title>nu_parser::parser::parse_math_expression (2 samples, 0.90%)</title><rect x="62.8959%" y="469" width="0.9050%" height="15" fill="rgb(248,164,17)" fg:x="139" fg:w="2"/><text x="63.1459%" y="479.50"></text></g><g><title>nu_parser::parser::parse_value (2 samples, 0.90%)</title><rect x="62.8959%" y="453" width="0.9050%" height="15" fill="rgb(222,171,42)" fg:x="139" fg:w="2"/><text x="63.1459%" y="463.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (2 samples, 0.90%)</title><rect x="62.8959%" y="437" width="0.9050%" height="15" fill="rgb(243,84,45)" fg:x="139" fg:w="2"/><text x="63.1459%" y="447.50"></text></g><g><title>nu_parser::parser::parse_table_expression (2 samples, 0.90%)</title><rect x="62.8959%" y="421" width="0.9050%" height="15" fill="rgb(252,49,23)" fg:x="139" fg:w="2"/><text x="63.1459%" y="431.50"></text></g><g><title>nu_parser::parser::parse_list_expression (2 samples, 0.90%)</title><rect x="62.8959%" y="405" width="0.9050%" height="15" fill="rgb(215,19,7)" fg:x="139" fg:w="2"/><text x="63.1459%" y="415.50"></text></g><g><title>nu_parser::lex::lex (2 samples, 0.90%)</title><rect x="62.8959%" y="389" width="0.9050%" height="15" fill="rgb(238,81,41)" fg:x="139" fg:w="2"/><text x="63.1459%" y="399.50"></text></g><g><title>cfree (2 samples, 0.90%)</title><rect x="64.2534%" y="357" width="0.9050%" height="15" fill="rgb(210,199,37)" fg:x="142" fg:w="2"/><text x="64.5034%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.90%)</title><rect x="64.2534%" y="341" width="0.9050%" height="15" fill="rgb(244,192,49)" fg:x="142" fg:w="2"/><text x="64.5034%" y="351.50"></text></g><g><title>nu_parser::parser::parse_binary (4 samples, 1.81%)</title><rect x="63.8009%" y="373" width="1.8100%" height="15" fill="rgb(226,211,11)" fg:x="141" fg:w="4"/><text x="64.0509%" y="383.50">n..</text></g><g><title>nu_parser::parser::parse_binary_with_base (1 samples, 0.45%)</title><rect x="65.1584%" y="357" width="0.4525%" height="15" fill="rgb(236,162,54)" fg:x="144" fg:w="1"/><text x="65.4084%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.45%)</title><rect x="65.1584%" y="341" width="0.4525%" height="15" fill="rgb(220,229,9)" fg:x="144" fg:w="1"/><text x="65.4084%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.45%)</title><rect x="65.6109%" y="357" width="0.4525%" height="15" fill="rgb(250,87,22)" fg:x="145" fg:w="1"/><text x="65.8609%" y="367.50"></text></g><g><title>malloc (1 samples, 0.45%)</title><rect x="65.6109%" y="341" width="0.4525%" height="15" fill="rgb(239,43,17)" fg:x="145" fg:w="1"/><text x="65.8609%" y="351.50"></text></g><g><title>nu_parser::parser::parse_filesize (2 samples, 0.90%)</title><rect x="65.6109%" y="373" width="0.9050%" height="15" fill="rgb(231,177,25)" fg:x="145" fg:w="2"/><text x="65.8609%" y="383.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (1 samples, 0.45%)</title><rect x="66.0633%" y="357" width="0.4525%" height="15" fill="rgb(219,179,1)" fg:x="146" fg:w="1"/><text x="66.3133%" y="367.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (2 samples, 0.90%)</title><rect x="66.9683%" y="357" width="0.9050%" height="15" fill="rgb(238,219,53)" fg:x="148" fg:w="2"/><text x="67.2183%" y="367.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.90%)</title><rect x="66.9683%" y="341" width="0.9050%" height="15" fill="rgb(232,167,36)" fg:x="148" fg:w="2"/><text x="67.2183%" y="351.50"></text></g><g><title>cfree (1 samples, 0.45%)</title><rect x="67.8733%" y="357" width="0.4525%" height="15" fill="rgb(244,19,51)" fg:x="150" fg:w="1"/><text x="68.1233%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="67.8733%" y="341" width="0.4525%" height="15" fill="rgb(224,6,22)" fg:x="150" fg:w="1"/><text x="68.1233%" y="351.50"></text></g><g><title>nu_parser::parser::parse_number (5 samples, 2.26%)</title><rect x="66.5158%" y="373" width="2.2624%" height="15" fill="rgb(224,145,5)" fg:x="147" fg:w="5"/><text x="66.7658%" y="383.50">n..</text></g><g><title>core::num::dec2flt::dec2flt (1 samples, 0.45%)</title><rect x="68.3258%" y="357" width="0.4525%" height="15" fill="rgb(234,130,49)" fg:x="151" fg:w="1"/><text x="68.5758%" y="367.50"></text></g><g><title>core::num::dec2flt::parse::parse_inf_nan (1 samples, 0.45%)</title><rect x="68.3258%" y="341" width="0.4525%" height="15" fill="rgb(254,6,2)" fg:x="151" fg:w="1"/><text x="68.5758%" y="351.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.45%)</title><rect x="69.2308%" y="357" width="0.4525%" height="15" fill="rgb(208,96,46)" fg:x="153" fg:w="1"/><text x="69.4808%" y="367.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.45%)</title><rect x="69.2308%" y="341" width="0.4525%" height="15" fill="rgb(239,3,39)" fg:x="153" fg:w="1"/><text x="69.4808%" y="351.50"></text></g><g><title>nu_parser::parser::parse_range (4 samples, 1.81%)</title><rect x="68.7783%" y="373" width="1.8100%" height="15" fill="rgb(233,210,1)" fg:x="152" fg:w="4"/><text x="69.0283%" y="383.50">n..</text></g><g><title>core::str::pattern::StrSearcher::new (2 samples, 0.90%)</title><rect x="69.6833%" y="357" width="0.9050%" height="15" fill="rgb(244,137,37)" fg:x="154" fg:w="2"/><text x="69.9333%" y="367.50"></text></g><g><title>nu_parser::parser::parse_multispan_value (19 samples, 8.60%)</title><rect x="63.8009%" y="469" width="8.5973%" height="15" fill="rgb(240,136,2)" fg:x="141" fg:w="19"/><text x="64.0509%" y="479.50">nu_parser::p..</text></g><g><title>nu_parser::parser::parse_value (19 samples, 8.60%)</title><rect x="63.8009%" y="453" width="8.5973%" height="15" fill="rgb(239,18,37)" fg:x="141" fg:w="19"/><text x="64.0509%" y="463.50">nu_parser::p..</text></g><g><title>nu_parser::parser::parse_full_cell_path (19 samples, 8.60%)</title><rect x="63.8009%" y="437" width="8.5973%" height="15" fill="rgb(218,185,22)" fg:x="141" fg:w="19"/><text x="64.0509%" y="447.50">nu_parser::p..</text></g><g><title>nu_parser::parser::parse_record (19 samples, 8.60%)</title><rect x="63.8009%" y="421" width="8.5973%" height="15" fill="rgb(225,218,4)" fg:x="141" fg:w="19"/><text x="64.0509%" y="431.50">nu_parser::p..</text></g><g><title>nu_parser::parser::parse_value (19 samples, 8.60%)</title><rect x="63.8009%" y="405" width="8.5973%" height="15" fill="rgb(230,182,32)" fg:x="141" fg:w="19"/><text x="64.0509%" y="415.50">nu_parser::p..</text></g><g><title>nu_parser::parser::parse_value (19 samples, 8.60%)</title><rect x="63.8009%" y="389" width="8.5973%" height="15" fill="rgb(242,56,43)" fg:x="141" fg:w="19"/><text x="64.0509%" y="399.50">nu_parser::p..</text></g><g><title>nu_parser::parser::parse_string (4 samples, 1.81%)</title><rect x="70.5882%" y="373" width="1.8100%" height="15" fill="rgb(233,99,24)" fg:x="156" fg:w="4"/><text x="70.8382%" y="383.50">n..</text></g><g><title>nu_parser::parser::unescape_unquote_string (4 samples, 1.81%)</title><rect x="70.5882%" y="357" width="1.8100%" height="15" fill="rgb(234,209,42)" fg:x="156" fg:w="4"/><text x="70.8382%" y="367.50">n..</text></g><g><title>nu_parser::parser::unescape_string (4 samples, 1.81%)</title><rect x="70.5882%" y="341" width="1.8100%" height="15" fill="rgb(227,7,12)" fg:x="156" fg:w="4"/><text x="70.8382%" y="351.50">n..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 1.36%)</title><rect x="71.0407%" y="325" width="1.3575%" height="15" fill="rgb(245,203,43)" fg:x="157" fg:w="3"/><text x="71.2907%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 1.36%)</title><rect x="71.0407%" y="309" width="1.3575%" height="15" fill="rgb(238,205,33)" fg:x="157" fg:w="3"/><text x="71.2907%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 1.36%)</title><rect x="71.0407%" y="293" width="1.3575%" height="15" fill="rgb(231,56,7)" fg:x="157" fg:w="3"/><text x="71.2907%" y="303.50"></text></g><g><title>realloc (3 samples, 1.36%)</title><rect x="71.0407%" y="277" width="1.3575%" height="15" fill="rgb(244,186,29)" fg:x="157" fg:w="3"/><text x="71.2907%" y="287.50"></text></g><g><title>[libc.so.6] (2 samples, 0.90%)</title><rect x="71.4932%" y="261" width="0.9050%" height="15" fill="rgb(234,111,31)" fg:x="158" fg:w="2"/><text x="71.7432%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="71.9457%" y="245" width="0.4525%" height="15" fill="rgb(241,149,10)" fg:x="159" fg:w="1"/><text x="72.1957%" y="255.50"></text></g><g><title>nu_parser::parser::parse_binary (1 samples, 0.45%)</title><rect x="72.3982%" y="373" width="0.4525%" height="15" fill="rgb(249,206,44)" fg:x="160" fg:w="1"/><text x="72.6482%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="72.3982%" y="357" width="0.4525%" height="15" fill="rgb(251,153,30)" fg:x="160" fg:w="1"/><text x="72.6482%" y="367.50"></text></g><g><title>nu_parser::parser::parse_filesize (1 samples, 0.45%)</title><rect x="72.8507%" y="373" width="0.4525%" height="15" fill="rgb(239,152,38)" fg:x="161" fg:w="1"/><text x="73.1007%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.45%)</title><rect x="72.8507%" y="357" width="0.4525%" height="15" fill="rgb(249,139,47)" fg:x="161" fg:w="1"/><text x="73.1007%" y="367.50"></text></g><g><title>malloc (1 samples, 0.45%)</title><rect x="72.8507%" y="341" width="0.4525%" height="15" fill="rgb(244,64,35)" fg:x="161" fg:w="1"/><text x="73.1007%" y="351.50"></text></g><g><title>nu_parser::parser::parse_number (1 samples, 0.45%)</title><rect x="73.3032%" y="373" width="0.4525%" height="15" fill="rgb(216,46,15)" fg:x="162" fg:w="1"/><text x="73.5532%" y="383.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="73.3032%" y="357" width="0.4525%" height="15" fill="rgb(250,74,19)" fg:x="162" fg:w="1"/><text x="73.5532%" y="367.50"></text></g><g><title>nu_parser::parser::parse_record (4 samples, 1.81%)</title><rect x="72.3982%" y="421" width="1.8100%" height="15" fill="rgb(249,42,33)" fg:x="160" fg:w="4"/><text x="72.6482%" y="431.50">n..</text></g><g><title>nu_parser::parser::parse_value (4 samples, 1.81%)</title><rect x="72.3982%" y="405" width="1.8100%" height="15" fill="rgb(242,149,17)" fg:x="160" fg:w="4"/><text x="72.6482%" y="415.50">n..</text></g><g><title>nu_parser::parser::parse_value (4 samples, 1.81%)</title><rect x="72.3982%" y="389" width="1.8100%" height="15" fill="rgb(244,29,21)" fg:x="160" fg:w="4"/><text x="72.6482%" y="399.50">n..</text></g><g><title>nu_parser::parser::parse_string (1 samples, 0.45%)</title><rect x="73.7557%" y="373" width="0.4525%" height="15" fill="rgb(220,130,37)" fg:x="163" fg:w="1"/><text x="74.0057%" y="383.50"></text></g><g><title>nu_parser::parser::unescape_unquote_string (1 samples, 0.45%)</title><rect x="73.7557%" y="357" width="0.4525%" height="15" fill="rgb(211,67,2)" fg:x="163" fg:w="1"/><text x="74.0057%" y="367.50"></text></g><g><title>nu_parser::parser::unescape_string (1 samples, 0.45%)</title><rect x="73.7557%" y="341" width="0.4525%" height="15" fill="rgb(235,68,52)" fg:x="163" fg:w="1"/><text x="74.0057%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.45%)</title><rect x="73.7557%" y="325" width="0.4525%" height="15" fill="rgb(246,142,3)" fg:x="163" fg:w="1"/><text x="74.0057%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.45%)</title><rect x="73.7557%" y="309" width="0.4525%" height="15" fill="rgb(241,25,7)" fg:x="163" fg:w="1"/><text x="74.0057%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.45%)</title><rect x="73.7557%" y="293" width="0.4525%" height="15" fill="rgb(242,119,39)" fg:x="163" fg:w="1"/><text x="74.0057%" y="303.50"></text></g><g><title>realloc (1 samples, 0.45%)</title><rect x="73.7557%" y="277" width="0.4525%" height="15" fill="rgb(241,98,45)" fg:x="163" fg:w="1"/><text x="74.0057%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.45%)</title><rect x="74.2081%" y="373" width="0.4525%" height="15" fill="rgb(254,28,30)" fg:x="164" fg:w="1"/><text x="74.4581%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.45%)</title><rect x="74.2081%" y="357" width="0.4525%" height="15" fill="rgb(241,142,54)" fg:x="164" fg:w="1"/><text x="74.4581%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.45%)</title><rect x="74.2081%" y="341" width="0.4525%" height="15" fill="rgb(222,85,15)" fg:x="164" fg:w="1"/><text x="74.4581%" y="351.50"></text></g><g><title>realloc (1 samples, 0.45%)</title><rect x="74.2081%" y="325" width="0.4525%" height="15" fill="rgb(210,85,47)" fg:x="164" fg:w="1"/><text x="74.4581%" y="335.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="74.2081%" y="309" width="0.4525%" height="15" fill="rgb(224,206,25)" fg:x="164" fg:w="1"/><text x="74.4581%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="74.2081%" y="293" width="0.4525%" height="15" fill="rgb(243,201,19)" fg:x="164" fg:w="1"/><text x="74.4581%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="74.2081%" y="277" width="0.4525%" height="15" fill="rgb(236,59,4)" fg:x="164" fg:w="1"/><text x="74.4581%" y="287.50"></text></g><g><title>nu_parser::lex::lex (2 samples, 0.90%)</title><rect x="74.6606%" y="373" width="0.9050%" height="15" fill="rgb(254,179,45)" fg:x="165" fg:w="2"/><text x="74.9106%" y="383.50"></text></g><g><title>nu_parser::lex::is_item_terminator (1 samples, 0.45%)</title><rect x="75.1131%" y="357" width="0.4525%" height="15" fill="rgb(226,14,10)" fg:x="166" fg:w="1"/><text x="75.3631%" y="367.50"></text></g><g><title>nu_parser::parser::parse_record (8 samples, 3.62%)</title><rect x="72.3982%" y="469" width="3.6199%" height="15" fill="rgb(244,27,41)" fg:x="160" fg:w="8"/><text x="72.6482%" y="479.50">nu_p..</text></g><g><title>nu_parser::parser::parse_value (8 samples, 3.62%)</title><rect x="72.3982%" y="453" width="3.6199%" height="15" fill="rgb(235,35,32)" fg:x="160" fg:w="8"/><text x="72.6482%" y="463.50">nu_p..</text></g><g><title>nu_parser::parser::parse_full_cell_path (8 samples, 3.62%)</title><rect x="72.3982%" y="437" width="3.6199%" height="15" fill="rgb(218,68,31)" fg:x="160" fg:w="8"/><text x="72.6482%" y="447.50">nu_p..</text></g><g><title>nu_parser::parser::parse_table_expression (4 samples, 1.81%)</title><rect x="74.2081%" y="421" width="1.8100%" height="15" fill="rgb(207,120,37)" fg:x="164" fg:w="4"/><text x="74.4581%" y="431.50">n..</text></g><g><title>nu_parser::parser::parse_value (4 samples, 1.81%)</title><rect x="74.2081%" y="405" width="1.8100%" height="15" fill="rgb(227,98,0)" fg:x="164" fg:w="4"/><text x="74.4581%" y="415.50">n..</text></g><g><title>nu_parser::parser::parse_list_expression (4 samples, 1.81%)</title><rect x="74.2081%" y="389" width="1.8100%" height="15" fill="rgb(207,7,3)" fg:x="164" fg:w="4"/><text x="74.4581%" y="399.50">n..</text></g><g><title>nu_parser::parser::parse_multispan_value (1 samples, 0.45%)</title><rect x="75.5656%" y="373" width="0.4525%" height="15" fill="rgb(206,98,19)" fg:x="167" fg:w="1"/><text x="75.8156%" y="383.50"></text></g><g><title>nu_parser::lex::lex (3 samples, 1.36%)</title><rect x="76.0181%" y="373" width="1.3575%" height="15" fill="rgb(217,5,26)" fg:x="168" fg:w="3"/><text x="76.2681%" y="383.50"></text></g><g><title>nu_parser::parser::parse_list_expression (5 samples, 2.26%)</title><rect x="76.0181%" y="453" width="2.2624%" height="15" fill="rgb(235,190,38)" fg:x="168" fg:w="5"/><text x="76.2681%" y="463.50">n..</text></g><g><title>nu_parser::parser::parse_multispan_value (5 samples, 2.26%)</title><rect x="76.0181%" y="437" width="2.2624%" height="15" fill="rgb(247,86,24)" fg:x="168" fg:w="5"/><text x="76.2681%" y="447.50">n..</text></g><g><title>nu_parser::parser::parse_value (5 samples, 2.26%)</title><rect x="76.0181%" y="421" width="2.2624%" height="15" fill="rgb(205,101,16)" fg:x="168" fg:w="5"/><text x="76.2681%" y="431.50">n..</text></g><g><title>nu_parser::parser::parse_full_cell_path (5 samples, 2.26%)</title><rect x="76.0181%" y="405" width="2.2624%" height="15" fill="rgb(246,168,33)" fg:x="168" fg:w="5"/><text x="76.2681%" y="415.50">n..</text></g><g><title>nu_parser::parser::parse_record (5 samples, 2.26%)</title><rect x="76.0181%" y="389" width="2.2624%" height="15" fill="rgb(231,114,1)" fg:x="168" fg:w="5"/><text x="76.2681%" y="399.50">n..</text></g><g><title>nu_parser::parser::parse_value (2 samples, 0.90%)</title><rect x="77.3756%" y="373" width="0.9050%" height="15" fill="rgb(207,184,53)" fg:x="171" fg:w="2"/><text x="77.6256%" y="383.50"></text></g><g><title>cfree (1 samples, 0.45%)</title><rect x="77.8281%" y="357" width="0.4525%" height="15" fill="rgb(224,95,51)" fg:x="172" fg:w="1"/><text x="78.0781%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="77.8281%" y="341" width="0.4525%" height="15" fill="rgb(212,188,45)" fg:x="172" fg:w="1"/><text x="78.0781%" y="351.50"></text></g><g><title>nu_parser::lex::lex (1 samples, 0.45%)</title><rect x="78.2805%" y="373" width="0.4525%" height="15" fill="rgb(223,154,38)" fg:x="173" fg:w="1"/><text x="78.5305%" y="383.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (3 samples, 1.36%)</title><rect x="78.2805%" y="389" width="1.3575%" height="15" fill="rgb(251,22,52)" fg:x="173" fg:w="3"/><text x="78.5305%" y="399.50"></text></g><g><title>nu_parser::parser::parse_record (2 samples, 0.90%)</title><rect x="78.7330%" y="373" width="0.9050%" height="15" fill="rgb(229,209,22)" fg:x="174" fg:w="2"/><text x="78.9830%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.45%)</title><rect x="79.1855%" y="357" width="0.4525%" height="15" fill="rgb(234,138,34)" fg:x="175" fg:w="1"/><text x="79.4355%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.45%)</title><rect x="79.1855%" y="341" width="0.4525%" height="15" fill="rgb(212,95,11)" fg:x="175" fg:w="1"/><text x="79.4355%" y="351.50"></text></g><g><title>nu_parser::parser::parse_binary (1 samples, 0.45%)</title><rect x="79.6380%" y="373" width="0.4525%" height="15" fill="rgb(240,179,47)" fg:x="176" fg:w="1"/><text x="79.8880%" y="383.50"></text></g><g><title>nu_parser::parser::parse_binary_with_base (1 samples, 0.45%)</title><rect x="79.6380%" y="357" width="0.4525%" height="15" fill="rgb(240,163,11)" fg:x="176" fg:w="1"/><text x="79.8880%" y="367.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (1 samples, 0.45%)</title><rect x="79.6380%" y="341" width="0.4525%" height="15" fill="rgb(236,37,12)" fg:x="176" fg:w="1"/><text x="79.8880%" y="351.50"></text></g><g><title>nu_parser::parser::parse_table_expression (11 samples, 4.98%)</title><rect x="76.0181%" y="469" width="4.9774%" height="15" fill="rgb(232,164,16)" fg:x="168" fg:w="11"/><text x="76.2681%" y="479.50">nu_par..</text></g><g><title>nu_parser::parser::parse_value (6 samples, 2.71%)</title><rect x="78.2805%" y="453" width="2.7149%" height="15" fill="rgb(244,205,15)" fg:x="173" fg:w="6"/><text x="78.5305%" y="463.50">nu..</text></g><g><title>nu_parser::parser::parse_list_expression (6 samples, 2.71%)</title><rect x="78.2805%" y="437" width="2.7149%" height="15" fill="rgb(223,117,47)" fg:x="173" fg:w="6"/><text x="78.5305%" y="447.50">nu..</text></g><g><title>nu_parser::parser::parse_multispan_value (6 samples, 2.71%)</title><rect x="78.2805%" y="421" width="2.7149%" height="15" fill="rgb(244,107,35)" fg:x="173" fg:w="6"/><text x="78.5305%" y="431.50">nu..</text></g><g><title>nu_parser::parser::parse_value (6 samples, 2.71%)</title><rect x="78.2805%" y="405" width="2.7149%" height="15" fill="rgb(205,140,8)" fg:x="173" fg:w="6"/><text x="78.5305%" y="415.50">nu..</text></g><g><title>nu_parser::parser::parse_value (3 samples, 1.36%)</title><rect x="79.6380%" y="389" width="1.3575%" height="15" fill="rgb(228,84,46)" fg:x="176" fg:w="3"/><text x="79.8880%" y="399.50"></text></g><g><title>nu_parser::parser::parse_string (2 samples, 0.90%)</title><rect x="80.0905%" y="373" width="0.9050%" height="15" fill="rgb(254,188,9)" fg:x="177" fg:w="2"/><text x="80.3405%" y="383.50"></text></g><g><title>nu_parser::parser::unescape_unquote_string (2 samples, 0.90%)</title><rect x="80.0905%" y="357" width="0.9050%" height="15" fill="rgb(206,112,54)" fg:x="177" fg:w="2"/><text x="80.3405%" y="367.50"></text></g><g><title>nu_parser::parser::unescape_string (2 samples, 0.90%)</title><rect x="80.0905%" y="341" width="0.9050%" height="15" fill="rgb(216,84,49)" fg:x="177" fg:w="2"/><text x="80.3405%" y="351.50"></text></g><g><title>nu_parser::parser::parse_record (1 samples, 0.45%)</title><rect x="80.9955%" y="389" width="0.4525%" height="15" fill="rgb(214,194,35)" fg:x="179" fg:w="1"/><text x="81.2455%" y="399.50"></text></g><g><title>nu_parser::lex::lex (1 samples, 0.45%)</title><rect x="80.9955%" y="373" width="0.4525%" height="15" fill="rgb(249,28,3)" fg:x="179" fg:w="1"/><text x="81.2455%" y="383.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (4 samples, 1.81%)</title><rect x="80.9955%" y="405" width="1.8100%" height="15" fill="rgb(222,56,52)" fg:x="179" fg:w="4"/><text x="81.2455%" y="415.50">n..</text></g><g><title>nu_parser::parser::parse_table_expression (3 samples, 1.36%)</title><rect x="81.4480%" y="389" width="1.3575%" height="15" fill="rgb(245,217,50)" fg:x="180" fg:w="3"/><text x="81.6980%" y="399.50"></text></g><g><title>nu_parser::lex::lex (3 samples, 1.36%)</title><rect x="81.4480%" y="373" width="1.3575%" height="15" fill="rgb(213,201,24)" fg:x="180" fg:w="3"/><text x="81.6980%" y="383.50"></text></g><g><title>nu_parser::parser::parse_full_cell_path (5 samples, 2.26%)</title><rect x="80.9955%" y="453" width="2.2624%" height="15" fill="rgb(248,116,28)" fg:x="179" fg:w="5"/><text x="81.2455%" y="463.50">n..</text></g><g><title>nu_parser::parser::parse_record (5 samples, 2.26%)</title><rect x="80.9955%" y="437" width="2.2624%" height="15" fill="rgb(219,72,43)" fg:x="179" fg:w="5"/><text x="81.2455%" y="447.50">n..</text></g><g><title>nu_parser::parser::parse_value (5 samples, 2.26%)</title><rect x="80.9955%" y="421" width="2.2624%" height="15" fill="rgb(209,138,14)" fg:x="179" fg:w="5"/><text x="81.2455%" y="431.50">n..</text></g><g><title>nu_parser::parser::parse_value (1 samples, 0.45%)</title><rect x="82.8054%" y="405" width="0.4525%" height="15" fill="rgb(222,18,33)" fg:x="183" fg:w="1"/><text x="83.0554%" y="415.50"></text></g><g><title>nu_parser::parser::parse_binary (1 samples, 0.45%)</title><rect x="82.8054%" y="389" width="0.4525%" height="15" fill="rgb(213,199,7)" fg:x="183" fg:w="1"/><text x="83.0554%" y="399.50"></text></g><g><title>nu_parser::parser::parse_binary_with_base (1 samples, 0.45%)</title><rect x="82.8054%" y="373" width="0.4525%" height="15" fill="rgb(250,110,10)" fg:x="183" fg:w="1"/><text x="83.0554%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.45%)</title><rect x="82.8054%" y="357" width="0.4525%" height="15" fill="rgb(248,123,6)" fg:x="183" fg:w="1"/><text x="83.0554%" y="367.50"></text></g><g><title>malloc (1 samples, 0.45%)</title><rect x="82.8054%" y="341" width="0.4525%" height="15" fill="rgb(206,91,31)" fg:x="183" fg:w="1"/><text x="83.0554%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="82.8054%" y="325" width="0.4525%" height="15" fill="rgb(211,154,13)" fg:x="183" fg:w="1"/><text x="83.0554%" y="335.50"></text></g><g><title>nu_parser::lex::lex (1 samples, 0.45%)</title><rect x="83.2579%" y="373" width="0.4525%" height="15" fill="rgb(225,148,7)" fg:x="184" fg:w="1"/><text x="83.5079%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;nu_parser::errors::ParseError&gt;&gt; (1 samples, 0.45%)</title><rect x="83.2579%" y="357" width="0.4525%" height="15" fill="rgb(220,160,43)" fg:x="184" fg:w="1"/><text x="83.5079%" y="367.50"></text></g><g><title>cfree (3 samples, 1.36%)</title><rect x="83.7104%" y="357" width="1.3575%" height="15" fill="rgb(213,52,39)" fg:x="185" fg:w="3"/><text x="83.9604%" y="367.50"></text></g><g><title>[libc.so.6] (3 samples, 1.36%)</title><rect x="83.7104%" y="341" width="1.3575%" height="15" fill="rgb(243,137,7)" fg:x="185" fg:w="3"/><text x="83.9604%" y="351.50"></text></g><g><title>nu_parser::parser::parse_value (10 samples, 4.52%)</title><rect x="80.9955%" y="469" width="4.5249%" height="15" fill="rgb(230,79,13)" fg:x="179" fg:w="10"/><text x="81.2455%" y="479.50">nu_pa..</text></g><g><title>nu_parser::parser::parse_list_expression (5 samples, 2.26%)</title><rect x="83.2579%" y="453" width="2.2624%" height="15" fill="rgb(247,105,23)" fg:x="184" fg:w="5"/><text x="83.5079%" y="463.50">n..</text></g><g><title>nu_parser::parser::parse_multispan_value (5 samples, 2.26%)</title><rect x="83.2579%" y="437" width="2.2624%" height="15" fill="rgb(223,179,41)" fg:x="184" fg:w="5"/><text x="83.5079%" y="447.50">n..</text></g><g><title>nu_parser::parser::parse_value (5 samples, 2.26%)</title><rect x="83.2579%" y="421" width="2.2624%" height="15" fill="rgb(218,9,34)" fg:x="184" fg:w="5"/><text x="83.5079%" y="431.50">n..</text></g><g><title>nu_parser::parser::parse_full_cell_path (5 samples, 2.26%)</title><rect x="83.2579%" y="405" width="2.2624%" height="15" fill="rgb(222,106,8)" fg:x="184" fg:w="5"/><text x="83.5079%" y="415.50">n..</text></g><g><title>nu_parser::parser::parse_record (5 samples, 2.26%)</title><rect x="83.2579%" y="389" width="2.2624%" height="15" fill="rgb(211,220,0)" fg:x="184" fg:w="5"/><text x="83.5079%" y="399.50">n..</text></g><g><title>nu_parser::parser::parse_value (4 samples, 1.81%)</title><rect x="83.7104%" y="373" width="1.8100%" height="15" fill="rgb(229,52,16)" fg:x="185" fg:w="4"/><text x="83.9604%" y="383.50">n..</text></g><g><title>core::ptr::drop_in_place&lt;(nu_protocol::ast::expression::Expression,core::option::Option&lt;nu_parser::errors::ParseError&gt;)&gt; (1 samples, 0.45%)</title><rect x="85.0679%" y="357" width="0.4525%" height="15" fill="rgb(212,155,18)" fg:x="188" fg:w="1"/><text x="85.3179%" y="367.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::get_span_contents (1 samples, 0.45%)</title><rect x="85.5204%" y="469" width="0.4525%" height="15" fill="rgb(242,21,14)" fg:x="189" fg:w="1"/><text x="85.7704%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="85.9729%" y="293" width="0.4525%" height="15" fill="rgb(222,19,48)" fg:x="190" fg:w="1"/><text x="86.2229%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 1.36%)</title><rect x="85.9729%" y="309" width="1.3575%" height="15" fill="rgb(232,45,27)" fg:x="190" fg:w="3"/><text x="86.2229%" y="319.50"></text></g><g><title>malloc (2 samples, 0.90%)</title><rect x="86.4253%" y="293" width="0.9050%" height="15" fill="rgb(249,103,42)" fg:x="191" fg:w="2"/><text x="86.6753%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.90%)</title><rect x="87.7828%" y="293" width="0.9050%" height="15" fill="rgb(246,81,33)" fg:x="194" fg:w="2"/><text x="88.0328%" y="303.50"></text></g><g><title>malloc (2 samples, 0.90%)</title><rect x="87.7828%" y="277" width="0.9050%" height="15" fill="rgb(252,33,42)" fg:x="194" fg:w="2"/><text x="88.0328%" y="287.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="88.2353%" y="261" width="0.4525%" height="15" fill="rgb(209,212,41)" fg:x="195" fg:w="1"/><text x="88.4853%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.90%)</title><rect x="88.6878%" y="277" width="0.9050%" height="15" fill="rgb(207,154,6)" fg:x="196" fg:w="2"/><text x="88.9378%" y="287.50"></text></g><g><title>malloc (2 samples, 0.90%)</title><rect x="88.6878%" y="261" width="0.9050%" height="15" fill="rgb(223,64,47)" fg:x="196" fg:w="2"/><text x="88.9378%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="89.1403%" y="245" width="0.4525%" height="15" fill="rgb(211,161,38)" fg:x="197" fg:w="1"/><text x="89.3903%" y="255.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="89.5928%" y="277" width="0.4525%" height="15" fill="rgb(219,138,40)" fg:x="198" fg:w="1"/><text x="89.8428%" y="287.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (7 samples, 3.17%)</title><rect x="87.3303%" y="309" width="3.1674%" height="15" fill="rgb(241,228,46)" fg:x="193" fg:w="7"/><text x="87.5803%" y="319.50">&lt;nu..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 1.81%)</title><rect x="88.6878%" y="293" width="1.8100%" height="15" fill="rgb(223,209,38)" fg:x="196" fg:w="4"/><text x="88.9378%" y="303.50">&lt;..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.45%)</title><rect x="90.0452%" y="277" width="0.4525%" height="15" fill="rgb(236,164,45)" fg:x="199" fg:w="1"/><text x="90.2952%" y="287.50"></text></g><g><title>malloc (1 samples, 0.45%)</title><rect x="90.0452%" y="261" width="0.4525%" height="15" fill="rgb(231,15,5)" fg:x="199" fg:w="1"/><text x="90.2952%" y="271.50"></text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (11 samples, 4.98%)</title><rect x="85.9729%" y="405" width="4.9774%" height="15" fill="rgb(252,35,15)" fg:x="190" fg:w="11"/><text x="86.2229%" y="415.50">&lt;nu_pr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 4.98%)</title><rect x="85.9729%" y="389" width="4.9774%" height="15" fill="rgb(248,181,18)" fg:x="190" fg:w="11"/><text x="86.2229%" y="399.50">&lt;alloc..</text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (11 samples, 4.98%)</title><rect x="85.9729%" y="373" width="4.9774%" height="15" fill="rgb(233,39,42)" fg:x="190" fg:w="11"/><text x="86.2229%" y="383.50">&lt;nu_pr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 4.98%)</title><rect x="85.9729%" y="357" width="4.9774%" height="15" fill="rgb(238,110,33)" fg:x="190" fg:w="11"/><text x="86.2229%" y="367.50">&lt;alloc..</text></g><g><title>&lt;nu_protocol::value::Value as core::clone::Clone&gt;::clone (11 samples, 4.98%)</title><rect x="85.9729%" y="341" width="4.9774%" height="15" fill="rgb(233,195,10)" fg:x="190" fg:w="11"/><text x="86.2229%" y="351.50">&lt;nu_pr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 4.98%)</title><rect x="85.9729%" y="325" width="4.9774%" height="15" fill="rgb(254,105,3)" fg:x="190" fg:w="11"/><text x="86.2229%" y="335.50">&lt;alloc..</text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="90.4977%" y="309" width="0.4525%" height="15" fill="rgb(221,225,9)" fg:x="200" fg:w="1"/><text x="90.7477%" y="319.50"></text></g><g><title>ansi_parser::parsers::cursor_backward (1 samples, 0.45%)</title><rect x="90.9502%" y="293" width="0.4525%" height="15" fill="rgb(224,227,45)" fg:x="201" fg:w="1"/><text x="91.2002%" y="303.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (1 samples, 0.45%)</title><rect x="90.9502%" y="277" width="0.4525%" height="15" fill="rgb(229,198,43)" fg:x="201" fg:w="1"/><text x="91.2002%" y="287.50"></text></g><g><title>core::num::&lt;impl core::str::traits::FromStr for u32&gt;::from_str (1 samples, 0.45%)</title><rect x="90.9502%" y="261" width="0.4525%" height="15" fill="rgb(206,209,35)" fg:x="201" fg:w="1"/><text x="91.2002%" y="271.50"></text></g><g><title>&lt;ansi_str::AnsiSplit as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.90%)</title><rect x="90.9502%" y="341" width="0.9050%" height="15" fill="rgb(245,195,53)" fg:x="201" fg:w="2"/><text x="91.2002%" y="351.50"></text></g><g><title>&lt;ansi_parser::traits::AnsiParseIterator as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.90%)</title><rect x="90.9502%" y="325" width="0.9050%" height="15" fill="rgb(240,92,26)" fg:x="201" fg:w="2"/><text x="91.2002%" y="335.50"></text></g><g><title>ansi_parser::parsers::parse_escape (2 samples, 0.90%)</title><rect x="90.9502%" y="309" width="0.9050%" height="15" fill="rgb(207,40,23)" fg:x="201" fg:w="2"/><text x="91.2002%" y="319.50"></text></g><g><title>ansi_parser::parsers::parse_def_cursor_int (1 samples, 0.45%)</title><rect x="91.4027%" y="293" width="0.4525%" height="15" fill="rgb(223,111,35)" fg:x="202" fg:w="1"/><text x="91.6527%" y="303.50"></text></g><g><title>&lt;&amp;str as nom::traits::InputTakeAtPosition&gt;::split_at_position (1 samples, 0.45%)</title><rect x="91.4027%" y="277" width="0.4525%" height="15" fill="rgb(229,147,28)" fg:x="202" fg:w="1"/><text x="91.6527%" y="287.50"></text></g><g><title>&lt;strip_ansi_escapes::Performer&lt;W&gt; as vte::Perform&gt;::print (1 samples, 0.45%)</title><rect x="92.7602%" y="277" width="0.4525%" height="15" fill="rgb(211,29,28)" fg:x="205" fg:w="1"/><text x="93.0102%" y="287.50"></text></g><g><title>std::io::Write::write_all (5 samples, 2.26%)</title><rect x="91.8552%" y="309" width="2.2624%" height="15" fill="rgb(228,72,33)" fg:x="203" fg:w="5"/><text x="92.1052%" y="319.50">s..</text></g><g><title>&lt;strip_ansi_escapes::Writer&lt;W&gt; as std::io::Write&gt;::write (5 samples, 2.26%)</title><rect x="91.8552%" y="293" width="2.2624%" height="15" fill="rgb(205,214,31)" fg:x="203" fg:w="5"/><text x="92.1052%" y="303.50">&lt;..</text></g><g><title>vte::Parser::perform_action (2 samples, 0.90%)</title><rect x="93.2127%" y="277" width="0.9050%" height="15" fill="rgb(224,111,15)" fg:x="206" fg:w="2"/><text x="93.4627%" y="287.50"></text></g><g><title>nu_protocol::pipeline_data::PipelineData::print (19 samples, 8.60%)</title><rect x="85.9729%" y="469" width="8.5973%" height="15" fill="rgb(253,21,26)" fg:x="190" fg:w="19"/><text x="86.2229%" y="479.50">nu_protocol:..</text></g><g><title>&lt;nu_protocol::pipeline_data::PipelineIterator as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 8.60%)</title><rect x="85.9729%" y="453" width="8.5973%" height="15" fill="rgb(245,139,43)" fg:x="190" fg:w="19"/><text x="86.2229%" y="463.50">&lt;nu_protocol..</text></g><g><title>&lt;nu_protocol::value::stream::RawStream as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 8.60%)</title><rect x="85.9729%" y="437" width="8.5973%" height="15" fill="rgb(252,170,7)" fg:x="190" fg:w="19"/><text x="86.2229%" y="447.50">&lt;nu_protocol..</text></g><g><title>&lt;nu_command::viewers::table::PagingTableCreator as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 8.60%)</title><rect x="85.9729%" y="421" width="8.5973%" height="15" fill="rgb(231,118,14)" fg:x="190" fg:w="19"/><text x="86.2229%" y="431.50">&lt;nu_command:..</text></g><g><title>nu_command::viewers::table::print_table (8 samples, 3.62%)</title><rect x="90.9502%" y="405" width="3.6199%" height="15" fill="rgb(238,83,0)" fg:x="201" fg:w="8"/><text x="91.2002%" y="415.50">nu_c..</text></g><g><title>core::fmt::write (8 samples, 3.62%)</title><rect x="90.9502%" y="389" width="3.6199%" height="15" fill="rgb(221,39,39)" fg:x="201" fg:w="8"/><text x="91.2002%" y="399.50">core..</text></g><g><title>&lt;papergrid::Grid as core::fmt::Display&gt;::fmt (8 samples, 3.62%)</title><rect x="90.9502%" y="373" width="3.6199%" height="15" fill="rgb(222,119,46)" fg:x="201" fg:w="8"/><text x="91.2002%" y="383.50">&lt;pap..</text></g><g><title>papergrid::cells_content (8 samples, 3.62%)</title><rect x="90.9502%" y="357" width="3.6199%" height="15" fill="rgb(222,165,49)" fg:x="201" fg:w="8"/><text x="91.2002%" y="367.50">pape..</text></g><g><title>papergrid::string_width (6 samples, 2.71%)</title><rect x="91.8552%" y="341" width="2.7149%" height="15" fill="rgb(219,113,52)" fg:x="203" fg:w="6"/><text x="92.1052%" y="351.50">pa..</text></g><g><title>strip_ansi_escapes::strip (6 samples, 2.71%)</title><rect x="91.8552%" y="325" width="2.7149%" height="15" fill="rgb(214,7,15)" fg:x="203" fg:w="6"/><text x="92.1052%" y="335.50">st..</text></g><g><title>strip_ansi_escapes::Performer&lt;W&gt;::into_inner (1 samples, 0.45%)</title><rect x="94.1176%" y="309" width="0.4525%" height="15" fill="rgb(235,32,4)" fg:x="208" fg:w="1"/><text x="94.3676%" y="319.50"></text></g><g><title>std::io::buffered::linewriter::LineWriter&lt;W&gt;::into_inner (1 samples, 0.45%)</title><rect x="94.1176%" y="293" width="0.4525%" height="15" fill="rgb(238,90,54)" fg:x="208" fg:w="1"/><text x="94.3676%" y="303.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::into_inner (1 samples, 0.45%)</title><rect x="94.1176%" y="277" width="0.4525%" height="15" fill="rgb(213,208,19)" fg:x="208" fg:w="1"/><text x="94.3676%" y="287.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.45%)</title><rect x="94.1176%" y="261" width="0.4525%" height="15" fill="rgb(233,156,4)" fg:x="208" fg:w="1"/><text x="94.3676%" y="271.50"></text></g><g><title>std::io::cursor::vec_write (1 samples, 0.45%)</title><rect x="94.1176%" y="245" width="0.4525%" height="15" fill="rgb(207,194,5)" fg:x="208" fg:w="1"/><text x="94.3676%" y="255.50"></text></g><g><title>[unknown] (188 samples, 85.07%)</title><rect x="9.9548%" y="485" width="85.0679%" height="15" fill="rgb(206,111,30)" fg:x="22" fg:w="188"/><text x="10.2048%" y="495.50">[unknown]</text></g><g><title>strip_ansi_escapes::Performer&lt;W&gt;::into_inner (1 samples, 0.45%)</title><rect x="94.5701%" y="469" width="0.4525%" height="15" fill="rgb(243,70,54)" fg:x="209" fg:w="1"/><text x="94.8201%" y="479.50"></text></g><g><title>__clone (6 samples, 2.71%)</title><rect x="95.0226%" y="485" width="2.7149%" height="15" fill="rgb(242,28,8)" fg:x="210" fg:w="6"/><text x="95.2726%" y="495.50">__..</text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="97.2851%" y="469" width="0.4525%" height="15" fill="rgb(219,106,18)" fg:x="215" fg:w="1"/><text x="97.5351%" y="479.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.45%)</title><rect x="97.2851%" y="453" width="0.4525%" height="15" fill="rgb(244,222,10)" fg:x="215" fg:w="1"/><text x="97.5351%" y="463.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.45%)</title><rect x="97.2851%" y="437" width="0.4525%" height="15" fill="rgb(236,179,52)" fg:x="215" fg:w="1"/><text x="97.5351%" y="447.50"></text></g><g><title>__sysconf (1 samples, 0.45%)</title><rect x="97.2851%" y="421" width="0.4525%" height="15" fill="rgb(213,23,39)" fg:x="215" fg:w="1"/><text x="97.5351%" y="431.50"></text></g><g><title>__getpagesize (1 samples, 0.45%)</title><rect x="97.2851%" y="405" width="0.4525%" height="15" fill="rgb(238,48,10)" fg:x="215" fg:w="1"/><text x="97.5351%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::engine::engine_state::EngineState&gt; (1 samples, 0.45%)</title><rect x="97.7376%" y="357" width="0.4525%" height="15" fill="rgb(251,196,23)" fg:x="216" fg:w="1"/><text x="97.9876%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.45%)</title><rect x="97.7376%" y="341" width="0.4525%" height="15" fill="rgb(250,152,24)" fg:x="216" fg:w="1"/><text x="97.9876%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.45%)</title><rect x="97.7376%" y="325" width="0.4525%" height="15" fill="rgb(209,150,17)" fg:x="216" fg:w="1"/><text x="97.9876%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.45%)</title><rect x="97.7376%" y="309" width="0.4525%" height="15" fill="rgb(234,202,34)" fg:x="216" fg:w="1"/><text x="97.9876%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.45%)</title><rect x="97.7376%" y="293" width="0.4525%" height="15" fill="rgb(253,148,53)" fg:x="216" fg:w="1"/><text x="97.9876%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,nu_protocol::value::Value)&gt; (1 samples, 0.45%)</title><rect x="97.7376%" y="277" width="0.4525%" height="15" fill="rgb(218,129,16)" fg:x="216" fg:w="1"/><text x="97.9876%" y="287.50"></text></g><g><title>cfree (1 samples, 0.45%)</title><rect x="97.7376%" y="261" width="0.4525%" height="15" fill="rgb(216,85,19)" fg:x="216" fg:w="1"/><text x="97.9876%" y="271.50"></text></g><g><title>[libc.so.6] (1 samples, 0.45%)</title><rect x="97.7376%" y="245" width="0.4525%" height="15" fill="rgb(235,228,7)" fg:x="216" fg:w="1"/><text x="97.9876%" y="255.50"></text></g><g><title>nu_cli::eval_file::evaluate_file (1 samples, 0.45%)</title><rect x="98.1900%" y="357" width="0.4525%" height="15" fill="rgb(245,175,0)" fg:x="217" fg:w="1"/><text x="98.4400%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::pipeline::Pipeline&gt;&gt; (1 samples, 0.45%)</title><rect x="98.1900%" y="341" width="0.4525%" height="15" fill="rgb(208,168,36)" fg:x="217" fg:w="1"/><text x="98.4400%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.45%)</title><rect x="98.1900%" y="325" width="0.4525%" height="15" fill="rgb(246,171,24)" fg:x="217" fg:w="1"/><text x="98.4400%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt; (1 samples, 0.45%)</title><rect x="98.1900%" y="309" width="0.4525%" height="15" fill="rgb(215,142,24)" fg:x="217" fg:w="1"/><text x="98.4400%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.45%)</title><rect x="98.1900%" y="293" width="0.4525%" height="15" fill="rgb(250,187,7)" fg:x="217" fg:w="1"/><text x="98.4400%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.45%)</title><rect x="98.1900%" y="277" width="0.4525%" height="15" fill="rgb(228,66,33)" fg:x="217" fg:w="1"/><text x="98.4400%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.45%)</title><rect x="98.1900%" y="261" width="0.4525%" height="15" fill="rgb(234,215,21)" fg:x="217" fg:w="1"/><text x="98.4400%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.45%)</title><rect x="98.1900%" y="245" width="0.4525%" height="15" fill="rgb(222,191,20)" fg:x="217" fg:w="1"/><text x="98.4400%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;nu_protocol::ast::expression::Expression&gt;&gt; (1 samples, 0.45%)</title><rect x="98.1900%" y="229" width="0.4525%" height="15" fill="rgb(245,79,54)" fg:x="217" fg:w="1"/><text x="98.4400%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.45%)</title><rect x="98.1900%" y="213" width="0.4525%" height="15" fill="rgb(240,10,37)" fg:x="217" fg:w="1"/><text x="98.4400%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.45%)</title><rect x="98.1900%" y="197" width="0.4525%" height="15" fill="rgb(214,192,32)" fg:x="217" fg:w="1"/><text x="98.4400%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.45%)</title><rect x="98.1900%" y="181" width="0.4525%" height="15" fill="rgb(209,36,54)" fg:x="217" fg:w="1"/><text x="98.4400%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.45%)</title><rect x="98.1900%" y="165" width="0.4525%" height="15" fill="rgb(220,10,11)" fg:x="217" fg:w="1"/><text x="98.4400%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt;&gt; (1 samples, 0.45%)</title><rect x="98.1900%" y="149" width="0.4525%" height="15" fill="rgb(221,106,17)" fg:x="217" fg:w="1"/><text x="98.4400%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.45%)</title><rect x="98.1900%" y="133" width="0.4525%" height="15" fill="rgb(251,142,44)" fg:x="217" fg:w="1"/><text x="98.4400%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.45%)</title><rect x="98.1900%" y="117" width="0.4525%" height="15" fill="rgb(238,13,15)" fg:x="217" fg:w="1"/><text x="98.4400%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expr::Expr&gt; (1 samples, 0.45%)</title><rect x="98.1900%" y="101" width="0.4525%" height="15" fill="rgb(208,107,27)" fg:x="217" fg:w="1"/><text x="98.4400%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ast::expression::Expression&gt; (1 samples, 0.45%)</title><rect x="98.1900%" y="85" width="0.4525%" height="15" fill="rgb(205,136,37)" fg:x="217" fg:w="1"/><text x="98.4400%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(nu_protocol::ast::expression::Expression,nu_protocol::ast::expression::Expression)&gt;&gt; (1 samples, 0.45%)</title><rect x="98.1900%" y="69" width="0.4525%" height="15" fill="rgb(250,205,27)" fg:x="217" fg:w="1"/><text x="98.4400%" y="79.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.45%)</title><rect x="98.1900%" y="53" width="0.4525%" height="15" fill="rgb(210,80,43)" fg:x="217" fg:w="1"/><text x="98.4400%" y="63.50"></text></g><g><title>core::ptr::drop_in_place&lt;nu_protocol::ty::Type&gt; (1 samples, 0.45%)</title><rect x="98.1900%" y="37" width="0.4525%" height="15" fill="rgb(247,160,36)" fg:x="217" fg:w="1"/><text x="98.4400%" y="47.50"></text></g><g><title>_start (3 samples, 1.36%)</title><rect x="97.7376%" y="485" width="1.3575%" height="15" fill="rgb(234,13,49)" fg:x="216" fg:w="3"/><text x="97.9876%" y="495.50"></text></g><g><title>__libc_start_main (3 samples, 1.36%)</title><rect x="97.7376%" y="469" width="1.3575%" height="15" fill="rgb(234,122,0)" fg:x="216" fg:w="3"/><text x="97.9876%" y="479.50"></text></g><g><title>[libc.so.6] (3 samples, 1.36%)</title><rect x="97.7376%" y="453" width="1.3575%" height="15" fill="rgb(207,146,38)" fg:x="216" fg:w="3"/><text x="97.9876%" y="463.50"></text></g><g><title>main (3 samples, 1.36%)</title><rect x="97.7376%" y="437" width="1.3575%" height="15" fill="rgb(207,177,25)" fg:x="216" fg:w="3"/><text x="97.9876%" y="447.50"></text></g><g><title>std::rt::lang_start_internal (3 samples, 1.36%)</title><rect x="97.7376%" y="421" width="1.3575%" height="15" fill="rgb(211,178,42)" fg:x="216" fg:w="3"/><text x="97.9876%" y="431.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (3 samples, 1.36%)</title><rect x="97.7376%" y="405" width="1.3575%" height="15" fill="rgb(230,69,54)" fg:x="216" fg:w="3"/><text x="97.9876%" y="415.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (3 samples, 1.36%)</title><rect x="97.7376%" y="389" width="1.3575%" height="15" fill="rgb(214,135,41)" fg:x="216" fg:w="3"/><text x="97.9876%" y="399.50"></text></g><g><title>nu::main (3 samples, 1.36%)</title><rect x="97.7376%" y="373" width="1.3575%" height="15" fill="rgb(237,67,25)" fg:x="216" fg:w="3"/><text x="97.9876%" y="383.50"></text></g><g><title>nu_command::default_context::create_default_context (1 samples, 0.45%)</title><rect x="98.6425%" y="357" width="0.4525%" height="15" fill="rgb(222,189,50)" fg:x="218" fg:w="1"/><text x="98.8925%" y="367.50"></text></g><g><title>nu_protocol::engine::engine_state::StateWorkingSet::add_decl (1 samples, 0.45%)</title><rect x="98.6425%" y="341" width="0.4525%" height="15" fill="rgb(245,148,34)" fg:x="218" fg:w="1"/><text x="98.8925%" y="351.50"></text></g><g><title>&lt;nu_command::filters::split_by::SplitBy as nu_protocol::engine::command::Command&gt;::name (1 samples, 0.45%)</title><rect x="98.6425%" y="325" width="0.4525%" height="15" fill="rgb(222,29,6)" fg:x="218" fg:w="1"/><text x="98.8925%" y="335.50"></text></g><g><title>all (221 samples, 100%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(221,189,43)" fg:x="0" fg:w="221"/><text x="0.2500%" y="527.50"></text></g><g><title>nu (221 samples, 100.00%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(207,36,27)" fg:x="0" fg:w="221"/><text x="0.2500%" y="511.50">nu</text></g><g><title>ansi_parser::parsers::parse_escape (2 samples, 0.90%)</title><rect x="99.0950%" y="485" width="0.9050%" height="15" fill="rgb(217,90,24)" fg:x="219" fg:w="2"/><text x="99.3450%" y="495.50"></text></g></svg></svg>